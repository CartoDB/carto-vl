{"version":3,"sources":["webpack://carto/webpack/universalModuleDefinition","webpack://carto/webpack/bootstrap","webpack://carto/./node_modules/cartocolor/cartocolor.js","webpack://carto/./node_modules/cartocolor/index.js","webpack://carto/./node_modules/colorbrewer/colorbrewer.js","webpack://carto/./node_modules/colorbrewer/index.js","webpack://carto/./node_modules/earcut/src/earcut.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/common.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/mat2.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/mat2d.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/mat3.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/mat4.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/quat.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/quat2.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/vec2.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/vec3.js","webpack://carto/./node_modules/gl-matrix/lib/gl-matrix/vec4.js","webpack://carto/./node_modules/inherits/inherits_browser.js","webpack://carto/./node_modules/jsep/build/jsep.js","webpack://carto/./node_modules/lineclip/index.js","webpack://carto/./node_modules/lru-cache/index.js","webpack://carto/./node_modules/lru-cache/node_modules/yallist/yallist.js","webpack://carto/./node_modules/mitt/dist/mitt.es.js","webpack://carto/./node_modules/process/browser.js","webpack://carto/./node_modules/pseudomap/map.js","webpack://carto/./node_modules/pseudomap/pseudomap.js","webpack://carto/./node_modules/util/support/isBufferBrowser.js","webpack://carto/./node_modules/util/util.js","webpack://carto/(webpack)/buildin/global.js","webpack://carto/./node_modules/worker-loader/dist/workers/InlineWorker.js","webpack://carto/./src/Layer.js","webpack://carto/./src/LayerConcurrencyHelper.js","webpack://carto/./src/Viz.js","webpack://carto/./src/basemaps.js","webpack://carto/./src/client/WindshaftMetadata.js","webpack://carto/./src/client/WindshaftRequestHelper.js","webpack://carto/./src/client/rsys.js","webpack://carto/./src/client/windshaft-filtering.js","webpack://carto/./src/client/windshaft.js","webpack://carto/./src/codecs/Base.js","webpack://carto/./src/codecs/Category.js","webpack://carto/./src/codecs/Date.js","webpack://carto/./src/codecs/Identity.js","webpack://carto/./src/codecs/Number.js","webpack://carto/./src/codecs/index.js","webpack://carto/./src/codecs/mvt/Category.js","webpack://carto/./src/codecs/mvt/Number.js","webpack://carto/./src/codecs/mvt/index.js","webpack://carto/./src/codecs/windshaft/TimeRange.js","webpack://carto/./src/codecs/windshaft/WindshaftDate.js","webpack://carto/./src/codecs/windshaft/index.js","webpack://carto/./src/constants/layer.js","webpack://carto/./src/constants/metadata.js","webpack://carto/./src/constants/viz.js","webpack://carto/./src/errors/carto-error.js","webpack://carto/./src/errors/carto-maps-api-error.js","webpack://carto/./src/errors/carto-parsing-error.js","webpack://carto/./src/errors/carto-runtime-error.js","webpack://carto/./src/errors/carto-validation-error.js","webpack://carto/./src/index.js","webpack://carto/./src/interactivity/Interactivity.js","webpack://carto/./src/interactivity/blendUtils.js","webpack://carto/./src/interactivity/commonFeature.js","webpack://carto/./src/interactivity/feature.js","webpack://carto/./src/interactivity/featureVizProperty.js","webpack://carto/./src/interactivity/lightweightFeature.js","webpack://carto/./src/renderer/Metadata.js","webpack://carto/./src/renderer/RenderLayer.js","webpack://carto/./src/renderer/Renderer.js","webpack://carto/./src/renderer/dataframe/Dataframe.js","webpack://carto/./src/renderer/dataframe/DummyDataframe.js","webpack://carto/./src/renderer/dataframe/FeatureIdsHelper.js","webpack://carto/./src/renderer/dataframe/ProjectionHelper.js","webpack://carto/./src/renderer/dataframe/ViewportHelper.js","webpack://carto/./src/renderer/dataframe/viewportFeature.js","webpack://carto/./src/renderer/decoder/common.js","webpack://carto/./src/renderer/decoder/index.js","webpack://carto/./src/renderer/decoder/lineDecoder.js","webpack://carto/./src/renderer/decoder/pointDecoder.js","webpack://carto/./src/renderer/decoder/polygonDecoder.js","webpack://carto/./src/renderer/schema.js","webpack://carto/./src/renderer/shaders/Cache.js","webpack://carto/./src/renderer/shaders/common/antialiasing/AntiAliasingShader.js","webpack://carto/./src/renderer/shaders/common/antialiasing/antialiasingFragmentShader.glsl","webpack://carto/./src/renderer/shaders/common/antialiasing/antialiasingVertexShader.glsl","webpack://carto/./src/renderer/shaders/geometry/line/lineFragmentShader.glsl","webpack://carto/./src/renderer/shaders/geometry/line/lineVertexShader.glsl","webpack://carto/./src/renderer/shaders/geometry/point/pointFragmentShader.glsl","webpack://carto/./src/renderer/shaders/geometry/point/pointVertexShader.glsl","webpack://carto/./src/renderer/shaders/geometry/polygon/polygonFragmentShader.glsl","webpack://carto/./src/renderer/shaders/geometry/polygon/polygonVertexShader.glsl","webpack://carto/./src/renderer/shaders/index.js","webpack://carto/./src/renderer/shaders/shaderCompiler.js","webpack://carto/./src/renderer/shaders/styler/stylerEncodeWidth.glsl","webpack://carto/./src/renderer/shaders/styler/stylerFragmentShader.glsl","webpack://carto/./src/renderer/shaders/styler/stylerShaders.js","webpack://carto/./src/renderer/shaders/styler/stylerVertexShader.glsl","webpack://carto/./src/renderer/shaders/symbolizer/symbolizerFragmentShader.glsl","webpack://carto/./src/renderer/shaders/symbolizer/symbolizerShaders.js","webpack://carto/./src/renderer/shaders/symbolizer/symbolizerVertexShader.glsl","webpack://carto/./src/renderer/shaders/utils.js","webpack://carto/./src/renderer/viz/colorspaces.js","webpack://carto/./src/renderer/viz/defaultSVGs.js","webpack://carto/./src/renderer/viz/expressions.js","webpack://carto/./src/renderer/viz/expressions/AlphaNormalize.js","webpack://carto/./src/renderer/viz/expressions/Animation.js","webpack://carto/./src/renderer/viz/expressions/AnimationGeneral.js","webpack://carto/./src/renderer/viz/expressions/AnimationRange.js","webpack://carto/./src/renderer/viz/expressions/BucketsGLSLHelper.js","webpack://carto/./src/renderer/viz/expressions/CategoryIndex.js","webpack://carto/./src/renderer/viz/expressions/Fade.js","webpack://carto/./src/renderer/viz/expressions/Image.js","webpack://carto/./src/renderer/viz/expressions/ListImage.js","webpack://carto/./src/renderer/viz/expressions/ListTransform.js","webpack://carto/./src/renderer/viz/expressions/Placement.js","webpack://carto/./src/renderer/viz/expressions/Ramp.js","webpack://carto/./src/renderer/viz/expressions/RampGeneric.js","webpack://carto/./src/renderer/viz/expressions/RampImage.js","webpack://carto/./src/renderer/viz/expressions/SVG.js","webpack://carto/./src/renderer/viz/expressions/Scaled.js","webpack://carto/./src/renderer/viz/expressions/Zoomrange.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterAggregation.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterAvg.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterCount.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterMax.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterMin.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterMode.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterSum.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterTime.js","webpack://carto/./src/renderer/viz/expressions/aggregation/cluster/ClusterTimeDimension.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalAggregation.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalAvg.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalCount.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalMax.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalMin.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalPercentile.js","webpack://carto/./src/renderer/viz/expressions/aggregation/global/GlobalSum.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportAggCalculator.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportAggregation.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportAvg.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportCount.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportMax.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportMin.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportPercentile.js","webpack://carto/./src/renderer/viz/expressions/aggregation/viewport/ViewportSum.js","webpack://carto/./src/renderer/viz/expressions/base.js","webpack://carto/./src/renderer/viz/expressions/basic/List.js","webpack://carto/./src/renderer/viz/expressions/basic/ListGeneric.js","webpack://carto/./src/renderer/viz/expressions/basic/category.js","webpack://carto/./src/renderer/viz/expressions/basic/constant.js","webpack://carto/./src/renderer/viz/expressions/basic/number.js","webpack://carto/./src/renderer/viz/expressions/basic/property.js","webpack://carto/./src/renderer/viz/expressions/basic/variable.js","webpack://carto/./src/renderer/viz/expressions/belongs.js","webpack://carto/./src/renderer/viz/expressions/between.js","webpack://carto/./src/renderer/viz/expressions/binary/Add.js","webpack://carto/./src/renderer/viz/expressions/binary/And.js","webpack://carto/./src/renderer/viz/expressions/binary/BinaryOperation.js","webpack://carto/./src/renderer/viz/expressions/binary/Div.js","webpack://carto/./src/renderer/viz/expressions/binary/Equals.js","webpack://carto/./src/renderer/viz/expressions/binary/GreaterThan.js","webpack://carto/./src/renderer/viz/expressions/binary/GreaterThanOrEqualTo.js","webpack://carto/./src/renderer/viz/expressions/binary/LessThan.js","webpack://carto/./src/renderer/viz/expressions/binary/LessThanOrEqualTo.js","webpack://carto/./src/renderer/viz/expressions/binary/Mod.js","webpack://carto/./src/renderer/viz/expressions/binary/Mul.js","webpack://carto/./src/renderer/viz/expressions/binary/NotEquals.js","webpack://carto/./src/renderer/viz/expressions/binary/Or.js","webpack://carto/./src/renderer/viz/expressions/binary/Pow.js","webpack://carto/./src/renderer/viz/expressions/binary/Sub.js","webpack://carto/./src/renderer/viz/expressions/blend.js","webpack://carto/./src/renderer/viz/expressions/buckets.js","webpack://carto/./src/renderer/viz/expressions/classification/Classifier.js","webpack://carto/./src/renderer/viz/expressions/classification/ClassifierGLSLHelper.js","webpack://carto/./src/renderer/viz/expressions/classification/GlobalEqIntervals.js","webpack://carto/./src/renderer/viz/expressions/classification/GlobalQuantiles.js","webpack://carto/./src/renderer/viz/expressions/classification/GlobalStandardDev.js","webpack://carto/./src/renderer/viz/expressions/classification/ViewportEqIntervals.js","webpack://carto/./src/renderer/viz/expressions/classification/ViewportQuantiles.js","webpack://carto/./src/renderer/viz/expressions/classification/ViewportStandardDev.js","webpack://carto/./src/renderer/viz/expressions/color/CIELab.glsl","webpack://carto/./src/renderer/viz/expressions/color/CIELab.js","webpack://carto/./src/renderer/viz/expressions/color/NamedColor.js","webpack://carto/./src/renderer/viz/expressions/color/Opacity.js","webpack://carto/./src/renderer/viz/expressions/color/cssColorNames.js","webpack://carto/./src/renderer/viz/expressions/color/hex.js","webpack://carto/./src/renderer/viz/expressions/color/hsl.js","webpack://carto/./src/renderer/viz/expressions/color/hsv.js","webpack://carto/./src/renderer/viz/expressions/color/palettes.js","webpack://carto/./src/renderer/viz/expressions/color/palettes/Palette.js","webpack://carto/./src/renderer/viz/expressions/color/rgb.js","webpack://carto/./src/renderer/viz/expressions/constants.js","webpack://carto/./src/renderer/viz/expressions/histogram/GlobalHistogram.js","webpack://carto/./src/renderer/viz/expressions/histogram/Histogram.js","webpack://carto/./src/renderer/viz/expressions/histogram/ViewportHistogram.js","webpack://carto/./src/renderer/viz/expressions/interpolators.js","webpack://carto/./src/renderer/viz/expressions/linear.js","webpack://carto/./src/renderer/viz/expressions/now.js","webpack://carto/./src/renderer/viz/expressions/ordering.js","webpack://carto/./src/renderer/viz/expressions/reverse/Reverse.js","webpack://carto/./src/renderer/viz/expressions/reverse/ReverseList.js","webpack://carto/./src/renderer/viz/expressions/reverse/ReversePalette.js","webpack://carto/./src/renderer/viz/expressions/stats.js","webpack://carto/./src/renderer/viz/expressions/time.js","webpack://carto/./src/renderer/viz/expressions/timeRange.js","webpack://carto/./src/renderer/viz/expressions/top.js","webpack://carto/./src/renderer/viz/expressions/transformation/Rotate.js","webpack://carto/./src/renderer/viz/expressions/transformation/Translate.js","webpack://carto/./src/renderer/viz/expressions/transition.js","webpack://carto/./src/renderer/viz/expressions/unary.js","webpack://carto/./src/renderer/viz/expressions/utils.js","webpack://carto/./src/renderer/viz/expressions/viewportFeatures.js","webpack://carto/./src/renderer/viz/expressions/zoom.js","webpack://carto/./src/renderer/viz/parser.js","webpack://carto/./src/setup/auth-service.js","webpack://carto/./src/setup/config-service.js","webpack://carto/./src/sources/Base.js","webpack://carto/./src/sources/BaseWindshaft.js","webpack://carto/./src/sources/DataframeCache.js","webpack://carto/./src/sources/Dataset.js","webpack://carto/./src/sources/GeoJSON.js","webpack://carto/./src/sources/MVT.js","webpack://carto/./src/sources/MVTMetadata.js","webpack://carto/./src/sources/MVTWorkers.worker.js","webpack://carto/./src/sources/SQL.js","webpack://carto/./src/sources/TileClient.js","webpack://carto/./src/sources/geojson/GeoJSOMetadataBuilder.js","webpack://carto/./src/sources/geojson/GeoJSONGeometryTransformer.js","webpack://carto/./src/sources/geojson/GeoJSONGeometryType.js","webpack://carto/./src/sources/geojson/GeoJSONMetadata.js","webpack://carto/./src/utils/CancelablePromise.js","webpack://carto/./src/utils/collision.js","webpack://carto/./src/utils/events.js","webpack://carto/./src/utils/geometry.js","webpack://carto/./src/utils/time/TimeRange.js","webpack://carto/./src/utils/time/TimeZoneDate.js","webpack://carto/./src/utils/time/parseISO.js","webpack://carto/./src/utils/time/periodISO.js","webpack://carto/./src/utils/util.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,2BAA2B;AACvC,WAAW,wBAAwB;AACnC,YAAY,2BAA2B;AACvC,WAAW,wBAAwB;AACnC,WAAW,wBAAwB;AACnC,cAAc,2BAA2B;AACzC,aAAa,wBAAwB;AACrC,eAAe,wBAAwB;AACvC,aAAa,2BAA2B;AACxC,WAAW,2BAA2B;AACtC,aAAa,2BAA2B;AACxC,aAAa;AACb;;AAEA,kBAAkB,mBAAO,CAAC,wDAAa;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,IAA0C;AAC9C,IAAI,oCAAO,UAAU;AAAA;AAAA;AAAA;AAAA,oGAAC;AACtB,CAAC,MAAM,EAIN;;AAED,CAAC;;;;;;;;;;;;ACn1DD,iBAAiB,mBAAO,CAAC,6DAAc;;;;;;;;;;;;ACAvC;AACA;AACA;;AAEA,mBAAmB;AACnoCAAO,WAAW;AAAA;AAAA;AAAA;AAAA,oGAAC;AACvB,CAAC,MAAM,EAIN;;AAED,CAAC;;;;;;;;;;;;AC1TD,iBAAiB,mBAAO,CAAC,mEAAkB;;;;;;;;;;;;;ACA9B;;AAEb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0EAA0E;AAC1E;AACA;AACA;;AAEA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC,KAAK;AACL,2BAA2B,YAAY;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,iCAAiC,+BAA+B;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,yCAAyC;AAC3D;;AAEA,mBAAmB,iBAAiB;AACpC,uBAAuB,oBAAoB;AAC3C,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACE;AACF;AACA;AACA;AACE;AACF;AACA;AACA;;;;;;;;;;;;;;ACT5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACO;AACA;AACA;;AAEP;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA,C;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AAC7S;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;ACjbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACvd;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;ACneP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACttB;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;ACzyBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,UAAU,UAAU;AAChC;AACA;AACA;AACA;;AAEA,YAAY,UAAU,WAAW;AACjC;AACA;AACA;AACA;;AAEA,aAAa,WAAW,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,WAAW,WAAW;AACrC,eAAe,WAAW,WAAW;AACrC,eAAe,WAAW,YAAY;;AAEtC,iBAAiB,aAAa,aAAa;AAC3C,iBAAiB,aAAa,aAAa;AAC3C,iBAAiB,aAAa,cAAc;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,kDAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,WAAW,WAAW;AACnC,aAAa,WAAW,WAAW;AACnC,aAAa,WAAW,YAAY;;AAEpC;AACA,sBAAsB,wBAAwB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,wBAAwB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,kDAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACO;AACP,wBAAwB,qDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kDAAgB,+BAA+B,kDAAgB,+BAA+B,kDAAgB;AAC/I;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,uEAAuE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB;AAC/zC;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;AChzDP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACN;AACA;AACA;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA,UAAU,kDAAgB;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA,WAAW,iDAAe;AAC1B,WAAW,iDAAe;AAC1B,WAAW,iDAAe;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA,wBAAwB;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,KAAK;AAClB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACO,YAAY,8CAAU;;AAE7B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AA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WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP,eAAe,qDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP,eAAe,qDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP,eAAe,qDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA,cAAc,+CAAW;AACzB,EAAE,oDAAgB;AAClB,cAAc,qDAAmB;AACjC,EAAE,uDAAmB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACO,cAAc,6CAAS;;AAE9B;AACA;AACA,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO,cAAc,6CAAS;;AAE9B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA,sBAAsB,kDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACO,UAAU,4CAAQ;;AAEzB;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACO,aAAa,+CAAW;;AAE/B;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACO,oBAAoB,sDAAkB;;AAE7C;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACjoB,C;;;;;;;;;;;;AC30BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA,UAAU,iDAAe;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB;AACnI;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB;AACpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA,CAAC,G;;;;;;;;;;;;AChnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA,UAAU,iDAAe;AACzB,UAAU,iDAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACxN;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB,kBAAkB;AACtC;AACA,oBAAoB,kBAAkB;AACtC;;AAEA;AACA;AACA,CAAC,G;;;;;;;;;;;;AClxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAe;AACxB,SAAS,iDAAe;AACxB;AACA,GAAG;AACH;AACA,SAAS,iDAAe;AACxB,SAAS,iDAAe;AACxB;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AAC7S;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB,kBAAkB,kBAAkB;AACxD;AACA,oBAAoB,kBAAkB,kBAAkB;AACxD;;AAEA;AACA;AACA,CAAC,G;;;;;;;;;;;ACrmBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC,GAAG;AACH;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC,EAAE;AAC5D,6BAA6B,qCAAqC,EAAE;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,gCAAgC;AAChC;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,cAAc;AACd,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gCAAgC;AACvC;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,+DAA+D;;AAE5F;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,KAA8B,EAAE,iBAWnC;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3tBY;;AAEb;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;;AAEA,mCAAmC;AACnC;;AAEA,yCAAyC;AACzC;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA,aAAa,0BAA0B;AACvC;;AAEA,aAAa,kBAAkB;AAC/B;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;;AAEA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC;AAClC,uCAAuC;;AAEvC,kCAAkC;AAClC,uCAAuC;;AAEvC;AACA;;;;;;;;;;;;;AC3HY;;AAEZ;;AAEA;AACA;AACA,UAAU,mBAAO,CAAC,kDAAW;AAC7B,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;AACA,cAAc,mBAAO,CAAC,yEAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,oBAAoB,iCAAiC;AACrD;AACA,CAAC;;AAED;AACA,oBAAoB,sBAAsB;AAC1C;AACA,CAAC;;AAED;AACA,oBAAoB,+BAA+B;AACnD;AACA,CAAC;;AAED;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACldA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,+BAA+B,iBAAiB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B;AAClE;AACA;AACA,QAAQ,2BAA2B;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2BAA2B;AAC1E;AACA;AACA,QAAQ,6BAA6B;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACjXA;AAAA;AACA;AACA;;;;AAIA;;;AAGA;;;;;;AAMA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,IAAI;AACjB;AACA;AACA;AACA,qDAAqD,cAAc,EAAE;AACrE,oDAAoD,oBAAoB,EAAE;AAC1E;AACA;AACA;;AAEe,mEAAI,EAAC;AACpB;;;;;;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD,mBAAmB,mBAAO,CAAC,0DAAa;AACxC;;;;;;;;;;;;;ACRA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH,sBAAsB;AACtB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0EAAoB;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,mBAAmB,mBAAO,CAAC,6DAAU;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzkBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AACQ;AACR;AACgB;AACG;AACM;AACsD;AACrC;;AAEf;AAClB;AAC8B;AACD;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B,MAAM,oBAAoB;AAC3E;AACA,SAAS,0BAA0B;AACnC,SAAS,oBAAoB;AAC7B;AACA,+BAA+B;AAC/B;AACA,UAAU,OAAO,+CAA+C,kBAAkB;AAClF,UAAU,aAAa;AACvB,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,wBAAwB,oDAAI;AAC5B,gCAAgC,6DAAW;;AAE3C,qCAAqC,gEAAsB;AAC3D;AACA;AACA;AACA,6BAA6B,8CAAI;;AAEjC;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B,uEAAiB,+BAA+B,MAAM;AAChF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+DAAK;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,8CAAI;AACjC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,eAAe,mFAA+B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,0EAAoB,WAAW,4FAAyB;AAC9E;AACA,aAAa,mDAAI;AACjB,sBAAsB,0EAAoB,sCAAsC,4FAAyB;AACzG;AACA;AACA,sBAAsB,0EAAoB,uCAAuC,4FAAyB;AAC1G;AACA;;AAEA;AACA;AACA,sBAAsB,0EAAoB,eAAe,4FAAyB;AAClF;AACA,gCAAgC,qDAAU;AAC1C,sBAAsB,0EAAoB,oEAAoE,4FAAyB;AACvI;AACA;;AAEA;AACA,YAAY,mDAAI;AAChB,sBAAsB,0EAAoB,YAAY,4FAAyB;AAC/E;;AAEA,6BAA6B,4CAAG;AAChC,sBAAsB,0EAAoB;AAC1C;AACA,gBAAgB,4FAAyB;AACzC;AACA;;AAEA;AACA;AACA,sBAAsB,0EAAoB;AAC1C;AACA,gBAAgB,4FAAyB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,0DAAQ;AACrC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnnBA;AAAA;AAAA;AAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,SAAS;AACT,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,0BAA0B,uEAAiB;AAC3C,0BAA0B,UAAU,wBAAwB,sBAAsB;AAClF;AACA,SAAS;AACT;AACA,0BAA0B,uEAAiB;AAC3C,0BAA0B,UAAU,wBAAwB,sBAAsB,GAAG,sBAAsB;AAC3G;AACA;AACA,0BAA0B,uEAAiB;AAC3C,0BAA0B,gBAAgB,GAAG,gBAAgB,wBAAwB,sBAAsB,GAAG,sBAAsB;AACpI;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACQ;AACmB;AAClB;AACa;AACoB;AACtB;AAC3B;AACuE;AACrC;AAC2B;AACI;AACP;AACI;AACK;AACI;AAClD;AACP;AACe;AACe;AAC3B;AACgE;;AAEjH,oDAAoD,6DAAK;AACzD,oDAAoD,gEAAQ;AAC5D,2DAA2D,6DAAK;AAChE,2DAA2D,gEAAQ;AACnE,oDAAoD,iEAAS;AAC7D,qDAAqD,kEAAU;AAC/D,yDAAyD,wEAAK,CAAC,kEAAI;AACnE,kEAAkE,4EAAS,CAAC,kEAAU,KAAK,kEAAU;AACrG,4DAA4D,2FAAS,CAAC,kEAAU,KAAK,kEAAU;AAC/F,8CAA8C,gEAAQ;AACtD;AACA,2CAA2C,oBAAoB;AAC/D;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe,gFAAgF,sBAAsB;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,aAAa,OAAO,uIAAuI,kCAAkC;AAC7L,aAAa,MAAM,yHAAyH;AAC5I,aAAa,UAAU;AACvB,aAAa,eAAe,iFAAiF,8CAA8C,KAAK,wCAAwC;AACxM,aAAa,MAAM,0EAA0E,4BAA4B,GAAG,6BAA6B,MAAM;AAC/J,aAAa,OAAO,sTAAsT,qGAAqG;AAC/a,aAAa,OAAO;AACpB;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA,gDAAgD;AAChD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,wEAAwB;AACrE;AACA;AACA;AACA;AACA;AACA,2CAA2C,oFAAY;AACvD;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,oFAAY;;AAExC,yCAAyC,sEAAc;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,wEAAwB;AACxD,qCAAqC,oEAAoB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,wDAAM,QAAQ,wDAAM;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8DAAa;AACtC;AACA,qDAAqD,6DAAK;AAC1D,qDAAqD,gEAAQ;AAC7D,4DAA4D,6DAAK;AACjE,4DAA4D,gEAAQ;AACpE;AACA,SAAS,uBAAuB,8DAAa;AAC7C;AACA,qDAAqD,6DAAK;AAC1D,qDAAqD,gEAAQ;AAC7D,4DAA4D,6DAAK;AACjE,4DAA4D,gEAAQ;AACpE;AACA,SAAS,uBAAuB,8DAAa;AAC7C;AACA,qDAAqD,6DAAK;AAC1D,qDAAqD,gEAAQ;AAC7D,4DAA4D,6DAAK;AACjE,4DAA4D,gEAAQ;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,+DAAO,0BAA0B,oBAAoB;AACvG;AACA;AACA,kDAAkD,+DAAO,0BAA0B,oBAAoB;AACvG;AACA;AACA,wDAAwD,+DAAO,0BAA0B,0BAA0B;AACnH;AACA;AACA,wDAAwD,+DAAO,0BAA0B,0BAA0B;AACnH;AACA;AACA,mDAAmD,+DAAO,2BAA2B,sBAAsB;AAC3G;AACA;AACA,mDAAmD,+DAAO;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD,eAAe,+FAAqB,kBAAkB,iGAAuB,EAAE;AAClI,aAAa,4BAA4B;AACzC;AACA;AACA,kDAAkD,eAAe,6FAAoB,kBAAkB,+FAAsB,EAAE;AAC/H,aAAa,4BAA4B;AACzC;AACA;AACA,qDAAqD,eAAe,mGAAuB,kBAAkB,qGAAyB,EAAE;AACxI,aAAa,4BAA4B;AACzC;;AAEA;AACA;AACA,qCAAqC,sFAAa;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,wEAAwB;AACzD;AACA;AACA;AACA;AACA,aAAa;AACb,0BAA0B,uEAAiB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB;AAChB;AACA;AACA,YAAY,mDAAI;AAChB,uCAAuC;AACvC;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB,qCAAqC,+EAAkB;AACvD;AACA,kBAAkB,0EAAoB;AACtC;AACA,YAAY,4FAAyB;AACrC;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA,YAAY,mDAAI;AAChB,4BAA4B,mDAAI,4DAA4D,uFAAe;AAC3G;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA,YAAY,mDAAI;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,sEAAc;AACpE;AACA;;AAEA,YAAY,mDAAI;AAChB,8BAA8B,8DAAc;AAC5C,0BAA0B,0EAAoB;AAC9C,uCAAuC,WAAW,yBAAyB,8DAAc,CAAC;AAC1F,oBAAoB,4FAAyB;AAC7C;AACA;;AAEA,8BAA8B,8DAAc;AAC5C,0BAA0B,0EAAoB;AAC9C,uCAAuC,WAAW,uBAAuB,8DAAc,CAAC;AACxF,oBAAoB,4FAAyB;AAC7C;AACA;AACA,SAAS;AACT,sBAAsB,0EAAoB;AAC1C;AACA,gBAAgB,4FAAyB;AACzC;AACA;AACA;;AAEA;AACA,yBAAyB,oFAAY;AACrC,6BAA6B,oFAAY;AACzC,8BAA8B,oFAAY;AAC1C,yBAAyB,oFAAY;AACrC,kCAAkC,oFAAY;AAC9C,4BAA4B,oFAAY;AACxC,wBAAwB,oFAAY;AACpC;;AAEA;AACA;AACA;;AAEA,QAAQ,wEAAwB;AAChC,gDAAgD,sEAAc;AAC9D,0BAA0B,0EAAoB;AAC9C,wBAAwB,UAAU;AAClC,oBAAoB,4FAAyB;AAC7C;AACA,SAAS;;AAET;AACA,uCAAuC,wEAAwB;AAC/D,0CAA0C,IAAI;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ,IAAI,mCAAmC;;AAE/E,2BAA2B,wEAAwB;AACnD,gCAAgC,SAAS,IAAI,0BAA0B;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,0EAAoB;AAC1C,iCAAiC,SAAS,sBAAsB,SAAS,wBAAwB,YAAY;AAC7G,gBAAgB,4FAAyB;AACzC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACniBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;AC7DP;AAAA;AAAA;AAAA;AAAiD;AACO;;AAExD;AACA;AACA;AACA,sBAAsB,qCAAqC;;AAE3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gCAAgC,4DAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iEAAqB;AAClD;AACA,KAAK;AACL;;;;;;;;;;;;;AC/KA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACmD;;AAE3F;;AAEe;AACf;AACA;AACA;;AAEA;AACA,6DAA6D,gDAAO,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sBAAsB,oEAAiB,kDAAkD,oBAAoB;AAC7G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,oEAAiB;AACvC,iFAAiF,oBAAoB,iBAAiB,kBAAkB;AACxI,gBAAgB,mFAAsB;AACtC;AACA,SAAS;AACT,sBAAsB,oEAAiB;AACvC,wEAAwE,kBAAkB;AAC1F,gBAAgB,mFAAsB;AACtC;AACA;AACA,kBAAkB,oEAAiB,IAAI,kCAAkC,GAAG,mFAAsB;AAClG;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA,kBAAkB,KAAK,GAAG,0BAA0B;AACpD;;AAEA;AACA,kBAAkB,IAAI,GAAG,qBAAqB;AAC9C;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,YAAY,OAAO;AACnB;AACO;AACP,YAAY;AACZ;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA,YAAY,0BAA0B,yDAAyD;AAC/F;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY,MAAM,sBAAsB;AACxC;AACO;AACP;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,MAAM,sBAAsB;AACxC;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,YAAY;AACvC,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEe,gEAAC,gCAAgC,EAAC;;;;;;;;;;;;;AClIjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACkB;AACxB;AACkB;AAC5B;AACF;AACQ;AACM;AACP;AACJ;AACQ;AACZ;AACU;AACQ;AACI;AACA;AACQ;AACA;AACA;AACE;AACF;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4EAAG;AACrB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wEAAK,uBAAuB,6EAAU;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,+EAAgB,WAAW,iFAAkB,WAAW,iFAAkB;AAC5F;AACA;AACA;;AAEA;AACA,kBAAkB,yEAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oEAAE;AACpB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qEAAG;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,+EAAM;AACpC;;AAEA;AACA,8BAA8B,kFAAS;AACvC;;AAEA;AACA,8BAA8B,iFAAQ;AACtC;;AAEA;AACA,8BAA8B,0FAAiB;AAC/C;;AAEA;AACA,8BAA8B,oFAAW;AACzC;;AAEA;AACA,8BAA8B,6FAAoB;AAClD;;AAEA;AACA;AACA,kBAAkB,iGAAU,WAAW,iGAAU,WAAW,iGAAU,WAAW,kGAAW,WAAW,iGAAU;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iFAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,iFAAQ;AACtC;;AAEA;AACA,8BAA8B,0FAAiB;AAC/C;;AAEA;AACA,8BAA8B,oFAAW;AACzC;;AAEA;AACA,8BAA8B,6FAAoB;AAClD;;AAEA;AACA,8BAA8B,+EAAM;AACpC;;AAEA;AACA,8BAA8B,kFAAS;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wEAAK,uBAAuB,6EAAU;AACxD;AACA;AACA;;AAEA;AACA,kBAAkB,iFAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,+EAAgB,WAAW,iFAAkB,WAAW,iFAAkB;AAC5F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oEAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qEAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yEAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kBAAkB,WAAW,cAAc,OAAO,cAAc;AACvF,kBAAkB,kBAAkB,OAAO,yBAAyB;AACpE,qBAAqB,kBAAkB,WAAW,yBAAyB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACO,wCAAwC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACheiC;AACU;AACgB;AACnB;AACoB;AACE;;AAEqC;AACR;AACzC;AAC8B;;AAEhF;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,6BAA6B;;AAE5C;AACA,iBAAiB,wDAAM;AACvB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAA+B,OAAO,6BAA6B;;AAE7F;AACA,yBAAyB,8BAA8B;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sEAAmB;AACpC,gBAAgB,sEAAmB,MAAM,OAAO,oEAAgB,eAAe;AAC/E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE,oEAAgB;AAChF,kEAAkE,oEAAgB;AAClF;AACA;AACA,0BAA0B,sEAAoB;AAC9C,+EAA+E,mBAAmB,0CAA0C,aAAa;AACzJ,oBAAoB,wFAAyB;AAC7C;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;;AAE5C,8BAA8B,wDAAM;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oDAAoD,uBAAuB;AAC3E,eAAe,6BAA6B;;AAE5C;AACA;AACA;;AAEA,0BAA0B,OAAO;;AAEjC;AACA;AACA;AACA,0BAA0B,0EAAwC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC;;AAEA,gBAAgB;AAChB;;AAEA,qCAAqC,qDAAqD;AAC1F;AACA;AACA;AACA;AACA,8BAA8B,oDAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,oEAAiB,+CAA+C,mFAAsB;AAC5G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,oEAAgB;AAChE;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,sEAAmB;AACxD;AACA;AACA;AACA,gDAAgD,wDAAM;AACtD;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mCAAmC,gBAAgB;AACnD,gDAAgD;AAChD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,yEAAyE,sEAAmB;AAC5F,4EAA4E;AAC5E;;AAEA;AACA,iDAAiD,OAAO;AACxD,oCAAoC,gEAA8B;AAClE,yBAAyB,QAAQ,QAAQ,8BAA8B,GAAG,UAAU;AACpF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,+DAAsB;AACxD;AACA;;AAEA;AACA;AACA,eAAe,qCAAqC;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA,8BAA8B,oEAAiB,8CAA8C,OAAO,KAAK,mFAAsB;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,QAAQ,GAAG,KAAK;AACzG;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;;AAET,yBAAyB,6DAAa;AACtC,uBAAuB,yEAAqB,KAAK;AACjD;;AAEA,mBAAmB,0DAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,wBAAwB,sEAAmB;AAC3C,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,6DAAa;AAChC;AACA,mBAAmB,6DAAa;AAChC;AACA;AACA,mBAAmB,6DAAa;AAChC;AACA,sBAAsB,oEAAiB,iCAAiC,KAAK,KAAK,mFAAsB;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;ACreA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAA+B;;AAEhB,4BAA4B,6CAAS;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAA+B;AACO;;AAEvB,wBAAwB,6CAAS;AAChD;AACA;;AAEA,eAAe,MAAM;AACrB,yBAAyB,oDAAa;AACtC;AACA;;AAEA;AACA;AACA,eAAe,oDAAa;AAC5B;;AAEA;AACA;AACA;AACA,eAAe,oDAAa;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,oDAAa;AAC5B;;AAEA;AACA;AACA,mBAAmB,UAAU,GAAG,mBAAmB;AACnD;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAA+B;;AAE/B;AACA;AACA;AACe,4BAA4B,6CAAS;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAuC;AAC4C;;AAEpE,0BAA0B,iDAAa;AACtD;AACA;AACA,4BAA4B,8FAA0B;AACtD;AACA;AACA;;AAEA;AACA,sBAAsB,8FAA0B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,8FAA0B;AAC9C;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACI;AACR;AAC2D;;AAE3E;AACf;AACA;AACA,uBAAuB,+CAAW;AAClC;AACA,uBAAuB,iDAAa;AACpC;AACA,uBAAuB,6CAAS;AAChC;AACA,sBAAsB,mEAAiB;AACvC,mDAAmD,KAAK;AACxD,gBAAgB,kFAAsB;AACtC;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAwC;AACqD;;AAE9E,+BAA+B,iDAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mEAAiB;AACvC,0DAA0D,eAAe,iFAAiF,kBAAkB,MAAM,cAAc;AAChM,gBAAgB,kFAAsB;AACtC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAoC;AACyD;;AAE9E,6BAA6B,+CAAW;AACvD;AACA;AACA;AACA,sBAAsB,mEAAiB;AACvC,0DAA0D,eAAe,+EAA+E,kBAAkB,MAAM,cAAc;AAC9L,gBAAgB,kFAAsB;AACtC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACI;AACsD;;AAE9E;AACf;AACA;AACA,uBAAuB,+CAAW;AAClC;AACA,uBAAuB,iDAAa;AACpC;AACA,sBAAsB,mEAAiB;AACvC,uEAAuE,KAAK;AAC5E,gBAAgB,kFAAsB;AACtC;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAgC;AACS;;AAE1B,6BAA6B,6CAAS;AACrD;AACA;;AAEA;AACA,eAAe,MAAM;AACrB;AACA,0BAA0B,qDAAc,EAAE,qBAAqB;;AAE/D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,qDAAc,EAAE,qBAAqB;AAC/D;AACA;;AAEA;AACA,eAAe,qDAAc;AAC7B;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,eAAe,yDAAkB;AACjC;;AAEA;AACA,eAAe,qDAAc,EAAE,mCAAmC;AAClE;;AAEA;AACA;AACA,mBAAmB,UAAU,GAAG,mBAAmB;AACnD;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAgC;AACS;;AAE1B,iCAAiC,6CAAS;AACzD;AACA;;AAEA,eAAe,MAAM;AACrB;AACA,yBAAyB,oDAAa;AACtC;;AAEA;AACA,eAAe,oDAAa;AAC5B;;AAEA;AACA;AACA;AACA,eAAe,oDAAa;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,UAAU,GAAG,mBAAmB;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAa;AACxB;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACI;AACS;AACR;AACqD;;AAE/E;AACf;AACA;AACA,uBAAuB,+CAAW;AAClC;AACA,uBAAuB,iDAAa;AACpC;AACA,uBAAuB,sDAAkB;AACzC;AACA,uBAAuB,kDAAc;AACrC;AACA,sBAAsB,oEAAiB;AACvC,iFAAiF,KAAK;AACtF,gBAAgB,mFAAsB;AACtC;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAO;;;;;;;;;;;;;ACAP;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACA;;;;;;;;;;;;;AC1BP;AAAA;AAAA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,WAAW,GAAG,cAAc;AAC7C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gCAAgC,oDAAU;AACzD;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gCAAgC,oDAAU;AACzD;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,gCAAgC,oDAAU;AACzD;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,mCAAmC,oDAAU;AAC5D;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA,MAAM;AACN,MAAM;AACN,MAAM;AACN;AACA;AACA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;;AAEsD;AACI;AAClC;AACkC;AAC9B;AAC8B;AAClB;AACA;AACR;AACA;AACS;AAC2C;;AAEpF;AACA;AACA,0GAA0G,kEAAkE;AAC5K;AACA;;AAEuC;;AAEvC;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AAC0C;;AAE1C,gBAAgB,CAAC,iEAAO,EAAE,yDAAG,EAAE,iEAAO,EAAE,yDAAG;;AAE4H;AACxJ,gEAAC,CAAC,+DAAO,EAAE,qDAAE,EAAE,uDAAG,EAAE,kFAAc,EAAE,wFAAgB,UAAU,mEAAW,EAAE,qDAAK,EAAE,iDAAG,EAAE,mFAAa,EAAE,iDAAQ,EAAE,EAAC;;;;;;;;;;;;;ACxEhI;AAAA;AAAA;AAAA;AAAA;AAAwB;AACK;AACsE;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,2BAA2B,kBAAkB;AACzG;AACA;AACA;AACA,cAAc,0BAA0B,cAAc,kBAAkB,cAAc,kBAAkB;AACxG,cAAc,OAAO,YAAY;AACjC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE,iCAAiC,8CAAK;AACtC,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS,yFAAyF;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,oDAAI;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,eAAe;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,qDAAqD,gCAAgC;AACrF;;AAEA;AACA;AACA,mDAAmD,4CAA4C;AAC/F;AACA;;AAEA;AACA;AACA,mDAAmD,+CAA+C;AAClG;AACA;;AAEA,6CAA6C,gCAAgC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,8BAA8B;AACpE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD,kDAAkD;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sEAAoB;AACtC;AACA,YAAY,wFAAyB;AACrC;AACA;;AAEA;AACA,kBAAkB,sEAAoB;AACtC;AACA,YAAY,wFAAyB;AACrC;AACA;;AAEA,mDAAmD,8CAAK;AACxD,kBAAkB,sEAAoB;AACtC;AACA,YAAY,wFAAyB;AACrC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sEAAoB;AACtC;AACA,YAAY,wFAAyB;AACrC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sEAAoB;AACtC,oCAAoC,UAAU,uBAAuB,kBAAkB;AACvF,YAAY,wFAAyB;AACrC;AACA;AACA;;;;;;;;;;;;;ACxXA;AAAA;AAAA;AAAA;AAAqF;;AAE9E;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,uEAAK,CAAC,2EAAS,CAAC,0EAAQ,mBAAmB,4EAAU,KAAK,4EAAU;AACpF;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uEAAK;AAC/B;AACA;AACA,YAAY,uEAAK,IAAI,2EAAS,CAAC,0EAAQ,mBAAmB,4EAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA,gBAAgB,YAAY,OAAO;AACnC,KAAK;;AAEL;AACA,eAAe,OAAO;AACtB;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAsD;AAC6C;AACvC;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA,aAAa,OAAO;AACpB,cAAc,OAAO,uCAAuC,WAAW;AACvE,cAAc,OAAO,kCAAkC,OAAO;AAC9D,cAAc,UAAU,sBAAsB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,qBAAqB;AACnC,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;;AAEe;AACf,8BAA8B,uDAAuD;AACrF;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;AACA,QAAQ,uEAAwB;AAChC;AACA,SAAS;AACT;;AAEA;AACA,eAAe,mEAAmE;AAClF,mBAAmB,2DAAkB;AACrC;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA,kBAAkB,uEAAwB;AAC1C,0BAA0B,sEAAoB;AAC9C,iCAAiC,SAAS;AAC1C,oBAAoB,wFAAyB;AAC7C;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,QAAQ,uEAAwB;AAChC;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC9JA;AAAA;AAAA;AAAA;AAA8E;AAClB;;AAE5D;AACA;AACA,uDAAuD,cAAc;AACrE;AACA,aAAa,OAAO;AACpB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA,uBAAuB,2EAAuB,0FAA0F,uEAAkB;AAC1J,qBAAqB,yEAAqB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAA8E;AACqB;AACvC;;AAE5D;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA,IAAI,uEAAwB;AAC5B;AACA,KAAK;AACL;;AAEA;AACA,WAAW,+DAA+D;AAC1E;AACA;AACA,eAAe,2EAAuB;AACtC;AACA;AACA,eAAe,yEAAqB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,gBAAgB;AAClD,aAAa;;AAEb;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,qBAAqB;AAC7D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uEAAwB;AAClD,kCAAkC,sEAAoB;AACtD,yCAAyC,SAAS;AAClD,4BAA4B,wFAAyB;AACrD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,uEAAwB;AACxC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;;;;;;;;;;;;AC5JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACf;AAC0B;;AAEzE;AACO;;AAEP;AACO;AACP;AACA;;AAEe;AACf,kBAAkB,+EAA+E,IAAI,eAAe,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,kBAAkB,mEAAiB;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C,qFAA0B;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,wDAAa;AAC/B;AACA;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACoD;AACjD;AACkB;;AAErD;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qEAAqE,6DAAa;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,uCAAuC,EAAE;AAClF;;AAEA;AACA,eAAe,uDAAuD;AACtE,kCAAkC;AAClC,mBAAmB,8DAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qEAAqE,uCAAuC,EAAE;AAC9G,0BAA0B,uFAAkB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kCAAkC,EAAE;;AAE/E;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACc;AAC4C;AACzD;AAC8B;AACb;AACqD;AACrD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;;AAEP;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEA;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yCAAyC,8DAAkB,CAAC;AAC5D,QAAQ,2HAAuB;;AAE/B;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,6DAAa;AAChD;AACA;AACA,mCAAmC,6DAAa;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,6BAA6B;;AAE5C,mCAAmC,6DAAa,gCAAgC,6DAAa;AAC7F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,6BAA6B,6DAAa;AACvD;AACA,aAAa,6BAA6B,6DAAa;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0FAA0F,0EAAyB;AACnH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,6DAAa,4BAA4B,6DAAa;AACzF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,6BAA6B,6DAAa;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,6DAAa,4BAA4B,6DAAa;AACzF,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,qFAAqF;AACrF;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC,6DAAa,4BAA4B,6DAAa;AACzF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET,iCAAiC,6DAAa;AAC9C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA,YAAY,8CAAI;AAChB,YAAY,8CAAI;AAChB,YAAY,8CAAI;AAChB,YAAY,8CAAI;;AAEhB,YAAY,8CAAI;AAChB,YAAY,8CAAI;;AAEhB,YAAY,8CAAI;AAChB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,gDAAO;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAG;AACvB,mCAAmC,sBAAsB;AACzD,mCAAmC,sBAAsB;AACzD,KAAK,sBAAsB,qDAAI;AAC/B,mCAAmC,sBAAsB;AACzD,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mEAAiB,2BAA2B,kFAAsB;AAC3F;AACA;;AAEA;AACA;AACA,yBAAyB,mEAAiB,yDAAyD,kFAAsB;AACzH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,mEAAiB;AACjC,wFAAwF,aAAa,KAAK,UAAU;AACpH,gBAAgB,kFAAsB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,mEAAiB;AACjC,iGAAiG,wBAAwB,KAAK,sCAAsC;AACpK,gBAAgB,kFAAsB;AACtC;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1dA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACP;AACN;;AAEoB;;AAEV;AACJ;;AAE9C;AACA;AACA;;AAEA;;AAEe,wBAAwB,uDAAc;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC,yDAAgB;AACzD;;AAEA;AACA,uCAAuC,uDAAc;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,6DAAa;AAC9B;AACA,iBAAiB,6DAAa;AAC9B,iBAAiB,6DAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,6DAAa;AAC9B;AACA,iBAAiB,6DAAa;AAC9B,iBAAiB,6DAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA,eAAe,gBAAgB;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,KAAK,oBAAoB;AAClD;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,qBAAqB,gDAAI;AACzB,iDAAiD,gDAAI;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,gFAAuB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,uBAAuB,uCAAuC;AAC9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;;AAE/B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChUA;AAAA;AAAA;AAAA;AAAwC;AAC4C;;AAErE;AACf,kBAAkB,uFAAuF;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAU;;AAErC,mCAAmC,6DAAa;AAChD,oCAAoC,6DAAa;AACjD;AACA;AACA;;AAEA,qBAAqB,mEAAW;AAChC,0BAA0B,wEAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA,wBAAwB,mCAAmC;AAC3D,wBAAwB,mCAAmC;;AAE3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;;AAE9B;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,gBAAgB;;AAE/B,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA,mBAAmB,8BAA8B;;AAEjD;AACA,eAAe,aAAa;;AAE5B;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC4B;AACnC;AACgB;AAChB;;AAElD;AACA;AACA;AACA;AACA;;AAEA;;AAEe;AACf;AACA;;AAEA;AACA;AACA,+BAA+B,yDAAgB;AAC/C;;AAEA;AACA,wBAAwB,mCAAmC;AAC3D,kBAAkB,6BAA6B;AAC/C,wBAAwB,mCAAmC;AAC3D,qBAAqB,gCAAgC;AACrD,mBAAmB,8BAA8B;AACjD,kBAAkB,6BAA6B;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA;;AAEA,sBAAsB;AACtB,2BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb,gBAAgB,yEAAgB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B,mBAAmB,iBAAiB;;AAEpC,2BAA2B,qEAAa;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD,6DAAmB;AACnE;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA,eAAe,gBAAgB;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB,eAAe,gBAAgB;;AAE/B,uBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,6DAAa;AACjE;AACA;;AAEA;AACA;AACA,yCAAyC,6DAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,uEAAe;AAC1C,iBAAiB,0DAA0D;AAC3E,iBAAiB,0DAA0D;AAC3E,iBAAiB,0DAA0D;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,gBAAgB;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,0EAAyB;AAC7F;AACA;;;;;;;;;;;;;AC1WA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAyE;;AAEzE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qEAAa;AAClC,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,qEAAa;;AAE1C;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB,GAAG,qEAAa;;AAEhE,6DAA6D,2DAAG;AAChE,8DAA8D,2DAAG;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACrIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACF;AACM;AAC4C;AACxC;;AAE9C;AACP;AACA,aAAa,6DAAa;AAC1B,mBAAmB,iEAAW;AAC9B,aAAa,6DAAa;AAC1B,mBAAmB,+DAAU;AAC7B,aAAa,6DAAa;AAC1B,mBAAmB,qEAAa;AAChC;AACA,sBAAsB,mEAAiB;AACvC,iDAAiD,SAAS;AAC1D,gBAAgB,kFAAsB;AACtC;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAuD;;AAEvD;AACA;;AAEA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP,yBAAyB;AACzB;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA,uBAAuB,oBAAoB;AAC3C;AACA;;AAEA;AACA,oBAAoB,6DAAa;AACjC;;AAEA;AACA,eAAe;AACf,eAAe,4EAA4E;;AAE3F;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAY;AAC1C,6BAA6B,4DAAY;AACzC;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACsB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP,yBAAyB;AACzB;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA,uBAAuB,oBAAoB;AAC3C;AACA,8BAA8B,mCAAM;;AAEpC;AACA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;;AAEA;AACA,oBAAoB,6DAAa;AACjC;AACA;AACA,aAAa;AACb;;AAEA;AACA,eAAe;AACf,eAAe,4EAA4E;;AAE3F;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAY;AAC1C,6BAA6B,4DAAY;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;;AAExD;;AAEP;AACA;AACA,cAAc,qBAAqB;AACnC,cAAc,8BAA8B,GAAG,+BAA+B;AAC9E,cAAc,+BAA+B,SAAS,qBAAqB;AAC3E;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACO;AACP;AACA,kBAAkB,8DAAU,CAAC,EAAE,MAAM,GAAG,KAAK;AAC7C,KAAK;AACL;AACA,kBAAkB,8DAAU,CAAC,EAAE,QAAQ,GAAG,KAAK;AAC/C;AACA;;AAEe,gEAAC,uDAAuD,EAAC;;;;;;;;;;;;;AC3DxE;AAAA;AAAA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AA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CA;;AAEA;AACA;AACA;AACA,kBAAkB,mEAAiB,6CAA6C,IAAI,aAAa,WAAW,GAAG,kFAAsB;AACrI;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAA4C;;AAErC;AACP;AACA;AACO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gdAAgd,+BAA+B;AAC/e;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,aAAa;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA;AACA,cAAc,gEAAK;AACnB,cAAc,gEAAK;AACnB,cAAc,gEAAK;;AAEnB,4BAA4B,aAAa;AACzC;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChJA;AAAA;;AAEA,mBAAmB,oBAAoB;AACvC,oBAAoB,oBAAoB;AACxC,eAAe,oBAAoB;AACnC,eAAe,oBAAoB;AACnC,kBAAkB,oBAAoB;AACtC,yBAAyB,oBAAoB;AAC7C,iBAAiB,oBAAoB;AACrC,iBAAiB,oBAAoB;AACrC,gBAAgB,oBAAoB;AACpC,kBAAkB,oBAAoB;AACtC,yBAAyB,oBAAoB;AAC7C,gBAAgB,oBAAoB;AACpC,kBAAkB,oBAAoB;AACtC,yBAAyB,oBAAoB;AAC7C,gBAAgB,oBAAoB;AACpC,uBAAuB,oBAAoB;AAC3C,oBAAoB,oBAAoB;AACxC,2BAA2B,oBAAoB;;AAEhC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACxoFAAoF,4BAA4B,GAAG,6BAA6B,MAAM;AACtJ,wQAAwQ,qGAAqG;AAC7W;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,4DAA4D;AACpF;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,sDAAsD;AAC9E;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,wDAAwD,MAAM,8DAA8D;AACpJ;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,8DAA8D;AACtF;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,kDAAkD,GAAG,oDAAoD,MAAM,0DAA0D;AACnM;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,sDAAsD;AACvG,yDAAyD,oDAAoD;AAC7G,yC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AACA;;AAEA;AACA,kBAAkB,oBAAoB,GAAG,uBAAuB,IAAI,yBAAyB,IAAI,qBAAqB;AACtH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;;AAEjB,QAAQ,wDAAS;AACjB,QAAQ,sEAAuB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,oDAAK;;AAEhC;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA,qBAAqB,4DAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oHAAoH,SAAS;AAC7H;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACN;AAC2C;AACvB;;AAEnC,6BAA6B,6CAAc;AAC1D;AACA;AACA;AACA;;AAEA,sBAAsB,2DAAM,QAAQ,8DAAS,SAAS,8DAAS;;AAE/D;AACA,2CAA2C,0BAA0B,EAAE;;AAEvE;;AAEA,oBAAoB,2DAAM,SAAS,8DAAS,UAAU,8DAAS;AAC/D,8BAA8B,yDAAgB,sBAAsB,0CAAI,cAAc,iDAAI;AAC1F,4BAA4B,yDAAgB,oBAAoB,0CAAI,CAAC,iDAAI;AACzE,kCAAkC,wDAAG;;AAErC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB,GAAG,uBAAuB,IAAI,yBAAyB,IAAI,qBAAqB;AACtH;AACA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,mCAAmC,kBAAkB;AACrD;AACA;;AAEA,iCAAiC,SAAS;AAC1C,cAAc;AACd,qBAAqB,yCAAyC,4DAAiB;AAC/E,SAAS;;AAET;AACA;AACA,uBAAuB,SAAS,GAAG,0BAA0B;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB,QAAQ,IAAI,GAAG,gCAAgC;AAC1F,yBAAyB,MAAM,IAAI;AACnC,aAAa;AACb,SAAS;AACT;AACA;AACA,wBAAwB,IAAI,GAAG,gCAAgC;AAC/D,yBAAyB,MAAM,IAAI;AACnC,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAoC;AACkD;;AAEtF;;AAEA;AACA;AACA;AACA;AACA,UAAU,SAAS;AACnB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,4BAA4B,6CAAc;AACzD;AACA,QAAQ,gEAAiB;;AAEzB,mBAAmB,2DAAY;;AAE/B,QAAQ,8DAAe;AACvB,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,UAAU,GAAG,gBAAgB;AAClE;AACA,wDAAwD;AACxD,0CAA0C,UAAU;AACpD,+CAA+C,IAAI,eAAe,IAAI;AACtE,2DAA2D,UAAU,MAAM,IAAI;AAC/E,qBAAqB;AACrB;AACA;;AAEA;AACA,0GAA0G,UAAU;AACpH;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA,uBAAuB,aAAa;AACpC;;AAEA,gBAAgB;AAChB;AACA;;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AAAoC;AACkD;;AAEtF;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO,mBAAmB,6CAAc;AACxC;AACA,QAAQ,gEAAiB;;AAEzB;AACA,cAAc,2DAAY;AAC1B,cAAc,2DAAY;;AAE1B;AACA;AACA,cAAc,2DAAY;;AAE1B,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;;AAEvB,eAAe,kBAAkB;;AAEjC;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB;AACA;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAA0B;AACgD;;AAE1E;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oBAAoB,6CAAI;AACvC;AACA,QAAQ,gEAAiB;AACzB,QAAQ,0DAAW;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,8DAAe;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAqE,WAAW;AAChF,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA,uFAAuF,UAAU;AACjG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;ACtIA;AAAA;AAAA;AAAA;AAA0B;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,6CAAI;AAC3C;AACA;AACA;AACA,kDAAkD,wDAAS,6BAA6B,EAAE;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;;AAEzC,4BAA4B,UAAU;AACtC,4CAA4C,UAAU;AACtD;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;;AAEA;AACA,kFAAkF,UAAU;AAC5F;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C,wCAAwC,EAAE;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,oBAAoB;AAC/C,4CAA4C,EAAE;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAA0B;AACU;;AAErB,4BAA4B,6CAAI;AAC/C;AACA;AACA,sDAAsD,wDAAS,6CAA6C,EAAE;AAC9G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB,oCAAoC,UAAU;AAC9C,sBAAsB,0BAA0B,SAAS,IAAI;AAC7D;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAoC;AACiC;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wBAAwB,6CAAc;AACrD;AACA,QAAQ,gEAAiB;;AAEzB,YAAY,2DAAY;AACxB,YAAY,2DAAY;AACxB,eAAe,OAAO;AACtB,6CAA6C,SAAS,IAAI,SAAS;AACnE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB;AACA;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACuC;;AAEvC;AACI;AACU;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B,UAAU,yBAAyB;AACnC,UAAU,mBAAmB;AAC7B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACe,mBAAmB,6CAAc;AAChD,0CAA0C,8DAAmB;AAC7D,QAAQ,gEAAiB;;AAEzB,gBAAgB,2DAAY;AAC5B,kBAAkB,2DAAY;;AAE9B,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;;AAEvB,uBAAuB,8DAAmB;AAC1C,qBAAqB,2DAAY;AACjC,YAAY,8DAAe;AAC3B;;AAEA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA,yCAAyC,8DAAmB;AAC5D;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,kDAAS;AACrD;AACA;AACA,4CAA4C,oDAAW;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AAEvB,eAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,8CAAa;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,4DAAa,sCAAsC,uDAAkB;AAC7E,QAAQ,wDAAS;AACjB;;AAEA;AACA;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,oEAAgB;AACtC;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAsD;AACN;AAChD;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD;AAClG;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,2DAAkB;AAC1D;AACA,QAAQ,gEAAiB;AACzB,eAAe,4EAA4E;AAC3F;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACQ;AAC0B;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,2BAA2B,6CAAc;AACxD;AACA,QAAQ,gEAAiB;AACzB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA,eAAe,yEAAqB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,yEAAqB;AACnD;;AAEA;AACA;AACA;AACA,4CAA4C,yEAAqB;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,yEAAqB;AAChF;;AAEA;AACA;AACA;AACA,sEAAsE,yEAAqB;AAC3F;AACA;AACA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAsD;AACN;;AAEhD;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD;AAClG;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,2DAAkB;AAC1D;AACA,QAAQ,gEAAiB;AACzB,eAAe,4EAA4E;AAC3F;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAsD;AACN;AAChD;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD;AAClG;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,2DAAkB;AAC1D;AACA,QAAQ,gEAAiB;AACzB,eAAe,4EAA4E;AAC3F;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAsD;AACN;AAChD;AACA;AACA;AACA;AACA,+CAA+C,oDAAoD;AACnG;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,2DAAkB;AAC3D;AACA,QAAQ,gEAAiB;AACzB,eAAe,gFAAgF;AAC/F;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAsD;AACN;AAChD;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD;AAClG;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,2DAAkB;AAC1D;AACA,QAAQ,gEAAiB;AACzB,eAAe,4EAA4E;AAC3F;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAA0D;AACyB;;AAEnF;AACA;AACA;AACA;AACA,mDAAmD,oDAAoD;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,iBAAiB,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,6DAAoB;AAC7D;AACA;AACA,yBAAyB,6DAAoB;AAC7C,QAAQ,gEAAiB;AACzB,QAAQ,8DAAe;AACvB,sCAAsC,6DAAoB,eAAe,6DAAoB;AAC7F,QAAQ,+DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACc;AACkB;AAC3B;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACe,mCAAmC,6CAAc;AAChE,kBAAkB,mDAAmD;AACrE,QAAQ,8DAAe;AACvB,eAAe,WAAW;AAC1B;AACA,uCAAuC,8CAAa;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAa,sCAAsC,uDAAkB;AAC7E,QAAQ,wDAAS;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA,iBAAiB,sCAAsC;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACH;AACoE;AACrC;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gCAAgC,6CAAc;AAC7D;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,kBAAkB,0CAA0C;AAC5D,eAAe,SAAS,2DAAM,KAAK;AACnC,wBAAwB,2DAAY;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB,GAAG,yBAAyB;AAClE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,iCAAiC,yEAAqB;AACtD,0BAA0B,sEAAoB,CAAC,wFAAyB,sDAAsD,oBAAoB;AAClJ;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,sEAAoB;AAC1C,4BAA4B,WAAW,gBAAgB,aAAa;AACpE,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACO;;AAEI;AAChB;;AAEgE;;AAE/G;AACA;AACA;AACA,6CAA6C,oDAAoD;AACjG;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,0DAAiB;AACxD;AACA,QAAQ,gEAAiB;AACzB;AACA,qCAAqC,mEAAkB;AACvD,6BAA6B,2DAAU;AACvC;AACA;AACA;AACA,aAAa;AACb,0BAA0B,sEAAoB;AAC9C;AACA,oBAAoB,wFAAyB;AAC7C;AACA;AACA;;AAEA,eAAe,mDAAmD;AAClE;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAoD;AACJ;;AAEhD;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,0DAAiB;AAC1D;AACA,QAAQ,gEAAiB;AACzB,eAAe,gCAAgC;AAC/C;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACJ;;AAEe;AAChB;AACA;AACA;;AAEgE;;AAE/G;AACA;AACA;AACA,6CAA6C,oDAAoD;AACjG;AACA,WAAW,YAAY;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,0DAAiB;AACxD;AACA,QAAQ,gEAAiB;;AAEzB;AACA,qCAAqC,mEAAkB;AACvD,6BAA6B,2DAAU,kBAAkB,2DAAU,kBAAkB,2DAAU;AAC/F;AACA;AACA;AACA,aAAa;AACb,0BAA0B,sEAAoB;AAC9C;AACA,oBAAoB,wFAAyB;AAC7C;AACA;AACA;;AAEA,eAAe,mDAAmD;AAClE;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACJ;;AAEe;AAChB;AACA;AACA;;AAEgE;;AAE/G;AACA;AACA;AACA,6CAA6C,oDAAoD;AACjG;AACA,WAAW,YAAY;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,0DAAiB;AACxD;AACA,QAAQ,gEAAiB;;AAEzB;AACA;;AAEA;AACA,qCAAqC,mEAAkB;AACvD,6BAA6B,2DAAU,kBAAkB,2DAAU,kBAAkB,2DAAU;AAC/F;AACA;AACA;AACA,aAAa;AACb,0BAA0B,sEAAoB;AAC9C;AACA,oBAAoB,wFAAyB;AAC7C;AACA;AACA;;AAEA,eAAe,mDAAmD;AAClE;AACA;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACoF;AACtF;AAC5C;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,6CAAc;AAC5D;AACA,QAAQ,gEAAiB;AACzB,mBAAmB,2DAAY;AAC/B,qBAAqB,2DAAY;AACjC,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;;AAEvB,eAAe,SAAS,2DAAM,2BAA2B;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB,QAAQ,4DAAa,oCAAoC,uDAAQ;AACjE,QAAQ,sEAAuB;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACJ;;AAEe;AACZ;AACJ;;AAEgE;;AAE/G;AACA;AACA;AACA,6CAA6C,oDAAoD;AACjG;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,0DAAiB;AACxD;AACA,QAAQ,gEAAiB;AACzB;AACA;AACA,sCAAsC,mEAAkB,kBAAkB,6DAAY;AACtF,6BAA6B,2DAAU;AACvC;AACA,aAAa,uBAAuB,6DAAY;AAChD;AACA,aAAa;AACb,0BAA0B,sEAAoB;AAC9C;AACA,oBAAoB,wFAAyB;AAC7C;AACA;AACA;;AAEA,eAAe,yCAAyC;AACxD;AACA;;;;;;;;;;;;;;;;;;;ACtD2D;AACL;AACQ;;AAE9D;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wEAAwE,6DAAa;AACrF;AACA;AACA;;AAEA,kFAAkF,yDAAgB;AAClG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gEAAgE,6DAAmB;AACnF;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACG;AACG;;AAE/B,kCAAkC,6CAAc;AAC/D;AACA,eAAe,EAAE;AACjB;AACA,kBAAkB,WAAW;AAC7B,mBAAmB,2DAAY;AAC/B,eAAe,sBAAsB,2DAAM,KAAK;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACR;AAC0B;;AAE1E;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,4DAAmB;AAC5D;AACA,QAAQ,gEAAiB;;AAEzB,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,yEAAqB;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACV;AACE;AAC0B;;AAE1E;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,4BAA4B,4DAAmB;AAC9D;AACA,QAAQ,gEAAiB;AACzB,eAAe,WAAW,2DAAM,KAAK;AACrC;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,yEAAqB;AAC1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAwD;AACR;AAChD;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,4DAAmB;AAC5D;AACA,QAAQ,gEAAiB;AACzB,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AAAwD;AACR;;AAEhD;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,4DAAmB;AAC5D;AACA,QAAQ,gEAAiB;;AAEzB,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACyC;AACvB;AAC1E;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,iCAAiC,4DAAmB;AACnE;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,2DAAY;AAC/B,qBAAqB,2DAAY;;AAEjC,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;AACvB,QAAQ,gEAAiB;;AAEzB,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,yEAAqB;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oDAAK;;AAEvB;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACR;AAC0B;;AAE1E;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,4DAAmB;AAC5D;AACA,QAAQ,gEAAiB;;AAEzB,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,yEAAqB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACY;AACZ;AACkE;AACrC;;AAEpE;AACA;AACA;AACA,yGAAyG,wBAAwB;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mEAAiB;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB,GAAG,8DAA8D;AACvG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAY;AAC5B;AACA;AACA,wBAAwB,0DAAK,cAAc,+DAAU;AACrD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,MAAM;AACvB,iBAAiB,OAAO,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,sEAAoB;AAC1C,yCAAyC,gBAAgB,kBAAkB,mBAAmB;AAC9F,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;;AAEA;AACA,iCAAiC,WAAW,GAAG,MAAM;AACrD;AACA,8BAA8B,2DAAY;AAC1C,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,sEAAoB;AAC1C,gBAAgB,wFAAyB,yCAAyC,0BAA0B,kBAAkB,mBAAmB;AACjJ;AACA;;AAEA;AACA,yBAAyB,2DAAY;AACrC,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,EAAE;AAC3C;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,2DAAY;AAC5B;AACA,wBAAwB,0DAAK,cAAc,+DAAU;AACrD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wFAAwF,6CAAY,EAAE,gDAAe;AACrH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACsE;AAC5D;AACG;AACK;AAC+D;;AAE5G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAuD;AAClE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACe,mBAAmB,6CAAI;AACtC;AACA,QAAQ,gEAAiB;;AAEzB;AACA,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,mDAAY;;AAEtC;AACA,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA,YAAY,8DAAe,iBAAiB,MAAM;AAClD,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,sEAAoB;AAC1C,oDAAoD,eAAe;AACnE,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA,YAAY,8DAAe,iBAAiB,MAAM;;AAElD;AACA,0BAA0B,sEAAoB;AAC9C,uCAAuC,kEAAmB,YAAY;AACtE,oBAAoB,wFAAyB;AAC7C;AACA;AACA,SAAS;;AAET;AACA;AACA,4CAA4C,kDAAS;AACrD;AACA;AACA,4CAA4C,sDAAa;AACzD;AACA;AACA,4CAA4C,oDAAW;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;;;;;;;;;;;;;ACrHA;AAAA;AAAA;AAAqC;;AAEtB,0BAA0B,6CAAc;AACvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAqC;AACqB;;AAE1D;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACe,2BAA2B,6CAAc;AACxD;AACA,QAAQ,gEAAiB;AACzB,QAAQ,0DAAW;;AAEnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D,WAAW;AACtE,0BAA0B,UAAU;AACpC;AACA;;AAEA;AACA,yFAAyF,UAAU;AACnG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAqC;AACqB;;AAE1D;AACA,2DAA2D,iDAAiD;AAC5G;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,uBAAuB,6CAAc;AACpD;AACA,QAAQ,gEAAiB;AACzB,QAAQ,0DAAW;;AAEnB,gBAAgB;AAChB;AACA;AACA,qCAAqC,cAAc;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,WAAW;AAC7B;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAqC;AACqB;;AAE1D;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,6CAAc;AACtD;AACA,QAAQ,gEAAiB;AACzB,QAAQ,0DAAW;;AAEnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,WAAW;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,WAAW;AACzE,6BAA6B,UAAU;AACvC;AACA;;AAEA;AACA,4FAA4F,UAAU;AACtG;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACqB;AACkD;AAClD;AACQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,uBAAuB,6CAAc;AACpD;AACA,QAAQ,gEAAiB;AACzB,QAAQ,0DAAW;;AAEnB;AACA,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;;AAEA,4DAA4D,qEAA0B;AACtF;AACA;AACA;;AAEA;AACA,mBAAmB,UAAU;AAC7B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,sEAAoB;AAC1C,6BAA6B,UAAU;AACvC,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oEAAgB;AAC9B,cAAc,oEAAgB;;AAE9B;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACqB;AACkD;;AAE5G;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,uBAAuB,6CAAc;AAC5C;AACA,gBAAgB;AAChB;AACA;;AAEe;AACf,IAAI,gEAAiB;AACrB,IAAI,0DAAW;;AAEf;AACA,kBAAkB,sEAAoB;AACtC;AACA,YAAY,wFAAyB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT,sBAAsB,sEAAoB;AAC1C,yCAAyC,KAAK;AAC9C,gBAAgB,wFAAyB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAsF;AAClD;;AAEpC;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,oBAAoB;AAC/B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,oBAAoB;AAC/B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA,0CAA0C,6CAAc;AACxD;AACA,YAAY,gEAAiB;;AAE7B,oBAAoB,2DAAY;AAChC,mBAAmB,2DAAY;;AAE/B,YAAY,8DAAe;AAC3B,YAAY,8DAAe;;AAE3B,mBAAmB,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AAEA;AACA;AACA,sBAAsB,sEAAoB;AAC1C,mBAAmB,oBAAoB,4CAA4C,OAAO,iBAAiB,OAAO;AAClH,gBAAgB,wFAAyB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxJA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAOhB;;AAEgC;;AAE3D;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,kBAAkB,gEAAe;AAChD;AACA,QAAQ,gEAAiB;;AAEzB;AACA,mBAAmB,2DAAM;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,EAAE,KAAK,EAAE;;AAE5C,YAAY,2DAAY;AACxB,YAAY,2DAAY;;AAExB;AACA,gCAAgC,kEAAiB,GAAG,0EAAyB,GAAG,gEAAe,GAAG,gEAAe;AACjH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW;AACX,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAA6F;;AAEhD;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,qBAAqB,gEAAe;AACnD;AACA,QAAQ,gEAAiB;;AAEzB;AACA;AACA;AAC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AAC/B,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sBAAsB,6CAAc;AACnD,4CAA4C,uDAAY;AACxD,QAAQ,gEAAiB;;AAEzB,gBAAgB,2DAAY;AAC5B,eAAe,2DAAY;AAC3B,sBAAsB,2DAAY;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,0DAAiB;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;;AAEA,mBAAmB,uDAAY;AAC/B;;AAEA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,sEAAoB;AAC1C,+EAA+E,gBAAgB;AAC/F,gBAAgB,wFAAyB;AACzC;AACA;;AAEA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB,QAAQ,sEAAuB;;AAE/B;AACA;AACA,0BAA0B,sEAAoB;AAC9C,0CAA0C,kEAAmB,YAAY;AACzE,6CAA6C,gBAAgB,sBAAsB,UAAU;AAC7F,oBAAoB,wFAAyB;AAC7C;AACA,aAAa;AACb,0BAA0B,sEAAoB;AAC9C,0CAA0C,kEAAmB,YAAY,8BAA8B,UAAU;AACjH,oBAAoB,wFAAyB;AAC7C;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA,mBA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AAA;AAAA;AAAsC;AACuC;AAC+B;AACT;;AAE7C;AACiB;AAC5B;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,gCAAgC,mDAAU;AACzD;AACA,QAAQ,gEAAiB;AACzB,QAAQ,gEAAiB;;AAEzB,eAAe,wCAAwC;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,0DAAW;AACnB;AACA,sBAAsB,sEAAoB;AAC1C,sDAAsD,UAAU;AAChE,gBAAgB,wFAAyB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC,yEAAqB;AAC7D,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;AACA;AACA;AACA,oBAAoB,sDAAO;AAC3B,4BAA4B,gEAAiB;AAC7C,eAAe,WAAW;AAC1B,mBAAmB,2DAAM;AACzB,mBAAmB,2DAAM;;AAEzB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA,kBAAkB,mEAAiB;AACnC,uEAAuE,QAAQ;AAC/E,YAAY,kFAAsB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACuB;AACK;;AAElE;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;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ACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;;AAExC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,wDAAS;AACzB;;AAEA;AACA;AACA,sBAAsB,SAAS,EAAE,4BAA4B;AAC7D,4BAA4B,SAAS,EAAE,sBAAsB;AAC7D,4BAA4B,SAAS,EAAE,sBAAsB;AAC7D,sBAAsB,uBAAuB,SAAS,kBAAkB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,8DAAe;AACvB;AACA,sBAAsB,sEAAoB;AAC1C,mBAAmB,KAAK,2BAA2B,cAAc,cAAc,eAAe;AAC9F,gBAAgB,wFAAyB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,oDAAK;AACnB,cAAc,oDAAK;AACnB,cAAc,oDAAK;;AAEnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACyD;AACc;;AAE5G;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA,yBAAyB,6CAAc;AACvC;AACA;AACA,gBAAgB,gEAAiB;AACjC,aAAa;AACb,gBAAgB,gEAAiB;AACjC;;AAEA,gBAAgB,2DAAY;AAC5B,gBAAgB,2DAAY;AAC5B,gBAAgB,2DAAY;AAC5B,8BAA8B;AAC9B;AACA,oBAAoB,2DAAY;AAChC,gBAAgB,8DAAe;AAC/B;AACA;;AAEA,YAAY,8DAAe;AAC3B,YAAY,8DAAe;AAC3B,YAAY,8DAAe;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAK;AAC3B,sBAAsB,oDAAK;AAC3B,sBAAsB,oDAAK;;AAE3B;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAK;AACpC;;AAEA,sBAAsB,oDAAK;AAC3B,sBAAsB,oDAAK;AAC3B,sBAAsB,oDAAK;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;;AAExC,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAS;AACzB;AACA;AACA;AACA,+BAA+B,oDAAoD;AACnF;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS,EAAE,wBAAwB;AACzD,4BAA4B,SAAS,EAAE,kBAAkB;AACzD,4BAA4B,SAAS,EAAE,kBAAkB;AACzD,sBAAsB,iBAAiB,SAAS,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,8DAAe;AACvB;AACA,sBAAsB,sEAAoB;AAC1C,mBAAmB,KAAK,2BAA2B,cAAc,cAAc,eAAe;AAC9F,gBAAgB,wFAAyB;AACzC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9KyC;AACA;;AAEzC;;AAEA,YAAY,uCAAU;AACtB,gBAAgB,mBAAmB,SAAS,yDAAO,OAAO,uCAAU;AACpE,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;ACVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACD;AACT;AACkB;;AAEhD;;AAEA;AACA;AACA;AACA,6CAA6C,kDAAkD,MAAM,2DAA2D;AAChK,oBAAoB,kCAAkC;AACtD;AACA,0DAA0D,0CAA0C;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sBAAsB,6CAAc;AACnD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+CAAQ;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yCAAI,CAAC,6DAAQ,WAAW,6DAAQ,WAAW,6DAAQ,WAAW,6DAAQ;AACtF;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACkD;;AAEvF;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;;AAEA;AACA,8BAA8B,6CAAc;AAC5C;AACA,YAAY,gEAAiB;;AAE7B,4CAA4C,mDAAY;AACxD,YAAY,8DAAe;AAC3B,YAAY,8DAAe;AAC3B,YAAY,8DAAe;;AAE3B,8BAA8B;AAC9B;AACA,gBAAgB,8DAAe;AAC/B;AACA;AACA;AACA;AACA,iDAAiD,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,wBAAwB;AAC/H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;;AAExC,oBAAoB;AACpB;;AAEA;AACA;AACA,YAAY,wDAAS;AACrB,YAAY,wDAAS;AACrB,YAAY,wDAAS;AACrB;AACA,gBAAgB,wDAAS;AACzB;AACA;AACA;AACA;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;;AAEO;;;;;;;;;;;;;ACVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACK;AAC8B;AACV;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa,iGAAiG;AACzH,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB;AAC/C;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB,GAAG,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB;AAC/C;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB,GAAG,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wCAAwC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACe,8BAA8B,kDAAS;AACtD;AACA,QAAQ,gEAAiB;AACzB,eAAe,QAAQ,2DAAY,SAAS;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM,oBAAoB,aAAa;AACtD,gBAAgB,MAAM,IAAI;AAC1B;AACA;AACA;AACA;AACA,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,oCAAoC,8BAA8B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,oCAAoC,8BAA8B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,uCAAuC,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,uCAAuC,2BAA2B;AAC/E;AACA;AACA;AACA;AACA,QAAQ,yDAAU;;AAElB;AACA;AACA;;AAEA,uCAAuC,EAAE,0DAAe;AACxD;;AAEA;AACA,gCAAgC,uDAAY;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,wBAAwB;AAC3D;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA,4BAA4B,uDAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C,0DAAe;;AAE7D;AACA;AACA;AACA;AACA,aAAa;AACb,sDAAsD,uDAAY;AAClE,oCAAoC,uDAAY;AAChD;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;ACzRA;AAAA;AAAA;AAAqC;AACtB,wBAAwB,6CAAc;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;;AAEA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,2BAA2B;AAChE;;AAEA;AACA;AACA,+CAA+C,IAAI;AACnD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,UAAU,EAAE;AACvD,6BAA6B,UAAU,EAAE;AACzC,6BAA6B,WAAW,EAAE;;AAE1C;AACA;AACA;;AAEA,iDAAiD;AACjD,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACuB;AACrB;AACS;AACtB;AAC8C;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa,iGAAiG;AACzH,WAAW,OAAO;AAClB,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB;AAC/C;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB,GAAG,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB;AAC/C;AACA;AACA;AACA,QAAQ,kBAAkB,GAAG,kBAAkB,GAAG,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0CAA0C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACe,gCAAgC,kDAAS;AACxD;AACA,QAAQ,gEAAiB;AACzB,eAAe,QAAQ,2DAAY,iBAAiB,2DAAY,UAAU;;AAE1E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM,oBAAoB,aAAa;AACtD,gBAAgB,MAAM,IAAI;AAC1B;AACA;AACA;AACA;AACA,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,oCAAoC,8BAA8B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,oCAAoC,8BAA8B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,uCAAuC,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,sCAAsC,6BAA6B;AAChF,aAAa,qCAAqC,8BAA8B;AAChF,aAAa,uCAAuC,2BAA2B;AAC/E;AACA;AACA;AACA;AACA,QAAQ,yDAAU;;AAElB;AACA;AACA;;AAEA,uCAAuC,EAAE,0DAAe;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA,mCAAmC,wBAAwB;AAC3D,aAAa;AACb;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,wBAAwB;AACvD;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC,4CAAG;AAC3C;AACA;;AAEA;AACA,yCAAyC,yEAAqB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACtB;AACqE;;AAEzG;;AAEO,6FAA6F;;AAE7F;AACP;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEI;AACP;AACA,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,0CAA0C,6CAAc;AACxD;AACA,YAAY,gEAAiB;;AAE7B,gBAAgB,2DAAY;AAC5B,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sEAAoB;AAC9C,wDAAwD,YAAY;AACpE,oBAAoB,wFAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACyD;AACvC;AACQ;AACT;AACO;AACd;AAC9C;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB,UAAU,YAAY;AACtB,UAAU,YAAY;AACtB,UAAU,YAAY;AACtB,UAAU,OAAO;AACjB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,qBAAqB,6CAAc;AAClD,mDAAmD,0DAAe;AAClE,QAAQ,gEAAiB;;AAEzB,gBAAgB,2DAAY;;AAE5B,oCAAoC,6CAAc;AAClD;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,8DAAS;AAC3B,kBAAkB,8DAAS;AAC3B;;AAEA,cAAc,2DAAY;AAC1B,cAAc,2DAAY;AAC1B,kBAAkB,2DAAY;;AAE9B,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;AACvB,QAAQ,8DAAe;;AAEvB,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAQ;AAC3B,SAAS;AACT,6BAA6B,iEAAa;AAC1C,6BAA6B,iEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAa;AACvC,0BAA0B,iEAAa;AACvC;AACA;AACA;AACA,0BAA0B,iEAAa;AACvC,0BAA0B,iEAAa;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,mCAAmC;AACnC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,wDAAa;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,kHAAkH;AAClH,kHAAkH;AAClH;AACA;AACA;AACA;AACA,mCAAmC;AACnC,kHAAkH;AAClH,kHAAkH;AAClH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,yBAAyB,IAAI,gBAAgB,MAAM,wBAAwB;AAC3H,SAAS;AACT,YAAY,wDAAS;AACrB,YAAY,wDAAS;AACrB,YAAY,wDAAS;AACrB,YAAY,wDAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,aAAa,GAAG,WAAW,KAAK,WAAW,GAAG,WAAW;AAC7G,aAAa;AACb;AACA;AACA,oDAAoD,aAAa,IAAI,iBAAiB,MAAM,0BAA0B;AACtH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C,0BAA0B,oDAAK;AAC/B;;AAEA,uBAAuB,aAAa;AACpC;;AAEA,gBAAgB;AAChB;AACA;;;;;;;;;;;;;ACtQA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACI;AACI;;AAE5C;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,kBAAkB,6CAAc;AAC/C;AACA,QAAQ,gEAAiB;;AAEzB,eAAe,MAAM,2DAAM,KAAK;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACsD;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,6CAAc;AACvC;AACA,QAAQ,gEAAiB;AACzB,gBAAgB,2DAAY;AAC5B,QAAQ,8DAAe;AACvB,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAa;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,mBAAmB,6CAAc;AACxC;AACA,QAAQ,gEAAiB;AACzB,gBAAgB,2DAAY;AAC5B,QAAQ,8DAAe;AACvB,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAa;AACrB;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sBAAsB,6CAAc;AAC3C;AACA,QAAQ,gEAAiB;;AAEzB,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oBAAoB,6CAAc;AACzC;AACA,QAAQ,gEAAiB;;AAEzB,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;ACjLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAC9B;AACN;AACb;;AAE3B;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sBAAsB,6CAAI;AACzC;AACA,QAAQ,gEAAiB;AACzB,gBAAgB,2DAAY;AAC5B,QAAQ,8DAAe;AACvB,eAAe,QAAQ;AACvB;;AAEA;AACA;;AAEA;AACA,wCAAwC,uDAAc;AACtD,SAAS;AACT,wCAAwC,oDAAW;AACnD;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAA2B;AACU;;AAEtB,0BAA0B,6CAAI;AAC7C;AACA,QAAQ,wDAAS;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAgD;;AAEjC,6BAA6B,+DAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACO;AACP;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACO;AACP;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACQ;AACkB;;AAE9D;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,mBAAmB,6CAAc;AAChD;AACA,QAAQ,gEAAiB;;AAEzB,gBAAgB;AAChB;;AAEA;AACA,wBAAwB,oDAAa;AACrC,SAAS;AACT,YAAY,+DAAgB;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAoC;AACQ;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACe,4BAA4B,6CAAc;AACzD;AACA;;AAEA,gBAAgB;AAChB;AACA,qBAAqB,yDAAkB;AACvC,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACyE;AACrE;AACA;AACiE;AAC7B;;AAE5E;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,kBAAkB,6CAAc;AAC/C,kDAAkD,uDAAY;AAC9D,QAAQ,gEAAiB;;AAEzB,kBAAkB,2DAAY;AAC9B,sBAAsB,2DAAY;;AAElC,0BAA0B;;AAE1B,uBAAuB,qBAAqB;AAC5C,4BAA4B,EAAE,KAAK,2DAAM;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ,uDAAY,SAAS,uDAAY;AACxD,eAAe;AACf;;AAEA;AACA;;AAEA,QAAQ,4DAAa,uBAAuB,uDAAQ;AACpD,QAAQ,wDAAS;AACjB,QAAQ,sEAAuB;AAC/B,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB,QAAQ,sEAAuB;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,sEAAoB;AAC1C,iDAAiD,gBAAgB,gBAAgB,KAAK;AACtF,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4CAA4C,0EAA0E,EAAE;AACxH;AACA;AACA,sDAAsD;;AAEtD,uBAAuB,UAAU;AACjC;AACA,sBAAsB,0BAA0B;AAChD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,0BAA0B;AACvD;AACA,iBAAiB,YAAY,2BAA2B;AACxD;AACA,iBAAiB,YAAY,2BAA2B;AACxD;AACA,iBAAiB,YAAY,2BAA2B;AACxD;AACA,iBAAiB,YAAY,2BAA2B;AACxD;AACA,iBAAiB,YAAY,2BAA2B;AACxD;AACA,iBAAiB,YAAY,2BAA2B;AACxD;AACA,iBAAiB;AACjB,6BAA6B,4DAAiB;AAC9C;AACA,sDAAsD,UAAU;AAChE,aAAa;AACb,0BAA0B,UAAU,GAAG,6BAA6B;AACpE;AACA;;AAEA;AACA,6FAA6F,UAAU;AACvG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C,wBAAwB,EAAE;AAC1B;;AAEA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uDAAY;AACnC,aAAa;AACb;;AAEA,gBAAgB;AAChB;AACA;;;;;;;;;;;;;ACxOA;AAAA;AAAA;AAAA;AAAqC;AACiC;;AAEtE;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qBAAqB,6CAAc;AAClD;AACA,QAAQ,gEAAiB;;AAEzB,sBAAsB,2DAAY;AAClC,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,UAAU;AACvC,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,iBAAiB;;AAEjB,6BAA6B,UAAU;AACvC;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAqC;AACiC;;AAEtE;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wBAAwB,6CAAc;AACrD;AACA,QAAQ,gEAAiB;;AAEzB,YAAY,2DAAY;AACxB,YAAY,2DAAY;AACxB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAkB;;AAElB,gCAAgC,UAAU;AAC1C,oCAAoC,SAAS,IAAI,SAAS;AAC1D,iBAAiB;;AAEjB,gCAAgC,UAAU;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB,QAAQ,wDAAS;AACjB;AACA;;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAoC;AAC4C;AACyB;;AAEzG;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,6CAAc;AACtD;AACA,QAAQ,gEAAiB;AACzB,QAAQ,0DAAW;AACnB;AACA,4BAA4B,oEAAqB;AACjD,sBAAsB,sEAAoB;AAC1C,mBAAmB,QAAQ;AAC3B,gBAAgB,wFAAyB;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,WAAW;AACvE,2BAA2B,UAAU;AACrC;AACA;;AAEA;AACA,0FAA0F,UAAU;AACpG;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACjC;AACqB;;AAEzD;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4DAA4D,EAAE;;AAErE;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,gEAAgE,EAAE;;AAEzE;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4DAA4D,EAAE;;AAErE;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4DAA4D,EAAE;;AAErE;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4DAA4D,EAAE;;AAErE;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,gEAAgE,EAAE;;AAEzE;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4DAA4D,EAAE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,cAAc,EAAE,MAAM,qEAA0B,aAAa;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WA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4C,wFAAyB;AAC1F;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAoB,IAAI;AAC9C,uCAAuC,oBAAoB,qBAAqB,eAAe,IAAI,wFAAyB;AAC5H;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA,kBAAkB,sEAAoB,IAAI;AAC1C,gDAAgD,wFAAyB;AACzE;AACA;;AAEO;AACP;AACA,kBAAkB,sEAAoB,IAAI;AAC1C,8CAA8C,wFAAyB;AACvE;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,4EAAuB;AAClC;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACI;AACsC;AACJ;AACZ;AACvB;AACkE;AACrC;AACmB;AACb;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,6CAAc;AAC5D;AACA,yCAAyC,2DAAY;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mEAAiB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;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AAc;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAoB;AACnC,KAAK;AACL,mBAAmB,8DAAG;AACtB,KAAK;AACL,eAAe,qDAAoB;AACnC,KAAK,UAAU,qDAAoB;AACnC,eAAe,qDAAoB;AACnC,KAAK;AACL;AACA,KAAK,UAAU,gFAAe;AAC9B,mBAAmB,qEAAU;AAC7B,KAAK;AACL,kBAAkB,mEAAiB,wBAAwB,qBAAqB;AAChF;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,cAAc,mEAAiB,wBAAwB,qBAAqB;AAC5E;;AAEA;AACA;AACA,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR;;AAEA;AACA,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR,IAAI,2CAAI;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACoE;;AAE1G;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,QAAQ,uDAAgB;AACxB,kBAAkB,0EAAoB,aAAa,4FAAyB;AAC5E;AACA,SAAS,oDAAa;AACtB,kBAAkB,0EAAoB,yCAAyC,4FAAyB;AACxG;AACA,oBAAoB,uDAAgB,4CAA4C;AAChF;AACA;AACA;;AAEA;AACA,QAAQ,uDAAgB;AACxB,kBAAkB,0EAAoB,eAAe,4FAAyB;AAC9E;AACA,SAAS,oDAAa;AACtB,kBAAkB,0EAAoB,0CAA0C,4FAAyB;AACzG;AACA;AACA,kBAAkB,0EAAoB,2CAA2C,4FAAyB;AAC1G;AACA;;AAEA;AACA,QAAQ,uDAAgB;AACxB,kBAAkB,0EAAoB,iBAAiB,4FAAyB;AAChF;AACA,SAAS,oDAAa;AACtB,kBAAkB,0EAAoB,4CAA4C,4FAAyB;AAC3G;AACA;AACA,kBAAkB,0EAAoB,6CAA6C,4FAAyB;AAC5G;AACA;;AAEuE;;;;;;;;;;;;;AC5EvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACoE;;AAE1G;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,yEAAyE,KAAK;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,aAAa,oDAAa;AAC1B,sBAAsB,0EAAoB,2CAA2C,4FAAyB;AAC9G;AACA;AACA;AACA;;AAEA;AACA,SAAS,oDAAa;AACtB,kBAAkB,0EAAoB,6CAA6C,4FAAyB;AAC5G;AACA;;AAE+E;;;;;;;;;;;;;ACtD/E;AAAA;AAAe;AACf;AACA;AACA;AACA,oBAAoB,2BAA2B,iBAAiB,mCAAmC,GAAG,2BAA2B,GAAG,mCAAmC,MAAM;AAC7K;AACA,qDAAqD,wBAAwB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACkB;AACsB;AACM;;AAExE,8CAA8C,KAAK;;AAEpC,4BAA4B,6CAAI;AAC/C;AACA;AACA,2BAA2B,yDAAS;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,0EAAc;AAC3C,QAAQ,qEAAS;;AAEjB;AACA;AACA;;AAEA;AACA,iCAAiC,8EAAgB;AACjD,QAAQ,yEAAW;AACnB;;AAEA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAiC;;AAElB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sBAAsB,sCAAG;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAA0G;AACzE;AACW;;AAE7B,sBAAsB,sDAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,wCAAwC;AAClG;AACA;AACA,yBAAyB,oDAAoD;AAC7E;AACA;AACA,2HAA2H,wDAAwD;AACnL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO,6BAA6B,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,mDAAI;AAChB,sBAAsB,0EAAoB,kBAAkB,4FAAyB;AACrF;AACA,aAAa,mDAAI;AACjB,sBAAsB,0EAAoB,6CAA6C,4FAAyB;AAChH;AACA;AACA,sBAAsB,0EAAoB,8CAA8C,4FAAyB;AACjH;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACiB;AACG;;AAEwC;;AAElE;AACP;;AAEoD;AACa;AAClB;;AAEzE;AACA;;AAEe,sBAAsB,6CAAI;AACzC;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,2EAA0B;AAClE;;AAEA;AACA;AACA;;AAEA,oCAAoC,qFAAsB;AAC1D;;AAEA;AACA;AACA;AACA;AACA,YAAY,mDAAI;AAChB,sBAAsB,sEAAoB,aAAa,wFAAyB;AAChF;AACA,aAAa,mDAAI;AACjB,sBAAsB,sEAAoB;AAC1C,gBAAgB,wFAAyB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,sBAAsB,sEAAoB,gDAAgD,wFAAyB;AACnH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iCAAiC;AACrE;AACA,6BAA6B,mDAAI,uBAAuB,2CAA2C;AACnG;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAI;AACvB,qBAAqB;AACrB;AACA,eAAe,uBAAuB;AACtC,eAAe,iDAAS;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,qEAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0FAAqB;AACvC;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,qDAAqD;AAC7F;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA;AACA,6BAA6B,sEAAmB,kCAAkC,sEAAmB;AACrG,iCAAiC,sEAAmB,OAAO;AAC3D;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,iCAAiC;AACjC;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA,gCAAgC,0FAAqB;AACrD,iCAAiC,0FAAqB;AACtD;AACA,0BAA0B,sEAAoB;AAC9C,qEAAqE,YAAY,gBAAgB,aAAa;AAC9G,oBAAoB,wFAAyB;AAC7C;AACA;AACA,yBAAyB,gFAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB,gFAAmB;AACnD;AACA;AACA,aAAa,mBAAmB,gFAAmB;AACnD;AACA;AACA,aAAa,mBAAmB,gFAAmB;AACnD;AACA;AACA,aAAa,mBAAmB,gFAAmB;AACnD;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA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AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,wDAAM;AACzC;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,kFAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,0EAAoB;AAC1C,sDAAsD,aAAa;AACnE,gBAAgB,4FAAyB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uEAAiB;AACvC,sDAAsD,aAAa;AACnE,gBAAgB,sFAAsB;AACtC;AACA;AACA;AACA;AACA,0BAA0B,mDAAI;AAC9B,kCAAkC,mDAAI;AACtC,kCAAkC,mDAAI;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uEAAiB;AACvC,sDAAsD,aAAa;AACnE,gBAAgB,sFAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,4BAA4B;AAClE;AACA;AACA;;;;;;;;;;;;;ACtMA;AAAA;AAAA;AAAA;AAA0C;AACN;;AAEpC;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,mDAAI,uBAAuB,WAAW;;AAEzD;AACA,mBAAmB,mDAAI;AACvB;AACA;;AAEA,eAAe,iDAAS;AACxB;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrGA;AAAA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6DAAa;AAChC;AACA;AACA,mBAAmB,6DAAa;AAChC;AACA;AACA,mBAAmB,6DAAa;AAChC;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;AC/BtD;AAAA;AAAA;AAAA;AAA+C;AACP;;AAEzB,8BAA8B,0DAAQ;AACrD;AACA;AACA;AACA;AACA;AACA,iCAAiC,uDAAY;AAC7C;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACnB;;AAErC;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,6CAA6C;AACtD,SAAS,6CAA6C;AACtD,SAAS,6CAA6C;AACtD,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAW,YAAY,6DAAW;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6DAAW;AACzB;AACA,qBAAqB,qCAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C,uBAAuB,qBAAqB;AAC5C,6BAA6B,+DAAa;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;AAAmG;;AAEnG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,kBAAkB,sEAAoB;AACtC,2BAA2B,UAAU;AACrC,YAAY,wFAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,UAAU,OAAO;AACjB,UAAU,YAAY;AACtB,UAAU,SAAS;AACnB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AAC2B;AACuC;;AAE5F;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,UAAU;AACrB;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,UAAU;AACrB;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,qBAAqB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,oBAAoB;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAoB;AAC1C;AACA,gBAAgB,wFAAyB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+EAAO;AAClB,WAAW,+EAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+EAAO;AACpC,6BAA6B,+EAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,eAAe,8CAAI;AACnB,eAAe,8CAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,8CAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACtZF;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;AACQ;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO,mCAAmC;AACrD,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA,wBAAwB,0DAAS;AACjC,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,qDAAY;AAC3B;;AAEA;AACA,eAAe,qDAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,yDAAQ;AACnB;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA;AAAmC;AACC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,qBAAqB,sDAAQ;AAC7B,4BAA4B;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAS;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC,wBAAwB,oBAAoB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC,wBAAwB,oBAAoB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC,wBAAwB,oBAAoB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD,wBAAwB,4BAA4B;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD,wBAAwB,4BAA4B;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD,wBAAwB,4BAA4B;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,kBAAkB,mEAAiB,6BAA6B,IAAI;AACpE;AACA;AACA;;;;;;;;;;;;;AClNA;AAAA;AAAA;AAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,sDAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,QAAQ,WAAW,UAAU,OAAO,UAAU;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,KAAK;AACL;AACA,mBAAmB,kCAAkC;AACrD,KAAK;AACL;AACA,mBAAmB,uBAAuB;AAC1C,KAAK;AACL;AACA;AACA,KAAK;AACL,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,GAAG,iCAAiC;AAChF,KAAK;AACL;AACA,kBAAkB,0BAA0B,GAAG,iCAAiC;AAChF,KAAK;AACL;AACA,kBAAkB,0BAA0B,IAAI,iCAAiC;AACjF,KAAK;AACL;AACA,kBAAkB,0BAA0B,GAAG,2BAA2B;AAC1E,KAAK;AACL,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,GAAG,2BAA2B,GAAG,yBAAyB;AACtG,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW,IAAI,UAAU;AAC/C;AACA;AACA,KAAK;AACL,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,GAAG,2BAA2B,GAAG,yBAAyB,GAAG,0BAA0B;AACnI,KAAK;AACL,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,GAAG,2BAA2B,GAAG,yBAAyB,GAAG,0BAA0B,GAAG,4BAA4B;AAClK,KAAK;AACL,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,GAAG,2BAA2B,GAAG,yBAAyB,GAAG,0BAA0B,GAAG,4BAA4B,GAAG,4BAA4B;AACjM,KAAK;AACL,yBAAyB,EAAE;AAC3B;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACR;AACM;;AAEvC;AACA;AACA;AACmG;;AAEnG;AACA;AACO,oCAAoC;AACpC,uBAAuB;;AAEvB;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP,2CAA2C,qBAAqB;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,kBAAkB,sEAAoB;AACtC;AACA,YAAY,wFAAyB;AACrC;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,gBAAgB,8CAAI;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;AAEK;AACP;AACA;AACA,8BAA8B,4BAA4B;AAC1D;AACA;AACA;;AAEA;AACA,0BAA0B,uBAAuB;AACjD;AACA;;AAEO;AACP,WAAW,4BAA4B;;AAEvC,eAAe,uDAAS;AACxB;;AAEO;AACP,wBAAwB,uDAAS;AACjC","file":"carto-vl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"carto\"] = factory();\n\telse\n\t\troot[\"carto\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","!function() {\n\nvar cartocolor = {\n    \"Burg\": {\n        \"2\": [\n            \"#ffc6c4\",\n            \"#672044\"\n        ],\n        \"3\": [\n            \"#ffc6c4\",\n            \"#cc607d\",\n            \"#672044\"\n        ],\n        \"4\": [\n            \"#ffc6c4\",\n            \"#e38191\",\n            \"#ad466c\",\n            \"#672044\"\n        ],\n        \"5\": [\n            \"#ffc6c4\",\n            \"#ee919b\",\n            \"#cc607d\",\n            \"#9e3963\",\n            \"#672044\"\n        ],\n        \"6\": [\n            \"#ffc6c4\",\n            \"#f29ca3\",\n            \"#da7489\",\n            \"#b95073\",\n            \"#93345d\",\n            \"#672044\"\n        ],\n        \"7\": [\n            \"#ffc6c4\",\n            \"#f4a3a8\",\n            \"#e38191\",\n            \"#cc607d\",\n            \"#ad466c\",\n            \"#8b3058\",\n            \"#672044\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"BurgYl\": {\n        \"2\": [\n            \"#fbe6c5\",\n            \"#70284a\"\n        ],\n        \"3\": [\n            \"#fbe6c5\",\n            \"#dc7176\",\n            \"#70284a\"\n        ],\n        \"4\": [\n            \"#fbe6c5\",\n            \"#ee8a82\",\n            \"#c8586c\",\n            \"#70284a\"\n        ],\n        \"5\": [\n            \"#fbe6c5\",\n            \"#f2a28a\",\n            \"#dc7176\",\n            \"#b24b65\",\n            \"#70284a\"\n        ],\n        \"6\": [\n            \"#fbe6c5\",\n            \"#f4b191\",\n            \"#e7807d\",\n            \"#d06270\",\n            \"#a44360\",\n            \"#70284a\"\n        ],\n        \"7\": [\n            \"#fbe6c5\",\n            \"#f5ba98\",\n            \"#ee8a82\",\n            \"#dc7176\",\n            \"#c8586c\",\n            \"#9c3f5d\",\n            \"#70284a\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"RedOr\": {\n        \"2\": [\n            \"#f6d2a9\",\n            \"#b13f64\"\n        ],\n        \"3\": [\n            \"#f6d2a9\",\n            \"#ea8171\",\n            \"#b13f64\"\n        ],\n        \"4\": [\n            \"#f6d2a9\",\n            \"#f19c7c\",\n            \"#dd686c\",\n            \"#b13f64\"\n        ],\n        \"5\": [\n            \"#f6d2a9\",\n            \"#f3aa84\",\n            \"#ea8171\",\n            \"#d55d6a\",\n            \"#b13f64\"\n        ],\n        \"6\": [\n            \"#f6d2a9\",\n            \"#f4b28a\",\n            \"#ef9177\",\n            \"#e3726d\",\n            \"#cf5669\",\n            \"#b13f64\"\n        ],\n        \"7\": [\n            \"#f6d2a9\",\n            \"#f5b78e\",\n            \"#f19c7c\",\n            \"#ea8171\",\n            \"#dd686c\",\n            \"#ca5268\",\n            \"#b13f64\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"OrYel\": {\n        \"2\": [\n            \"#ecda9a\",\n            \"#ee4d5a\"\n        ],\n        \"3\": [\n            \"#ecda9a\",\n            \"#f7945d\",\n            \"#ee4d5a\"\n        ],\n        \"4\": [\n            \"#ecda9a\",\n            \"#f3ad6a\",\n            \"#f97b57\",\n            \"#ee4d5a\"\n        ],\n        \"5\": [\n            \"#ecda9a\",\n            \"#f1b973\",\n            \"#f7945d\",\n            \"#f86f56\",\n            \"#ee4d5a\"\n        ],\n        \"6\": [\n            \"#ecda9a\",\n            \"#f0c079\",\n            \"#f5a363\",\n            \"#f98558\",\n            \"#f76856\",\n            \"#ee4d5a\"\n        ],\n        \"7\": [\n            \"#ecda9a\",\n            \"#efc47e\",\n            \"#f3ad6a\",\n            \"#f7945d\",\n            \"#f97b57\",\n            \"#f66356\",\n            \"#ee4d5a\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Peach\": {\n        \"2\": [\n            \"#fde0c5\",\n            \"#eb4a40\"\n        ],\n        \"3\": [\n            \"#fde0c5\",\n            \"#f59e72\",\n            \"#eb4a40\"\n        ],\n        \"4\": [\n            \"#fde0c5\",\n            \"#f8b58b\",\n            \"#f2855d\",\n            \"#eb4a40\"\n        ],\n        \"5\": [\n            \"#fde0c5\",\n            \"#f9c098\",\n            \"#f59e72\",\n            \"#f17854\",\n            \"#eb4a40\"\n        ],\n        \"6\": [\n            \"#fde0c5\",\n            \"#fac7a1\",\n            \"#f7ac80\",\n            \"#f38f65\",\n            \"#f0704f\",\n            \"#eb4a40\"\n        ],\n        \"7\": [\n            \"#fde0c5\",\n            \"#facba6\",\n            \"#f8b58b\",\n            \"#f59e72\",\n            \"#f2855d\",\n            \"#ef6a4c\",\n            \"#eb4a40\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"PinkYl\": {\n        \"2\": [\n            \"#fef6b5\",\n            \"#e15383\"\n        ],\n        \"3\": [\n            \"#fef6b5\",\n            \"#ffa679\",\n            \"#e15383\"\n        ],\n        \"4\": [\n            \"#fef6b5\",\n            \"#ffc285\",\n            \"#fa8a76\",\n            \"#e15383\"\n        ],\n        \"5\": [\n            \"#fef6b5\",\n            \"#ffd08e\",\n            \"#ffa679\",\n            \"#f67b77\",\n            \"#e15383\"\n        ],\n        \"6\": [\n            \"#fef6b5\",\n            \"#ffd795\",\n            \"#ffb77f\",\n            \"#fd9576\",\n            \"#f37378\",\n            \"#e15383\"\n        ],\n        \"7\": [\n            \"#fef6b5\",\n            \"#ffdd9a\",\n            \"#ffc285\",\n            \"#ffa679\",\n            \"#fa8a76\",\n            \"#f16d7a\",\n            \"#e15383\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Mint\": {\n        \"2\": [\n            \"#e4f1e1\",\n            \"#0d585f\"\n        ],\n        \"3\": [\n            \"#e4f1e1\",\n            \"#63a6a0\",\n            \"#0d585f\"\n        ],\n        \"4\": [\n            \"#e4f1e1\",\n            \"#89c0b6\",\n            \"#448c8a\",\n            \"#0d585f\"\n        ],\n        \"5\": [\n            \"#E4F1E1\",\n            \"#9CCDC1\",\n            \"#63A6A0\",\n            \"#337F7F\",\n            \"#0D585F\"\n        ],\n        \"6\": [\n            \"#e4f1e1\",\n            \"#abd4c7\",\n            \"#7ab5ad\",\n            \"#509693\",\n            \"#2c7778\",\n            \"#0d585f\"\n        ],\n        \"7\": [\n            \"#e4f1e1\",\n            \"#b4d9cc\",\n            \"#89c0b6\",\n            \"#63a6a0\",\n            \"#448c8a\",\n            \"#287274\",\n            \"#0d585f\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"BluGrn\": {\n        \"2\": [\n            \"#c4e6c3\",\n            \"#1d4f60\"\n        ],\n        \"3\": [\n            \"#c4e6c3\",\n            \"#4da284\",\n            \"#1d4f60\"\n        ],\n        \"4\": [\n            \"#c4e6c3\",\n            \"#6dbc90\",\n            \"#36877a\",\n            \"#1d4f60\"\n        ],\n        \"5\": [\n            \"#c4e6c3\",\n            \"#80c799\",\n            \"#4da284\",\n            \"#2d7974\",\n            \"#1d4f60\"\n        ],\n        \"6\": [\n            \"#c4e6c3\",\n            \"#8dce9f\",\n            \"#5fb28b\",\n            \"#3e927e\",\n            \"#297071\",\n            \"#1d4f60\"\n        ],\n        \"7\": [\n            \"#c4e6c3\",\n            \"#96d2a4\",\n            \"#6dbc90\",\n            \"#4da284\",\n            \"#36877a\",\n            \"#266b6e\",\n            \"#1d4f60\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"DarkMint\": {\n        \"2\": [\n            \"#d2fbd4\",\n            \"#123f5a\"\n        ],\n        \"3\": [\n            \"#d2fbd4\",\n            \"#559c9e\",\n            \"#123f5a\"\n        ],\n        \"4\": [\n            \"#d2fbd4\",\n            \"#7bbcb0\",\n            \"#3a7c89\",\n            \"#123f5a\"\n        ],\n        \"5\": [\n            \"#d2fbd4\",\n            \"#8eccb9\",\n            \"#559c9e\",\n            \"#2b6c7f\",\n            \"#123f5a\"\n        ],\n        \"6\": [\n            \"#d2fbd4\",\n            \"#9cd5be\",\n            \"#6cafa9\",\n            \"#458892\",\n            \"#266377\",\n            \"#123f5a\"\n        ],\n        \"7\": [\n            \"#d2fbd4\",\n            \"#a5dbc2\",\n            \"#7bbcb0\",\n            \"#559c9e\",\n            \"#3a7c89\",\n            \"#235d72\",\n            \"#123f5a\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Emrld\": {\n        \"2\": [\n            \"#d3f2a3\",\n            \"#074050\"\n        ],\n        \"3\": [\n            \"#d3f2a3\",\n            \"#4c9b82\",\n            \"#074050\"\n        ],\n        \"4\": [\n            \"#d3f2a3\",\n            \"#6cc08b\",\n            \"#217a79\",\n            \"#074050\"\n        ],\n        \"5\": [\n            \"#d3f2a3\",\n            \"#82d091\",\n            \"#4c9b82\",\n            \"#19696f\",\n            \"#074050\"\n        ],\n        \"6\": [\n            \"#d3f2a3\",\n            \"#8fda94\",\n            \"#60b187\",\n            \"#35877d\",\n            \"#145f69\",\n            \"#074050\"\n        ],\n        \"7\": [\n            \"#d3f2a3\",\n            \"#97e196\",\n            \"#6cc08b\",\n            \"#4c9b82\",\n            \"#217a79\",\n            \"#105965\",\n            \"#074050\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"ag_GrnYl\": {\n        \"2\": [\n            \"#245668\",\n            \"#EDEF5D\"\n        ],\n        \"3\": [\n            \"#245668\",\n            \"#39AB7E\",\n            \"#EDEF5D\"\n        ],\n        \"4\": [\n            \"#245668\",\n            \"#0D8F81\",\n            \"#6EC574\",\n            \"#EDEF5D\"\n        ],\n        \"5\": [\n            \"#245668\",\n            \"#04817E\",\n            \"#39AB7E\",\n            \"#8BD16D\",\n            \"#EDEF5D\"\n        ],\n        \"6\": [\n            \"#245668\",\n            \"#09787C\",\n            \"#1D9A81\",\n            \"#58BB79\",\n            \"#9DD869\",\n            \"#EDEF5D\"\n        ],\n        \"7\": [\n            \"#245668\",\n            \"#0F7279\",\n            \"#0D8F81\",\n            \"#39AB7E\",\n            \"#6EC574\",\n            \"#A9DC67\",\n            \"#EDEF5D\"\n        ],\n        \"tags\": [\n            \"aggregation\"\n        ]\n    },\n    \"BluYl\": {\n        \"2\": [\n            \"#f7feae\",\n            \"#045275\"\n        ],\n        \"3\": [\n            \"#f7feae\",\n            \"#46aea0\",\n            \"#045275\"\n        ],\n        \"4\": [\n            \"#f7feae\",\n            \"#7ccba2\",\n            \"#089099\",\n            \"#045275\"\n        ],\n        \"5\": [\n            \"#f7feae\",\n            \"#9bd8a4\",\n            \"#46aea0\",\n            \"#058092\",\n            \"#045275\"\n        ],\n        \"6\": [\n            \"#f7feae\",\n            \"#ace1a4\",\n            \"#68bfa1\",\n            \"#2a9c9c\",\n            \"#02778e\",\n            \"#045275\"\n        ],\n        \"7\": [\n            \"#f7feae\",\n            \"#b7e6a5\",\n            \"#7ccba2\",\n            \"#46aea0\",\n            \"#089099\",\n            \"#00718b\",\n            \"#045275\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Teal\": {\n        \"2\": [\n            \"#d1eeea\",\n            \"#2a5674\"\n        ],\n        \"3\": [\n            \"#d1eeea\",\n            \"#68abb8\",\n            \"#2a5674\"\n        ],\n        \"4\": [\n            \"#d1eeea\",\n            \"#85c4c9\",\n            \"#4f90a6\",\n            \"#2a5674\"\n        ],\n        \"5\": [\n            \"#d1eeea\",\n            \"#96d0d1\",\n            \"#68abb8\",\n            \"#45829b\",\n            \"#2a5674\"\n        ],\n        \"6\": [\n            \"#d1eeea\",\n            \"#a1d7d6\",\n            \"#79bbc3\",\n            \"#599bae\",\n            \"#3f7994\",\n            \"#2a5674\"\n        ],\n        \"7\": [\n            \"#d1eeea\",\n            \"#a8dbd9\",\n            \"#85c4c9\",\n            \"#68abb8\",\n            \"#4f90a6\",\n            \"#3b738f\",\n            \"#2a5674\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"TealGrn\": {\n        \"2\": [\n            \"#b0f2bc\",\n            \"#257d98\"\n        ],\n        \"3\": [\n            \"#b0f2bc\",\n            \"#4cc8a3\",\n            \"#257d98\"\n        ],\n        \"4\": [\n            \"#b0f2bc\",\n            \"#67dba5\",\n            \"#38b2a3\",\n            \"#257d98\"\n        ],\n        \"5\": [\n            \"#b0f2bc\",\n            \"#77e2a8\",\n            \"#4cc8a3\",\n            \"#31a6a2\",\n            \"#257d98\"\n        ],\n        \"6\": [\n            \"#b0f2bc\",\n            \"#82e6aa\",\n            \"#5bd4a4\",\n            \"#3fbba3\",\n            \"#2e9ea1\",\n            \"#257d98\"\n        ],\n        \"7\": [\n            \"#b0f2bc\",\n            \"#89e8ac\",\n            \"#67dba5\",\n            \"#4cc8a3\",\n            \"#38b2a3\",\n            \"#2c98a0\",\n            \"#257d98\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Purp\": {\n        \"2\": [\n            \"#f3e0f7\",\n            \"#63589f\"\n        ],\n        \"3\": [\n            \"#f3e0f7\",\n            \"#b998dd\",\n            \"#63589f\"\n        ],\n        \"4\": [\n            \"#f3e0f7\",\n            \"#d1afe8\",\n            \"#9f82ce\",\n            \"#63589f\"\n        ],\n        \"5\": [\n            \"#f3e0f7\",\n            \"#dbbaed\",\n            \"#b998dd\",\n            \"#9178c4\",\n            \"#63589f\"\n        ],\n        \"6\": [\n            \"#f3e0f7\",\n            \"#e0c2ef\",\n            \"#c8a5e4\",\n            \"#aa8bd4\",\n            \"#8871be\",\n            \"#63589f\"\n        ],\n        \"7\": [\n            \"#f3e0f7\",\n            \"#e4c7f1\",\n            \"#d1afe8\",\n            \"#b998dd\",\n            \"#9f82ce\",\n            \"#826dba\",\n            \"#63589f\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"PurpOr\": {\n        \"3\": [\n            \"#f9ddda\",\n            \"#ce78b3\",\n            \"#573b88\"\n        ],\n        \"4\": [\n            \"#f9ddda\",\n            \"#e597b9\",\n            \"#ad5fad\",\n            \"#573b88\"\n        ],\n        \"5\": [\n            \"#f9ddda\",\n            \"#eda8bd\",\n            \"#ce78b3\",\n            \"#9955a8\",\n            \"#573b88\"\n        ],\n        \"6\": [\n            \"#f9ddda\",\n            \"#f0b2c1\",\n            \"#dd8ab6\",\n            \"#bb69b0\",\n            \"#8c4fa4\",\n            \"#573b88\"\n        ],\n        \"7\": [\n            \"#f9ddda\",\n            \"#f2b9c4\",\n            \"#e597b9\",\n            \"#ce78b3\",\n            \"#ad5fad\",\n            \"#834ba0\",\n            \"#573b88\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Sunset\": {\n        \"2\": [\n            \"#f3e79b\",\n            \"#5c53a5\"\n        ],\n        \"3\": [\n            \"#f3e79b\",\n            \"#eb7f86\",\n            \"#5c53a5\"\n        ],\n        \"4\": [\n            \"#f3e79b\",\n            \"#f8a07e\",\n            \"#ce6693\",\n            \"#5c53a5\"\n        ],\n        \"5\": [\n            \"#f3e79b\",\n            \"#fab27f\",\n            \"#eb7f86\",\n            \"#b95e9a\",\n            \"#5c53a5\"\n        ],\n        \"6\": [\n            \"#f3e79b\",\n            \"#fabc82\",\n            \"#f59280\",\n            \"#dc6f8e\",\n            \"#ab5b9e\",\n            \"#5c53a5\"\n        ],\n        \"7\": [\n            \"#f3e79b\",\n            \"#fac484\",\n            \"#f8a07e\",\n            \"#eb7f86\",\n            \"#ce6693\",\n            \"#a059a0\",\n            \"#5c53a5\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"Magenta\": {\n        \"2\": [\n            \"#f3cbd3\",\n            \"#6c2167\"\n        ],\n        \"3\": [\n            \"#f3cbd3\",\n            \"#ca699d\",\n            \"#6c2167\"\n        ],\n        \"4\": [\n            \"#f3cbd3\",\n            \"#dd88ac\",\n            \"#b14d8e\",\n            \"#6c2167\"\n        ],\n        \"5\": [\n            \"#f3cbd3\",\n            \"#e498b4\",\n            \"#ca699d\",\n            \"#a24186\",\n            \"#6c2167\"\n        ],\n        \"6\": [\n            \"#f3cbd3\",\n            \"#e7a2b9\",\n            \"#d67ba5\",\n            \"#bc5894\",\n            \"#983a81\",\n            \"#6c2167\"\n        ],\n        \"7\": [\n            \"#f3cbd3\",\n            \"#eaa9bd\",\n            \"#dd88ac\",\n            \"#ca699d\",\n            \"#b14d8e\",\n            \"#91357d\",\n            \"#6c2167\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"SunsetDark\": {\n        \"2\": [\n            \"#fcde9c\",\n            \"#7c1d6f\"\n        ],\n        \"3\": [\n            \"#fcde9c\",\n            \"#e34f6f\",\n            \"#7c1d6f\"\n        ],\n        \"4\": [\n            \"#fcde9c\",\n            \"#f0746e\",\n            \"#dc3977\",\n            \"#7c1d6f\"\n        ],\n        \"5\": [\n            \"#fcde9c\",\n            \"#f58670\",\n            \"#e34f6f\",\n            \"#d72d7c\",\n            \"#7c1d6f\"\n        ],\n        \"6\": [\n            \"#fcde9c\",\n            \"#f89872\",\n            \"#ec666d\",\n            \"#df4273\",\n            \"#c5287b\",\n            \"#7c1d6f\"\n        ],\n        \"7\": [\n            \"#fcde9c\",\n            \"#faa476\",\n            \"#f0746e\",\n            \"#e34f6f\",\n            \"#dc3977\",\n            \"#b9257a\",\n            \"#7c1d6f\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"ag_Sunset\": {\n        \"2\": [\n            \"#4b2991\",\n            \"#edd9a3\"\n        ],\n        \"3\": [\n            \"#4b2991\",\n            \"#ea4f88\",\n            \"#edd9a3\"\n        ],\n        \"4\": [\n            \"#4b2991\",\n            \"#c0369d\",\n            \"#fa7876\",\n            \"#edd9a3\"\n        ],\n        \"5\": [\n            \"#4b2991\",\n            \"#a52fa2\",\n            \"#ea4f88\",\n            \"#fa9074\",\n            \"#edd9a3\"\n        ],\n        \"6\": [\n            \"#4b2991\",\n            \"#932da3\",\n            \"#d43f96\",\n            \"#f7667c\",\n            \"#f89f77\",\n            \"#edd9a3\"\n        ],\n        \"7\": [\n            \"#4b2991\",\n            \"#872ca2\",\n            \"#c0369d\",\n            \"#ea4f88\",\n            \"#fa7876\",\n            \"#f6a97a\",\n            \"#edd9a3\"\n        ],\n        \"tags\": [\n            \"aggregation\"\n        ]\n    },\n    \"BrwnYl\": {\n        \"2\": [\n            \"#ede5cf\",\n            \"#541f3f\"\n        ],\n        \"3\": [\n            \"#ede5cf\",\n            \"#c1766f\",\n            \"#541f3f\"\n        ],\n        \"4\": [\n            \"#ede5cf\",\n            \"#d39c83\",\n            \"#a65461\",\n            \"#541f3f\"\n        ],\n        \"5\": [\n            \"#ede5cf\",\n            \"#daaf91\",\n            \"#c1766f\",\n            \"#95455a\",\n            \"#541f3f\"\n        ],\n        \"6\": [\n            \"#ede5cf\",\n            \"#ddba9b\",\n            \"#cd8c7a\",\n            \"#b26166\",\n            \"#8a3c56\",\n            \"#541f3f\"\n        ],\n        \"7\": [\n            \"#ede5cf\",\n            \"#e0c2a2\",\n            \"#d39c83\",\n            \"#c1766f\",\n            \"#a65461\",\n            \"#813753\",\n            \"#541f3f\"\n        ],\n        \"tags\": [\n            \"quantitative\"\n        ]\n    },\n    \"ArmyRose\": {\n        \"2\": [\n            \"#929b4f\",\n            \"#db8195\"\n        ],\n        \"3\": [\n            \"#a3ad62\",\n            \"#fdfbe4\",\n            \"#df91a3\"\n        ],\n        \"4\": [\n            \"#929b4f\",\n            \"#d9dbaf\",\n            \"#f3d1ca\",\n            \"#db8195\"\n        ],\n        \"5\": [\n            \"#879043\",\n            \"#c1c68c\",\n            \"#fdfbe4\",\n            \"#ebb4b8\",\n            \"#d8758b\"\n        ],\n        \"6\": [\n            \"#7f883b\",\n            \"#b0b874\",\n            \"#e3e4be\",\n            \"#f6ddd1\",\n            \"#e4a0ac\",\n            \"#d66d85\"\n        ],\n        \"7\": [\n            \"#798234\",\n            \"#a3ad62\",\n            \"#d0d3a2\",\n            \"#fdfbe4\",\n            \"#f0c6c3\",\n            \"#df91a3\",\n            \"#d46780\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"Fall\": {\n        \"2\": [\n            \"#3d5941\",\n            \"#ca562c\"\n        ],\n        \"3\": [\n            \"#3d5941\",\n            \"#f6edbd\",\n            \"#ca562c\"\n        ],\n        \"4\": [\n            \"#3d5941\",\n            \"#b5b991\",\n            \"#edbb8a\",\n            \"#ca562c\"\n        ],\n        \"5\": [\n            \"#3d5941\",\n            \"#96a07c\",\n            \"#f6edbd\",\n            \"#e6a272\",\n            \"#ca562c\"\n        ],\n        \"6\": [\n            \"#3d5941\",\n            \"#839170\",\n            \"#cecea2\",\n            \"#f1cf9e\",\n            \"#e19464\",\n            \"#ca562c\"\n        ],\n        \"7\": [\n            \"#3d5941\",\n            \"#778868\",\n            \"#b5b991\",\n            \"#f6edbd\",\n            \"#edbb8a\",\n            \"#de8a5a\",\n            \"#ca562c\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"Geyser\": {\n        \"2\": [\n            \"#008080\",\n            \"#ca562c\"\n        ],\n        \"3\": [\n            \"#008080\",\n            \"#f6edbd\",\n            \"#ca562c\"\n        ],\n        \"4\": [\n            \"#008080\",\n            \"#b4c8a8\",\n            \"#edbb8a\",\n            \"#ca562c\"\n        ],\n        \"5\": [\n            \"#008080\",\n            \"#92b69e\",\n            \"#f6edbd\",\n            \"#e6a272\",\n            \"#ca562c\"\n        ],\n        \"6\": [\n            \"#008080\",\n            \"#7eab98\",\n            \"#ced7b1\",\n            \"#f1cf9e\",\n            \"#e19464\",\n            \"#ca562c\"\n        ],\n        \"7\": [\n            \"#008080\",\n            \"#70a494\",\n            \"#b4c8a8\",\n            \"#f6edbd\",\n            \"#edbb8a\",\n            \"#de8a5a\",\n            \"#ca562c\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"Temps\": {\n        \"2\": [\n            \"#009392\",\n            \"#cf597e\"\n        ],\n        \"3\": [\n            \"#009392\",\n            \"#e9e29c\",\n            \"#cf597e\"\n        ],\n        \"4\": [\n            \"#009392\",\n            \"#9ccb86\",\n            \"#eeb479\",\n            \"#cf597e\"\n        ],\n        \"5\": [\n            \"#009392\",\n            \"#71be83\",\n            \"#e9e29c\",\n            \"#ed9c72\",\n            \"#cf597e\"\n        ],\n        \"6\": [\n            \"#009392\",\n            \"#52b684\",\n            \"#bcd48c\",\n            \"#edc783\",\n            \"#eb8d71\",\n            \"#cf597e\"\n        ],\n        \"7\": [\n            \"#009392\",\n            \"#39b185\",\n            \"#9ccb86\",\n            \"#e9e29c\",\n            \"#eeb479\",\n            \"#e88471\",\n            \"#cf597e\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"TealRose\": {\n        \"2\": [\n            \"#009392\",\n            \"#d0587e\"\n        ],\n        \"3\": [\n            \"#009392\",\n            \"#f1eac8\",\n            \"#d0587e\"\n        ],\n        \"4\": [\n            \"#009392\",\n            \"#91b8aa\",\n            \"#f1eac8\",\n            \"#dfa0a0\",\n            \"#d0587e\"\n        ],\n        \"5\": [\n            \"#009392\",\n            \"#91b8aa\",\n            \"#f1eac8\",\n            \"#dfa0a0\",\n            \"#d0587e\"\n        ],\n        \"6\": [\n            \"#009392\",\n            \"#72aaa1\",\n            \"#b1c7b3\",\n            \"#e5b9ad\",\n            \"#d98994\",\n            \"#d0587e\"\n        ],\n        \"7\": [\n            \"#009392\",\n            \"#72aaa1\",\n            \"#b1c7b3\",\n            \"#f1eac8\",\n            \"#e5b9ad\",\n            \"#d98994\",\n            \"#d0587e\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"Tropic\": {\n        \"2\": [\n            \"#009B9E\",\n            \"#C75DAB\"\n        ],\n        \"3\": [\n            \"#009B9E\",\n            \"#F1F1F1\",\n            \"#C75DAB\"\n        ],\n        \"4\": [\n            \"#009B9E\",\n            \"#A7D3D4\",\n            \"#E4C1D9\",\n            \"#C75DAB\"\n        ],\n        \"5\": [\n            \"#009B9E\",\n            \"#7CC5C6\",\n            \"#F1F1F1\",\n            \"#DDA9CD\",\n            \"#C75DAB\"\n        ],\n        \"6\": [\n            \"#009B9E\",\n            \"#5DBCBE\",\n            \"#C6DFDF\",\n            \"#E9D4E2\",\n            \"#D99BC6\",\n            \"#C75DAB\"\n        ],\n        \"7\": [\n            \"#009B9E\",\n            \"#42B7B9\",\n            \"#A7D3D4\",\n            \"#F1F1F1\",\n            \"#E4C1D9\",\n            \"#D691C1\",\n            \"#C75DAB\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"Earth\": {\n        \"2\": [\n            \"#A16928\",\n            \"#2887a1\"\n        ],\n        \"3\": [\n            \"#A16928\",\n            \"#edeac2\",\n            \"#2887a1\"\n        ],\n        \"4\": [\n            \"#A16928\",\n            \"#d6bd8d\",\n            \"#b5c8b8\",\n            \"#2887a1\"\n        ],\n        \"5\": [\n            \"#A16928\",\n            \"#caa873\",\n            \"#edeac2\",\n            \"#98b7b2\",\n            \"#2887a1\"\n        ],\n        \"6\": [\n            \"#A16928\",\n            \"#c29b64\",\n            \"#e0cfa2\",\n            \"#cbd5bc\",\n            \"#85adaf\",\n            \"#2887a1\"\n        ],\n        \"7\": [\n            \"#A16928\",\n            \"#bd925a\",\n            \"#d6bd8d\",\n            \"#edeac2\",\n            \"#b5c8b8\",\n            \"#79a7ac\",\n            \"#2887a1\"\n        ],\n        \"tags\": [\n            \"diverging\"\n        ]\n    },\n    \"Antique\": {\n        \"2\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#7C7C7C\"\n        ],\n        \"3\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#7C7C7C\"\n        ],\n        \"4\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#7C7C7C\"\n        ],\n        \"5\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#7C7C7C\"\n        ],\n        \"6\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#625377\",\n            \"#7C7C7C\"\n        ],\n        \"7\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#625377\",\n            \"#68855C\",\n            \"#7C7C7C\"\n        ],\n        \"8\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#625377\",\n            \"#68855C\",\n            \"#9C9C5E\",\n            \"#7C7C7C\"\n        ],\n        \"9\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#625377\",\n            \"#68855C\",\n            \"#9C9C5E\",\n            \"#A06177\",\n            \"#7C7C7C\"\n        ],\n        \"10\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#625377\",\n            \"#68855C\",\n            \"#9C9C5E\",\n            \"#A06177\",\n            \"#8C785D\",\n            \"#7C7C7C\"\n        ],\n        \"11\": [\n            \"#855C75\",\n            \"#D9AF6B\",\n            \"#AF6458\",\n            \"#736F4C\",\n            \"#526A83\",\n            \"#625377\",\n            \"#68855C\",\n            \"#9C9C5E\",\n            \"#A06177\",\n            \"#8C785D\",\n            \"#467378\",\n            \"#7C7C7C\"\n        ],\n        \"tags\": [\n            \"qualitative\"\n        ]\n    },\n    \"Bold\": {\n        \"2\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#A5AA99\"\n        ],\n        \"3\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#A5AA99\"\n        ],\n        \"4\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#A5AA99\"\n        ],\n        \"5\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#A5AA99\"\n        ],\n        \"6\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#80BA5A\",\n            \"#A5AA99\"\n        ],\n        \"7\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#80BA5A\",\n            \"#E68310\",\n            \"#A5AA99\"\n        ],\n        \"8\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#80BA5A\",\n            \"#E68310\",\n            \"#008695\",\n            \"#A5AA99\"\n        ],\n        \"9\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#80BA5A\",\n            \"#E68310\",\n            \"#008695\",\n            \"#CF1C90\",\n            \"#A5AA99\"\n        ],\n        \"10\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#80BA5A\",\n            \"#E68310\",\n            \"#008695\",\n            \"#CF1C90\",\n            \"#f97b72\",\n            \"#A5AA99\"\n        ],\n        \"11\": [\n            \"#7F3C8D\",\n            \"#11A579\",\n            \"#3969AC\",\n            \"#F2B701\",\n            \"#E73F74\",\n            \"#80BA5A\",\n            \"#E68310\",\n            \"#008695\",\n            \"#CF1C90\",\n            \"#f97b72\",\n            \"#4b4b8f\",\n            \"#A5AA99\"\n        ],\n        \"tags\": [\n            \"qualitative\"\n        ]\n    },\n    \"Pastel\": {\n        \"2\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#B3B3B3\"\n        ],\n        \"3\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#B3B3B3\"\n        ],\n        \"4\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#B3B3B3\"\n        ],\n        \"5\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#B3B3B3\"\n        ],\n        \"6\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#9EB9F3\",\n            \"#B3B3B3\"\n        ],\n        \"7\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#9EB9F3\",\n            \"#FE88B1\",\n            \"#B3B3B3\"\n        ],\n        \"8\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#9EB9F3\",\n            \"#FE88B1\",\n            \"#C9DB74\",\n            \"#B3B3B3\"\n        ],\n        \"9\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#9EB9F3\",\n            \"#FE88B1\",\n            \"#C9DB74\",\n            \"#8BE0A4\",\n            \"#B3B3B3\"\n        ],\n        \"10\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#9EB9F3\",\n            \"#FE88B1\",\n            \"#C9DB74\",\n            \"#8BE0A4\",\n            \"#B497E7\",\n            \"#B3B3B3\"\n        ],\n        \"11\": [\n            \"#66C5CC\",\n            \"#F6CF71\",\n            \"#F89C74\",\n            \"#DCB0F2\",\n            \"#87C55F\",\n            \"#9EB9F3\",\n            \"#FE88B1\",\n            \"#C9DB74\",\n            \"#8BE0A4\",\n            \"#B497E7\",\n            \"#D3B484\",\n            \"#B3B3B3\"\n        ],\n        \"tags\": [\n            \"qualitative\"\n        ]\n    },\n    \"Prism\": {\n        \"2\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#666666\"\n        ],\n        \"3\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#666666\"\n        ],\n        \"4\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#666666\"\n        ],\n        \"5\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#666666\"\n        ],\n        \"6\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#EDAD08\",\n            \"#666666\"\n        ],\n        \"7\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#EDAD08\",\n            \"#E17C05\",\n            \"#666666\"\n        ],\n        \"8\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#EDAD08\",\n            \"#E17C05\",\n            \"#CC503E\",\n            \"#666666\"\n        ],\n        \"9\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#EDAD08\",\n            \"#E17C05\",\n            \"#CC503E\",\n            \"#94346E\",\n            \"#666666\"\n        ],\n        \"10\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#EDAD08\",\n            \"#E17C05\",\n            \"#CC503E\",\n            \"#94346E\",\n            \"#6F4070\",\n            \"#666666\"\n        ],\n        \"11\": [\n            \"#5F4690\",\n            \"#1D6996\",\n            \"#38A6A5\",\n            \"#0F8554\",\n            \"#73AF48\",\n            \"#EDAD08\",\n            \"#E17C05\",\n            \"#CC503E\",\n            \"#94346E\",\n            \"#6F4070\",\n            \"#994E95\",\n            \"#666666\"\n        ],\n        \"tags\": [\n            \"qualitative\"\n        ]\n    },\n    \"Safe\": {\n        \"2\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#888888\"\n        ],\n        \"3\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#888888\"\n        ],\n        \"4\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#888888\"\n        ],\n        \"5\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#888888\"\n        ],\n        \"6\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#AA4499\",\n            \"#888888\"\n        ],\n        \"7\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#AA4499\",\n            \"#44AA99\",\n            \"#888888\"\n        ],\n        \"8\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#AA4499\",\n            \"#44AA99\",\n            \"#999933\",\n            \"#888888\"\n        ],\n        \"9\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#AA4499\",\n            \"#44AA99\",\n            \"#999933\",\n            \"#882255\",\n            \"#888888\"\n        ],\n        \"10\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#AA4499\",\n            \"#44AA99\",\n            \"#999933\",\n            \"#882255\",\n            \"#661100\",\n            \"#888888\"\n        ],\n        \"11\": [\n            \"#88CCEE\",\n            \"#CC6677\",\n            \"#DDCC77\",\n            \"#117733\",\n            \"#332288\",\n            \"#AA4499\",\n            \"#44AA99\",\n            \"#999933\",\n            \"#882255\",\n            \"#661100\",\n            \"#6699CC\",\n            \"#888888\"\n        ],\n        \"tags\": [\n            \"qualitative\",\n            \"colorblind\"\n        ]\n    },\n    \"Vivid\": {\n        \"2\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#A5AA99\"\n        ],\n        \"3\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#A5AA99\"\n        ],\n        \"4\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#A5AA99\"\n        ],\n        \"5\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#A5AA99\"\n        ],\n        \"6\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#24796C\",\n            \"#A5AA99\"\n        ],\n        \"7\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#24796C\",\n            \"#DAA51B\",\n            \"#A5AA99\"\n        ],\n        \"8\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#24796C\",\n            \"#DAA51B\",\n            \"#2F8AC4\",\n            \"#A5AA99\"\n        ],\n        \"9\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#24796C\",\n            \"#DAA51B\",\n            \"#2F8AC4\",\n            \"#764E9F\",\n            \"#A5AA99\"\n        ],\n        \"10\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#24796C\",\n            \"#DAA51B\",\n            \"#2F8AC4\",\n            \"#764E9F\",\n            \"#ED645A\",\n            \"#A5AA99\"\n        ],\n        \"11\": [\n            \"#E58606\",\n            \"#5D69B1\",\n            \"#52BCA3\",\n            \"#99C945\",\n            \"#CC61B0\",\n            \"#24796C\",\n            \"#DAA51B\",\n            \"#2F8AC4\",\n            \"#764E9F\",\n            \"#ED645A\",\n            \"#CC3A8E\",\n            \"#A5AA99\"\n        ],\n        \"tags\": [\n            \"qualitative\"\n        ]\n    }\n};\n\nvar colorbrewer_tags = {\n  \"Blues\": { \"tags\": [\"quantitative\"] },\n  \"BrBG\": { \"tags\": [\"diverging\"] },\n  \"Greys\": { \"tags\": [\"quantitative\"] },\n  \"PiYG\": { \"tags\": [\"diverging\"] },\n  \"PRGn\": { \"tags\": [\"diverging\"] },\n  \"Purples\": { \"tags\": [\"quantitative\"] },\n  \"RdYlGn\": { \"tags\": [\"diverging\"] },\n  \"Spectral\": { \"tags\": [\"diverging\"] },\n  \"YlOrBr\": { \"tags\": [\"quantitative\"] },\n  \"YlGn\": { \"tags\": [\"quantitative\"] },\n  \"YlGnBu\": { \"tags\": [\"quantitative\"] },\n  \"YlOrRd\": { \"tags\": [\"quantitative\"] }\n}\n\nvar colorbrewer = require('colorbrewer');\n\n// augment colorbrewer with tags\nfor (var r in colorbrewer) {\n  var ramps = colorbrewer[r];\n  var augmentedRamps = {};\n  for (var i in ramps) {\n    augmentedRamps[i] = ramps[i];\n  }\n\n  if (r in colorbrewer_tags) {\n    augmentedRamps.tags = colorbrewer_tags[r].tags;\n  }\n\n  cartocolor['cb_' + r] = augmentedRamps;\n}\n\nif (typeof define === \"function\" && define.amd) {\n    define(cartocolor);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = cartocolor;\n} else {\n    this.colorbrewer = cartocolor;\n}\n\n}();\n","module.exports = require('./cartocolor');\n","// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n","module.exports = require('./colorbrewer.js');\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","//     JavaScript Expression Parser (JSEP) 0.3.4\n//     JSEP may be freely distributed under the MIT License\n//     http://jsep.from.so/\n\n/*global module: true, exports: true, console: true */\n(function (root) {\n\t'use strict';\n\t// Node Types\n\t// ----------\n\n\t// This is the full set of types that any JSEP node can be.\n\t// Store them here to save space when minified\n\tvar COMPOUND = 'Compound',\n\t\tIDENTIFIER = 'Identifier',\n\t\tMEMBER_EXP = 'MemberExpression',\n\t\tLITERAL = 'Literal',\n\t\tTHIS_EXP = 'ThisExpression',\n\t\tCALL_EXP = 'CallExpression',\n\t\tUNARY_EXP = 'UnaryExpression',\n\t\tBINARY_EXP = 'BinaryExpression',\n\t\tLOGICAL_EXP = 'LogicalExpression',\n\t\tCONDITIONAL_EXP = 'ConditionalExpression',\n\t\tARRAY_EXP = 'ArrayExpression',\n\n\t\tPERIOD_CODE = 46, // '.'\n\t\tCOMMA_CODE  = 44, // ','\n\t\tSQUOTE_CODE = 39, // single quote\n\t\tDQUOTE_CODE = 34, // double quotes\n\t\tOPAREN_CODE = 40, // (\n\t\tCPAREN_CODE = 41, // )\n\t\tOBRACK_CODE = 91, // [\n\t\tCBRACK_CODE = 93, // ]\n\t\tQUMARK_CODE = 63, // ?\n\t\tSEMCOL_CODE = 59, // ;\n\t\tCOLON_CODE  = 58, // :\n\n\t\tthrowError = function(message, index) {\n\t\t\tvar error = new Error(message + ' at character ' + index);\n\t\t\terror.index = index;\n\t\t\terror.description = message;\n\t\t\tthrow error;\n\t\t},\n\n\t// Operations\n\t// ----------\n\n\t// Set `t` to `true` to save space (when minified, not gzipped)\n\t\tt = true,\n\t// Use a quickly-accessible map to store all of the unary operators\n\t// Values are set to `true` (it really doesn't matter)\n\t\tunary_ops = {'-': t, '!': t, '~': t, '+': t},\n\t// Also use a map for the binary operations but set their values to their\n\t// binary precedence for quick reference:\n\t// see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\n\t\tbinary_ops = {\n\t\t\t'||': 1, '&&': 2, '|': 3,  '^': 4,  '&': 5,\n\t\t\t'==': 6, '!=': 6, '===': 6, '!==': 6,\n\t\t\t'<': 7,  '>': 7,  '<=': 7,  '>=': 7,\n\t\t\t'<<':8,  '>>': 8, '>>>': 8,\n\t\t\t'+': 9, '-': 9,\n\t\t\t'*': 10, '/': 10, '%': 10\n\t\t},\n\t// Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)\n\t\tadditional_identifier_chars = {'$': t, '_': t},\n\t// Get return the longest key length of any object\n\t\tgetMaxKeyLen = function(obj) {\n\t\t\tvar max_len = 0, len;\n\t\t\tfor(var key in obj) {\n\t\t\t\tif((len = key.length) > max_len && obj.hasOwnProperty(key)) {\n\t\t\t\t\tmax_len = len;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max_len;\n\t\t},\n\t\tmax_unop_len = getMaxKeyLen(unary_ops),\n\t\tmax_binop_len = getMaxKeyLen(binary_ops),\n\t// Literals\n\t// ----------\n\t// Store the values to return for the various literals we may encounter\n\t\tliterals = {\n\t\t\t'true': true,\n\t\t\t'false': false,\n\t\t\t'null': null\n\t\t},\n\t// Except for `this`, which is special. This could be changed to something like `'self'` as well\n\t\tthis_str = 'this',\n\t// Returns the precedence of a binary operator or `0` if it isn't a binary operator\n\t\tbinaryPrecedence = function(op_val) {\n\t\t\treturn binary_ops[op_val] || 0;\n\t\t},\n\t// Utility function (gets called from multiple places)\n\t// Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\n\t\tcreateBinaryExpression = function (operator, left, right) {\n\t\t\tvar type = (operator === '||' || operator === '&&') ? LOGICAL_EXP : BINARY_EXP;\n\t\t\treturn {\n\t\t\t\ttype: type,\n\t\t\t\toperator: operator,\n\t\t\t\tleft: left,\n\t\t\t\tright: right\n\t\t\t};\n\t\t},\n\t\t// `ch` is a character code in the next three functions\n\t\tisDecimalDigit = function(ch) {\n\t\t\treturn (ch >= 48 && ch <= 57); // 0...9\n\t\t},\n\t\tisIdentifierStart = function(ch) {\n\t\t\treturn  (ch >= 65 && ch <= 90) || // A...Z\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\n\t\t\t\t\t(ch >= 128 && !binary_ops[String.fromCharCode(ch)]) || // any non-ASCII that is not an operator\n\t\t\t\t\t(additional_identifier_chars.hasOwnProperty(String.fromCharCode(ch))); // additional characters\n\t\t},\n\t\tisIdentifierPart = function(ch) {\n\t\t\treturn \t(ch >= 65 && ch <= 90) || // A...Z\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\n\t\t\t\t\t(ch >= 48 && ch <= 57) || // 0...9\n\t\t\t\t\t(ch >= 128 && !binary_ops[String.fromCharCode(ch)])|| // any non-ASCII that is not an operator\n\t\t\t\t\t(additional_identifier_chars.hasOwnProperty(String.fromCharCode(ch))); // additional characters\n\t\t},\n\n\t\t// Parsing\n\t\t// -------\n\t\t// `expr` is a string with the passed in expression\n\t\tjsep = function(expr) {\n\t\t\t// `index` stores the character number we are currently at while `length` is a constant\n\t\t\t// All of the gobbles below will modify `index` as we move along\n\t\t\tvar index = 0,\n\t\t\t\tcharAtFunc = expr.charAt,\n\t\t\t\tcharCodeAtFunc = expr.charCodeAt,\n\t\t\t\texprI = function(i) { return charAtFunc.call(expr, i); },\n\t\t\t\texprICode = function(i) { return charCodeAtFunc.call(expr, i); },\n\t\t\t\tlength = expr.length,\n\n\t\t\t\t// Push `index` up to the next non-space character\n\t\t\t\tgobbleSpaces = function() {\n\t\t\t\t\tvar ch = exprICode(index);\n\t\t\t\t\t// space or tab\n\t\t\t\t\twhile(ch === 32 || ch === 9 || ch === 10 || ch === 13) {\n\t\t\t\t\t\tch = exprICode(++index);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// The main parsing function. Much of this code is dedicated to ternary expressions\n\t\t\t\tgobbleExpression = function() {\n\t\t\t\t\tvar test = gobbleBinaryExpression(),\n\t\t\t\t\t\tconsequent, alternate;\n\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\tif(exprICode(index) === QUMARK_CODE) {\n\t\t\t\t\t\t// Ternary expression: test ? consequent : alternate\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tconsequent = gobbleExpression();\n\t\t\t\t\t\tif(!consequent) {\n\t\t\t\t\t\t\tthrowError('Expected expression', index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\t\tif(exprICode(index) === COLON_CODE) {\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\talternate = gobbleExpression();\n\t\t\t\t\t\t\tif(!alternate) {\n\t\t\t\t\t\t\t\tthrowError('Expected expression', index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\t\t\ttest: test,\n\t\t\t\t\t\t\t\tconsequent: consequent,\n\t\t\t\t\t\t\t\talternate: alternate\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrowError('Expected :', index);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Search for the operation portion of the string (e.g. `+`, `===`)\n\t\t\t\t// Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n\t\t\t\t// and move down from 3 to 2 to 1 character until a matching binary operation is found\n\t\t\t\t// then, return that binary operation\n\t\t\t\tgobbleBinaryOp = function() {\n\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\tvar biop, to_check = expr.substr(index, max_binop_len), tc_len = to_check.length;\n\t\t\t\t\twhile(tc_len > 0) {\n\t\t\t\t\t\t// Don't accept a binary op when it is an identifier.\n\t\t\t\t\t\t// Binary ops that start with a identifier-valid character must be followed\n\t\t\t\t\t\t// by a non identifier-part valid character\n\t\t\t\t\t\tif(binary_ops.hasOwnProperty(to_check) && (\n\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\n\t\t\t\t\t\t\t(index+to_check.length< expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tindex += tc_len;\n\t\t\t\t\t\t\treturn to_check;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t// This function is responsible for gobbling an individual expression,\n\t\t\t\t// e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n\t\t\t\tgobbleBinaryExpression = function() {\n\t\t\t\t\tvar ch_i, node, biop, prec, stack, biop_info, left, right, i, cur_biop;\n\n\t\t\t\t\t// First, try to get the leftmost thing\n\t\t\t\t\t// Then, check to see if there's a binary operator operating on that leftmost thing\n\t\t\t\t\tleft = gobbleToken();\n\t\t\t\t\tbiop = gobbleBinaryOp();\n\n\t\t\t\t\t// If there wasn't a binary operator, just return the leftmost node\n\t\t\t\t\tif(!biop) {\n\t\t\t\t\t\treturn left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, we need to start a stack to properly place the binary operations in their\n\t\t\t\t\t// precedence structure\n\t\t\t\t\tbiop_info = { value: biop, prec: binaryPrecedence(biop)};\n\n\t\t\t\t\tright = gobbleToken();\n\t\t\t\t\tif(!right) {\n\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\n\t\t\t\t\t}\n\t\t\t\t\tstack = [left, biop_info, right];\n\n\t\t\t\t\t// Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n\t\t\t\t\twhile((biop = gobbleBinaryOp())) {\n\t\t\t\t\t\tprec = binaryPrecedence(biop);\n\n\t\t\t\t\t\tif(prec === 0) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbiop_info = { value: biop, prec: prec };\n\n\t\t\t\t\t\tcur_biop = biop;\n\t\t\t\t\t\t// Reduce: make a binary expression from the three topmost entries.\n\t\t\t\t\t\twhile ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n\t\t\t\t\t\t\tright = stack.pop();\n\t\t\t\t\t\t\tbiop = stack.pop().value;\n\t\t\t\t\t\t\tleft = stack.pop();\n\t\t\t\t\t\t\tnode = createBinaryExpression(biop, left, right);\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnode = gobbleToken();\n\t\t\t\t\t\tif(!node) {\n\t\t\t\t\t\t\tthrowError(\"Expected expression after \" + cur_biop, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstack.push(biop_info, node);\n\t\t\t\t\t}\n\n\t\t\t\t\ti = stack.length - 1;\n\t\t\t\t\tnode = stack[i];\n\t\t\t\t\twhile(i > 1) {\n\t\t\t\t\t\tnode = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\n\t\t\t\t\t\ti -= 2;\n\t\t\t\t\t}\n\t\t\t\t\treturn node;\n\t\t\t\t},\n\n\t\t\t\t// An individual part of a binary expression:\n\t\t\t\t// e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n\t\t\t\tgobbleToken = function() {\n\t\t\t\t\tvar ch, to_check, tc_len;\n\n\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\tch = exprICode(index);\n\n\t\t\t\t\tif(isDecimalDigit(ch) || ch === PERIOD_CODE) {\n\t\t\t\t\t\t// Char code 46 is a dot `.` which can start off a numeric literal\n\t\t\t\t\t\treturn gobbleNumericLiteral();\n\t\t\t\t\t} else if(ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\n\t\t\t\t\t\t// Single or double quotes\n\t\t\t\t\t\treturn gobbleStringLiteral();\n\t\t\t\t\t} else if (ch === OBRACK_CODE) {\n\t\t\t\t\t\treturn gobbleArray();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tto_check = expr.substr(index, max_unop_len);\n\t\t\t\t\t\ttc_len = to_check.length;\n\t\t\t\t\t\twhile(tc_len > 0) {\n\t\t\t\t\t\t// Don't accept an unary op when it is an identifier.\n\t\t\t\t\t\t// Unary ops that start with a identifier-valid character must be followed\n\t\t\t\t\t\t// by a non identifier-part valid character\n\t\t\t\t\t\t\tif(unary_ops.hasOwnProperty(to_check) && (\n\t\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\n\t\t\t\t\t\t\t\t(index+to_check.length < expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\n\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\tindex += tc_len;\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttype: UNARY_EXP,\n\t\t\t\t\t\t\t\t\toperator: to_check,\n\t\t\t\t\t\t\t\t\targument: gobbleToken(),\n\t\t\t\t\t\t\t\t\tprefix: true\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isIdentifierStart(ch) || ch === OPAREN_CODE) { // open parenthesis\n\t\t\t\t\t\t\t// `foo`, `bar.baz`\n\t\t\t\t\t\t\treturn gobbleVariable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\t// Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n\t\t\t\t// keep track of everything in the numeric literal and then calling `parseFloat` on that string\n\t\t\t\tgobbleNumericLiteral = function() {\n\t\t\t\t\tvar number = '', ch, chCode;\n\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\n\t\t\t\t\t\tnumber += exprI(index++);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(exprICode(index) === PERIOD_CODE) { // can start with a decimal marker\n\t\t\t\t\t\tnumber += exprI(index++);\n\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\n\t\t\t\t\t\t\tnumber += exprI(index++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tch = exprI(index);\n\t\t\t\t\tif(ch === 'e' || ch === 'E') { // exponent marker\n\t\t\t\t\t\tnumber += exprI(index++);\n\t\t\t\t\t\tch = exprI(index);\n\t\t\t\t\t\tif(ch === '+' || ch === '-') { // exponent sign\n\t\t\t\t\t\t\tnumber += exprI(index++);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) { //exponent itself\n\t\t\t\t\t\t\tnumber += exprI(index++);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!isDecimalDigit(exprICode(index-1)) ) {\n\t\t\t\t\t\t\tthrowError('Expected exponent (' + number + exprI(index) + ')', index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tchCode = exprICode(index);\n\t\t\t\t\t// Check to make sure this isn't a variable name that start with a number (123abc)\n\t\t\t\t\tif(isIdentifierStart(chCode)) {\n\t\t\t\t\t\tthrowError('Variable names cannot start with a number (' +\n\t\t\t\t\t\t\t\t\tnumber + exprI(index) + ')', index);\n\t\t\t\t\t} else if(chCode === PERIOD_CODE) {\n\t\t\t\t\t\tthrowError('Unexpected period', index);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: LITERAL,\n\t\t\t\t\t\tvalue: parseFloat(number),\n\t\t\t\t\t\traw: number\n\t\t\t\t\t};\n\t\t\t\t},\n\n\t\t\t\t// Parses a string literal, staring with single or double quotes with basic support for escape codes\n\t\t\t\t// e.g. `\"hello world\"`, `'this is\\nJSEP'`\n\t\t\t\tgobbleStringLiteral = function() {\n\t\t\t\t\tvar str = '', quote = exprI(index++), closed = false, ch;\n\n\t\t\t\t\twhile(index < length) {\n\t\t\t\t\t\tch = exprI(index++);\n\t\t\t\t\t\tif(ch === quote) {\n\t\t\t\t\t\t\tclosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if(ch === '\\\\') {\n\t\t\t\t\t\t\t// Check for all of the common escape codes\n\t\t\t\t\t\t\tch = exprI(index++);\n\t\t\t\t\t\t\tswitch(ch) {\n\t\t\t\t\t\t\t\tcase 'n': str += '\\n'; break;\n\t\t\t\t\t\t\t\tcase 'r': str += '\\r'; break;\n\t\t\t\t\t\t\t\tcase 't': str += '\\t'; break;\n\t\t\t\t\t\t\t\tcase 'b': str += '\\b'; break;\n\t\t\t\t\t\t\t\tcase 'f': str += '\\f'; break;\n\t\t\t\t\t\t\t\tcase 'v': str += '\\x0B'; break;\n\t\t\t\t\t\t\t\tdefault : str += ch;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr += ch;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!closed) {\n\t\t\t\t\t\tthrowError('Unclosed quote after \"'+str+'\"', index);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: LITERAL,\n\t\t\t\t\t\tvalue: str,\n\t\t\t\t\t\traw: quote + str + quote\n\t\t\t\t\t};\n\t\t\t\t},\n\n\t\t\t\t// Gobbles only identifiers\n\t\t\t\t// e.g.: `foo`, `_value`, `$x1`\n\t\t\t\t// Also, this function checks if that identifier is a literal:\n\t\t\t\t// (e.g. `true`, `false`, `null`) or `this`\n\t\t\t\tgobbleIdentifier = function() {\n\t\t\t\t\tvar ch = exprICode(index), start = index, identifier;\n\n\t\t\t\t\tif(isIdentifierStart(ch)) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrowError('Unexpected ' + exprI(index), index);\n\t\t\t\t\t}\n\n\t\t\t\t\twhile(index < length) {\n\t\t\t\t\t\tch = exprICode(index);\n\t\t\t\t\t\tif(isIdentifierPart(ch)) {\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tidentifier = expr.slice(start, index);\n\n\t\t\t\t\tif(literals.hasOwnProperty(identifier)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: LITERAL,\n\t\t\t\t\t\t\tvalue: literals[identifier],\n\t\t\t\t\t\t\traw: identifier\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if(identifier === this_str) {\n\t\t\t\t\t\treturn { type: THIS_EXP };\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: IDENTIFIER,\n\t\t\t\t\t\t\tname: identifier\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Gobbles a list of arguments within the context of a function call\n\t\t\t\t// or array literal. This function also assumes that the opening character\n\t\t\t\t// `(` or `[` has already been gobbled, and gobbles expressions and commas\n\t\t\t\t// until the terminator character `)` or `]` is encountered.\n\t\t\t\t// e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n\t\t\t\tgobbleArguments = function(termination) {\n\t\t\t\t\tvar ch_i, args = [], node, closed = false;\n\t\t\t\t\tvar separator_count = 0;\n\t\t\t\t\twhile(index < length) {\n\t\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\t\tch_i = exprICode(index);\n\t\t\t\t\t\tif(ch_i === termination) { // done parsing\n\t\t\t\t\t\t\tclosed = true;\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\tif(termination === CPAREN_CODE && separator_count && separator_count >= args.length){\n\t\t\t\t\t\t\t\tthrowError('Unexpected token ' + String.fromCharCode(termination), index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (ch_i === COMMA_CODE) { // between expressions\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\tseparator_count++;\n\t\t\t\t\t\t\tif(separator_count !== args.length) { // missing argument\n\t\t\t\t\t\t\t\tif(termination === CPAREN_CODE) {\n\t\t\t\t\t\t\t\t\tthrowError('Unexpected token ,', index);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if(termination === CBRACK_CODE) {\n\t\t\t\t\t\t\t\t\tfor(var arg = args.length; arg< separator_count; arg++) {\n\t\t\t\t\t\t\t\t\t\targs.push(null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode = gobbleExpression();\n\t\t\t\t\t\t\tif(!node || node.type === COMPOUND) {\n\t\t\t\t\t\t\t\tthrowError('Expected comma', index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\targs.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!closed) {\n\t\t\t\t\t\tthrowError('Expected ' + String.fromCharCode(termination), index);\n\t\t\t\t\t}\n\t\t\t\t\treturn args;\n\t\t\t\t},\n\n\t\t\t\t// Gobble a non-literal variable name. This variable name may include properties\n\t\t\t\t// e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n\t\t\t\t// It also gobbles function calls:\n\t\t\t\t// e.g. `Math.acos(obj.angle)`\n\t\t\t\tgobbleVariable = function() {\n\t\t\t\t\tvar ch_i, node;\n\t\t\t\t\tch_i = exprICode(index);\n\n\t\t\t\t\tif(ch_i === OPAREN_CODE) {\n\t\t\t\t\t\tnode = gobbleGroup();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = gobbleIdentifier();\n\t\t\t\t\t}\n\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\tch_i = exprICode(index);\n\t\t\t\t\twhile(ch_i === PERIOD_CODE || ch_i === OBRACK_CODE || ch_i === OPAREN_CODE) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif(ch_i === PERIOD_CODE) {\n\t\t\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\t\t\tnode = {\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\n\t\t\t\t\t\t\t\tcomputed: false,\n\t\t\t\t\t\t\t\tobject: node,\n\t\t\t\t\t\t\t\tproperty: gobbleIdentifier()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if(ch_i === OBRACK_CODE) {\n\t\t\t\t\t\t\tnode = {\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\n\t\t\t\t\t\t\t\tcomputed: true,\n\t\t\t\t\t\t\t\tobject: node,\n\t\t\t\t\t\t\t\tproperty: gobbleExpression()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\t\t\tch_i = exprICode(index);\n\t\t\t\t\t\t\tif(ch_i !== CBRACK_CODE) {\n\t\t\t\t\t\t\t\tthrowError('Unclosed [', index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else if(ch_i === OPAREN_CODE) {\n\t\t\t\t\t\t\t// A function call is being made; gobble all the arguments\n\t\t\t\t\t\t\tnode = {\n\t\t\t\t\t\t\t\ttype: CALL_EXP,\n\t\t\t\t\t\t\t\t'arguments': gobbleArguments(CPAREN_CODE),\n\t\t\t\t\t\t\t\tcallee: node\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\t\tch_i = exprICode(index);\n\t\t\t\t\t}\n\t\t\t\t\treturn node;\n\t\t\t\t},\n\n\t\t\t\t// Responsible for parsing a group of things within parentheses `()`\n\t\t\t\t// This function assumes that it needs to gobble the opening parenthesis\n\t\t\t\t// and then tries to gobble everything within that parenthesis, assuming\n\t\t\t\t// that the next thing it should see is the close parenthesis. If not,\n\t\t\t\t// then the expression probably doesn't have a `)`\n\t\t\t\tgobbleGroup = function() {\n\t\t\t\t\tindex++;\n\t\t\t\t\tvar node = gobbleExpression();\n\t\t\t\t\tgobbleSpaces();\n\t\t\t\t\tif(exprICode(index) === CPAREN_CODE) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrowError('Unclosed (', index);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Responsible for parsing Array literals `[1, 2, 3]`\n\t\t\t\t// This function assumes that it needs to gobble the opening bracket\n\t\t\t\t// and then tries to gobble the expressions as arguments.\n\t\t\t\tgobbleArray = function() {\n\t\t\t\t\tindex++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: ARRAY_EXP,\n\t\t\t\t\t\telements: gobbleArguments(CBRACK_CODE)\n\t\t\t\t\t};\n\t\t\t\t},\n\n\t\t\t\tnodes = [], ch_i, node;\n\n\t\t\twhile(index < length) {\n\t\t\t\tch_i = exprICode(index);\n\n\t\t\t\t// Expressions can be separated by semicolons, commas, or just inferred without any\n\t\t\t\t// separators\n\t\t\t\tif(ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\n\t\t\t\t\tindex++; // ignore separators\n\t\t\t\t} else {\n\t\t\t\t\t// Try to gobble each expression individually\n\t\t\t\t\tif((node = gobbleExpression())) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t// If we weren't able to find a binary expression and are out of room, then\n\t\t\t\t\t// the expression passed in probably has too much\n\t\t\t\t\t} else if(index < length) {\n\t\t\t\t\t\tthrowError('Unexpected \"' + exprI(index) + '\"', index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there's only one expression just try returning the expression\n\t\t\tif(nodes.length === 1) {\n\t\t\t\treturn nodes[0];\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\ttype: COMPOUND,\n\t\t\t\t\tbody: nodes\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t// To be filled in by the template\n\tjsep.version = '0.3.4';\n\tjsep.toString = function() { return 'JavaScript Expression Parser (JSEP) v' + jsep.version; };\n\n\t/**\n\t * @method jsep.addUnaryOp\n\t * @param {string} op_name The name of the unary op to add\n\t * @return jsep\n\t */\n\tjsep.addUnaryOp = function(op_name) {\n\t\tmax_unop_len = Math.max(op_name.length, max_unop_len);\n\t\tunary_ops[op_name] = t; return this;\n\t};\n\n\t/**\n\t * @method jsep.addBinaryOp\n\t * @param {string} op_name The name of the binary op to add\n\t * @param {number} precedence The precedence of the binary op (can be a float)\n\t * @return jsep\n\t */\n\tjsep.addBinaryOp = function(op_name, precedence) {\n\t\tmax_binop_len = Math.max(op_name.length, max_binop_len);\n\t\tbinary_ops[op_name] = precedence;\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.addIdentifierChar\n\t * @param {string} char The additional character to treat as a valid part of an identifier\n\t * @return jsep\n\t */\n\tjsep.addIdentifierChar = function(char) {\n\t\tadditional_identifier_chars[char] = t;\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.addLiteral\n\t * @param {string} literal_name The name of the literal to add\n\t * @param {*} literal_value The value of the literal\n\t * @return jsep\n\t */\n\tjsep.addLiteral = function(literal_name, literal_value) {\n\t\tliterals[literal_name] = literal_value;\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.removeUnaryOp\n\t * @param {string} op_name The name of the unary op to remove\n\t * @return jsep\n\t */\n\tjsep.removeUnaryOp = function(op_name) {\n\t\tdelete unary_ops[op_name];\n\t\tif(op_name.length === max_unop_len) {\n\t\t\tmax_unop_len = getMaxKeyLen(unary_ops);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.removeAllUnaryOps\n\t * @return jsep\n\t */\n\tjsep.removeAllUnaryOps = function() {\n\t\tunary_ops = {};\n\t\tmax_unop_len = 0;\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.removeIdentifierChar\n\t * @param {string} char The additional character to stop treating as a valid part of an identifier\n\t * @return jsep\n\t */\n\tjsep.removeIdentifierChar = function(char) {\n\t\tdelete additional_identifier_chars[char];\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * @method jsep.removeBinaryOp\n\t * @param {string} op_name The name of the binary op to remove\n\t * @return jsep\n\t */\n\tjsep.removeBinaryOp = function(op_name) {\n\t\tdelete binary_ops[op_name];\n\t\tif(op_name.length === max_binop_len) {\n\t\t\tmax_binop_len = getMaxKeyLen(binary_ops);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.removeAllBinaryOps\n\t * @return jsep\n\t */\n\tjsep.removeAllBinaryOps = function() {\n\t\tbinary_ops = {};\n\t\tmax_binop_len = 0;\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.removeLiteral\n\t * @param {string} literal_name The name of the literal to remove\n\t * @return jsep\n\t */\n\tjsep.removeLiteral = function(literal_name) {\n\t\tdelete literals[literal_name];\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method jsep.removeAllLiterals\n\t * @return jsep\n\t */\n\tjsep.removeAllLiterals = function() {\n\t\tliterals = {};\n\n\t\treturn this;\n\t};\n\n\t// In desktop environments, have a way to restore the old value for `jsep`\n\tif (typeof exports === 'undefined') {\n\t\tvar old_jsep = root.jsep;\n\t\t// The star of the show! It's a function!\n\t\troot.jsep = jsep;\n\t\t// And a courteous function willing to move out of the way for other similarly-named objects!\n\t\tjsep.noConflict = function() {\n\t\t\tif(root.jsep === jsep) {\n\t\t\t\troot.jsep = old_jsep;\n\t\t\t}\n\t\t\treturn jsep;\n\t\t};\n\t} else {\n\t\t// In Node.JS environments\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = jsep;\n\t\t} else {\n\t\t\texports.parse = jsep;\n\t\t}\n\t}\n}(this));\n","'use strict';\n\nmodule.exports = lineclip;\n\nlineclip.polyline = lineclip;\nlineclip.polygon = polygonclip;\n\n\n// Cohen-Sutherland line clippign algorithm, adapted to efficiently\n// handle polylines rather than just segments\n\nfunction lineclip(points, bbox, result) {\n\n    var len = points.length,\n        codeA = bitCode(points[0], bbox),\n        part = [],\n        i, a, b, codeB, lastCode;\n\n    if (!result) result = [];\n\n    for (i = 1; i < len; i++) {\n        a = points[i - 1];\n        b = points[i];\n        codeB = lastCode = bitCode(b, bbox);\n\n        while (true) {\n\n            if (!(codeA | codeB)) { // accept\n                part.push(a);\n\n                if (codeB !== lastCode) { // segment went outside\n                    part.push(b);\n\n                    if (i < len - 1) { // start a new line\n                        result.push(part);\n                        part = [];\n                    }\n                } else if (i === len - 1) {\n                    part.push(b);\n                }\n                break;\n\n            } else if (codeA & codeB) { // trivial reject\n                break;\n\n            } else if (codeA) { // a outside, intersect with clip edge\n                a = intersect(a, b, codeA, bbox);\n                codeA = bitCode(a, bbox);\n\n            } else { // b outside\n                b = intersect(a, b, codeB, bbox);\n                codeB = bitCode(b, bbox);\n            }\n        }\n\n        codeA = lastCode;\n    }\n\n    if (part.length) result.push(part);\n\n    return result;\n}\n\n// Sutherland-Hodgeman polygon clipping algorithm\n\nfunction polygonclip(points, bbox) {\n\n    var result, edge, prev, prevInside, i, p, inside;\n\n    // clip against each side of the clip rectangle\n    for (edge = 1; edge <= 8; edge *= 2) {\n        result = [];\n        prev = points[points.length - 1];\n        prevInside = !(bitCode(prev, bbox) & edge);\n\n        for (i = 0; i < points.length; i++) {\n            p = points[i];\n            inside = !(bitCode(p, bbox) & edge);\n\n            // if segment goes through the clip window, add an intersection\n            if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n\n            if (inside) result.push(p); // add a point if it's inside\n\n            prev = p;\n            prevInside = inside;\n        }\n\n        points = result;\n\n        if (!points.length) break;\n    }\n\n    return result;\n}\n\n// intersect a segment against one of the 4 lines that make up the bbox\n\nfunction intersect(a, b, edge, bbox) {\n    return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : // top\n           edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : // bottom\n           edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : // right\n           edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : // left\n           null;\n}\n\n// bit code reflects the point position relative to the bbox:\n\n//         left  mid  right\n//    top  1001  1000  1010\n//    mid  0001  0000  0010\n// bottom  0101  0100  0110\n\nfunction bitCode(p, bbox) {\n    var code = 0;\n\n    if (p[0] < bbox[0]) code |= 1; // left\n    else if (p[0] > bbox[2]) code |= 2; // right\n\n    if (p[1] < bbox[1]) code |= 4; // bottom\n    else if (p[1] > bbox[3]) code |= 8; // top\n\n    return code;\n}\n","'use strict'\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n         self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n","module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n","var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};","import mitt from 'mitt';\nimport util from './utils/util';\nimport Viz from './Viz';\nimport SourceBase from './sources/Base';\nimport Renderer from './renderer/Renderer';\nimport RenderLayer from './renderer/RenderLayer';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../src/errors/carto-validation-error';\nimport CartoRuntimeError from '../src/errors/carto-runtime-error';\n\nimport { cubic } from './renderer/viz/expressions';\nimport { mat4 } from 'gl-matrix';\nimport { computeViewportFromCameraMatrix } from './utils/util';\nimport LayerConcurrencyHelper from './LayerConcurrencyHelper';\n\n// There is one renderer per map, so the layers added to the same map\n// use the same renderer with each renderLayer\nconst renderers = new WeakMap();\n\nconst states = Object.freeze({\n    INIT: 'init', // Initial state until the Source is rendered for the first time\n    IDLE: 'idle', // The Source has been rendered for the first time already, but there are no scheduled updates\n    UPDATING: 'updating' // The Source has been rendered for the first time already and there is a scheduled update\n});\n\n/**\n*\n* A Layer is the primary way to visualize geospatial data.\n*\n* To create a layer a {@link carto.source|source} and {@link carto.Viz|viz} are required:\n*\n* - The {@link carto.source|source} is used to know **what** data will be displayed in the Layer.\n* - The {@link carto.Viz|viz} is used to know **how** to draw the data in the Layer, Viz instances can only be bound to one single layer.\n*\n* Note: This Layer implements {@link https://www.mapbox.com/mapbox-gl-js/api/#customlayerinterface|Mapbox GL JS - Custom Layer Interface}\n*\n* @param {String} id - The ID of the layer. Can be used in the {@link addTo|addTo} function\n* @param {carto.source} source - The source of the data\n* @param {carto.Viz} viz - The description of the visualization of the data\n* @throws CartoError\n*\n* @example\n* const layer = new carto.Layer('layer0', source, viz);\n*\n* @constructor Layer\n* @name carto.Layer\n* @api\n*/\n\nexport default class Layer {\n    constructor (id, source, viz) {\n        this._checkId(id);\n        this._checkSource(source);\n        this._checkViz(viz);\n\n        /* Mapbox GL Custom Layer API attributes:\n          - id: string\n          - type: \"custom\"\n        */\n        this.id = id;\n        this.type = 'custom';\n\n        viz._boundLayer = this;\n\n        this._context = new Promise(resolve => {\n            this._contextInitialize = resolve;\n        });\n\n        this._state = states.INIT;\n        this._visible = true;\n        this._emitter = mitt();\n        this._renderLayer = new RenderLayer();\n\n        this.concurrencyHelper = new LayerConcurrencyHelper();\n        this._initialSource = source;\n        this._initialViz = viz;\n        this._renderWaiters = [];\n        this._cameraMatrix = mat4.identity([]);\n\n        this._updateLayer = this.update(source, viz);\n    }\n\n    /**\n     * Layer visibility property.\n     *\n     * @type {boolean}\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     */\n    get visible () {\n        return this._visible;\n    }\n\n    set visible (visible) {\n        const initial = this._visible;\n        this.map.setLayoutProperty(this.id, 'visibility', visible ? 'visible' : 'none');\n        this._visible = visible;\n        if (visible !== initial) {\n            this._fire('updated', 'visibility change');\n        }\n    }\n\n    /**\n     * Change layer visibility to visible\n     *\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     * @fires updated\n     */\n    show () {\n        this.visible = true;\n    }\n\n    /**\n     * Change layer visibility to hidden\n     *\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     * @fires updated\n     */\n    hide () {\n        this.visible = false;\n    }\n\n    /**\n     * Register an event handler for the given event name.\n     *\n     * @param {String} eventName - Type of event to listen for. Valid names are: `loaded`, `updated`, and `removed`.\n     * @param {function} callback - Function to call in response to given event\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     */\n    on (eventName, callback) {\n        return this._emitter.on(eventName, callback);\n    }\n\n    /**\n     * Remove an event handler for the given type.\n     *\n     * @param {String} eventName - Type of event to unregister. Valid names are: `loaded`, `updated`, and `removed`.\n     * @param {function} callback - Handler function to unregister\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     */\n    off (eventName, callback) {\n        return this._emitter.off(eventName, callback);\n    }\n\n    /**\n     * Add this layer to a map. If the map's style is not loaded yet it will wait for it to add the layer as soon as possible.\n     *\n     * @param {mapboxgl.Map} map - The map on which to add the layer\n     * @param {string?} beforeLayerID - The ID of an existing layer to insert the new layer before. If this values is not passed the layer will be added on the top of the existing layers.\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     */\n    async addTo (map, beforeLayerID) {\n        // Manage errors, whether they are an Evented Error or a common Error\n        try {\n            map.once('error', (data) => {\n                console.warn(data.error.message);\n                this._waitForMapToLoad(map, beforeLayerID);\n            });\n            map.addLayer(this, beforeLayerID);\n        } catch (error) {\n            const STYLE_ERROR_REGEX = /Style is not done loading/;\n            const NO_STYLE_AT_ALL = /Cannot read property 'addLayer' of undefined/;\n            if (!(STYLE_ERROR_REGEX.test(error) || NO_STYLE_AT_ALL.test(error))) {\n                throw new CartoRuntimeError(`Error adding layer to map: ${error}`);\n            }\n            this._waitForMapToLoad(map, beforeLayerID);\n        }\n    }\n\n    _waitForMapToLoad (map, beforeLayerID) {\n        map.on('load', () => {\n            map.addLayer(this, beforeLayerID);\n        });\n    }\n\n    /**\n     * Remove this layer from the map. It should be called after the layer is loaded. Otherwise, it will not delete the layer.\n     *\n     * @memberof carto.Layer\n     * @instance\n     * @api\n     */\n    remove () {\n        if (this.map) {\n            this.map.removeLayer(this.id);\n        }\n    }\n\n    /**\n     * Update the layer with a new Source and a new Viz object, replacing the current ones. The update is done atomically, i.e.:\n     * the viz will be changed with the source, not before it.\n     *\n     * This method will return a promise that will be resolved once the source and the visualization are validated.\n     *\n     * The promise will be rejected if the validation fails, for example\n     * because the visualization expects a property name that is not present in the source.\n     *\n     * The promise will be rejected also if this method is invoked again before the first promise is resolved.\n     * If the promise is rejected the layer's source and viz won't be changed by this call.\n     *\n     * Concurrent calls to `blendToViz` or `blendTo` won't override calls to update (like calls to `update` do).\n     *\n     * @param {carto.source} source - The new Source object.\n     * @param {carto.Viz?} viz - Optional. The new Viz object. Defaults to the current viz.\n     * @memberof carto.Layer\n     * @instance\n     * @async\n     * @api\n     */\n    async update (source, viz = this._viz) {\n        return this._update(source, viz, true);\n    }\n\n    async _update (source, viz, majorChange) {\n        this._checkSource(source);\n        this._checkViz(viz);\n\n        const safeSource = this._cloneSourceIfDifferent(source);\n\n        let change = this._initChange(majorChange);\n        const [, metadata] = await Promise.all([\n            viz.loadImages(), // start requesting images ASAP\n            safeSource.requestMetadata(viz)\n        ]);\n        await this._context;\n\n        this._endChange(majorChange, change);\n\n        this._commitSuccesfulUpdate(metadata, viz, safeSource);\n    }\n\n    _initChange (majorChange) {\n        if (majorChange) {\n            return this.concurrencyHelper.initMajorChange();\n        }\n        return this.concurrencyHelper.initMinorChange();\n    }\n\n    _endChange (majorChange, change) {\n        if (majorChange) {\n            this.concurrencyHelper.endMajorChange(change);\n        } else {\n            this.concurrencyHelper.endMinorChange(change);\n        }\n    }\n\n    /**\n     * Updating viz and source, after having checked them and having required new metadata\n     *\n     * @param {Metadata} metadata\n     * @param {carto.Viz} newViz\n     * @param {carto.source} newSource\n     */\n    _commitSuccesfulUpdate (metadata, newViz, newSource) {\n        this.metadata = metadata;\n\n        this._commitVizChange(newViz);\n        this._commitSourceChange(newSource);\n\n        // to force pre-render (which gives us the matrix to request data from the source...)\n        this._needRefresh();\n    }\n\n    /**\n     * Updates the viz with the newViz\n     *\n     * @param {carto.Viz} newViz\n     */\n    _commitVizChange (newViz) {\n        if (this._viz) {\n            this._viz.onChange(null);\n        }\n        newViz.setDefaultsIfRequired(this.metadata.geomType);\n        newViz.setDefaultsIfRequired(this._renderLayer.type);\n        newViz.onChange(this._vizChanged.bind(this));\n        newViz._bindMetadata(this.metadata);\n        newViz.gl = this.gl;\n        this._viz = newViz;\n    }\n\n    /**\n     * Updates the source with the newSource\n     *\n     * @param {carto.source} newSource\n     */\n    _commitSourceChange (newSource) {\n        newSource.bindLayer(this._onDataframeAdded.bind(this));\n        if (newSource !== this._source) {\n            this._freeSource();\n        }\n        this._source = newSource;\n    }\n\n    /**\n     * Returns a safe source from the new required source.\n     *\n     * @param {carto.source} source\n     * @returns {carto.source} safeSource\n     */\n    _cloneSourceIfDifferent (source) {\n        // The cloning allows the source to be safely used in other layers.\n        // That's because using `source.requestMetadata()` can update later on its internal state (depending on what's required by the viz)\n\n        let safeSource;\n        if (source !== this._source) {\n            safeSource = source._clone();\n        } else {\n            safeSource = source;\n        }\n        return safeSource;\n    }\n\n    /**\n     * Blend the current viz with another viz.\n     *\n     * This allows smooth transitions between two different Vizs.\n     *\n     * Blending won't be performed when convenient for the attached Source. This\n     * happens with Maps API sources when the new Viz uses a different set of properties or\n     * aggregations. In these cases a hard transition will be used instead.\n     *\n     * This method returns a promise that will be resolved if validations passed.\n     *\n     * The promise will be rejected if the validation fails, for example\n     * because the visualization expects a property name that is not present in the source.\n     *\n     * The promise will be rejected also if this method is invoked again before the first promise is resolved.\n     * If the promise is rejected the layer's viz won't be changed by this call.\n     *\n     * Concurrent calls to `update` will override the effects of `blendToViz`:\n     * if a call to `blendToViz` is performed after a call to `update`, but the `update` hasn't been resolved yet,\n     * the call to `update` will override the call to `blendToViz` is it resolves.\n     *\n     * @example <caption> Smooth transition variating point size </caption>\n     * // We create two different vizs varying the width\n     * const viz0 = new carto.Viz({ width: 10 });\n     * const viz1 = new carto.Viz({ width: 20 });\n     * // Create a layer with the first viz\n     * const layer = new carto.Layer('layer', source, viz0);\n     * // We add the layer to the map, the points in this layer will have widh 10\n     * layer.addTo(map, 'layer0');\n     * // The points will be animated from 10px to 20px for 500ms.\n     * layer.blendToViz(viz1, 500);\n     *\n     * @param {carto.Viz} viz - The final viz\n     * @param {number} [duration=400] - The animation duration in milliseconds\n     *\n     * @memberof carto.Layer\n     * @instance\n     * @async\n     * @api\n     */\n    async blendToViz (viz, ms = 400, interpolator = cubic) {\n        this._checkViz(viz);\n        await this._updateLayer;\n\n        // It doesn't make sense to blendTo if a new request is required\n        if (this._viz && !this._source.requiresNewMetadata(viz)) {\n            Object.keys(this._viz.variables).map(varName => {\n                viz.variables[varName] = this._viz.variables[varName];\n            });\n\n            viz.color._blendFrom(this._viz.color, ms, interpolator);\n            viz.strokeColor._blendFrom(this._viz.strokeColor, ms, interpolator);\n            viz.width._blendFrom(this._viz.width, ms, interpolator);\n            viz.strokeWidth._blendFrom(this._viz.strokeWidth, ms, interpolator);\n            viz.filter._blendFrom(this._viz.filter, ms, interpolator);\n            // FIXME viz.symbol._blendFrom(this._viz.symbol, ms, interpolator);\n            // FIXME viz.symbolPlacement._blendFrom(this._viz.symbolPlacement, ms, interpolator);\n        }\n        return this._update(this._source, viz, false);\n    }\n\n    /**\n     * Viz attached to this layer.\n     *\n     * Calls to `blendToViz` and `update` won't update the viz until those calls \"commit\",\n     * having performed and completed all asynchronous necessary sanity checks.\n     *\n     * @type {carto.Viz}\n     * @memberof carto.Layer\n     * @readonly\n     * @api\n     */\n    get viz () {\n        return this._viz;\n    }\n\n    hasDataframes () {\n        return this._renderLayer.hasDataframes();\n    }\n\n    getNumFeatures () {\n        return this._renderLayer.getNumFeatures();\n    }\n\n    getFeaturesAtPosition (pos) {\n        return this.visible\n            ? this._renderLayer.getFeaturesAtPosition(pos).map(this._addLayerIdToFeature.bind(this))\n            : [];\n    }\n\n    isAnimated () {\n        return this._viz && this._viz.isAnimated();\n    }\n\n    isPlaying () {\n        return this._viz && this._viz.isPlaying();\n    }\n\n    /**\n     * Custom Layer API: `onAdd` function\n     */\n    onAdd (map, gl) {\n        this.map = map;\n        this.gl = gl;\n        this.renderer = _getRenderer(map, gl);\n\n        // Initialize render layer\n        this._renderLayer.setRenderer(this.renderer);\n        this._contextInitialize();\n    }\n\n    /**\n     * Custom Layer API: `onRemove` function\n     */\n    onRemove (map, gl) {\n        this._fire('removed', this);\n    }\n\n    /**\n     * Custom Layer API: `prerender` function\n     */\n    prerender (gl, matrix) {\n        const isNewCameraMatrix = this._detectAndSetNewMatrix(matrix);\n        if (this._source && this.visible) {\n            this._checkSourceRequestsAndFireEvents(isNewCameraMatrix);\n        }\n    }\n\n    _detectAndSetNewMatrix (newMatrix) {\n        const isNewMatrix = !mat4.exactEquals(newMatrix, this._cameraMatrix);\n        if (isNewMatrix) {\n            this._cameraMatrix = newMatrix;\n            this.renderer.matrix = newMatrix; // in case it is not set yet (first layer)\n        }\n        return isNewMatrix;\n    }\n\n    _checkSourceRequestsAndFireEvents (isNewMatrix) {\n        if (this.checkForDataframesUpdate && this.checkForDataframesUpdate.cancel) {\n            this.checkForDataframesUpdate.cancel();\n        }\n\n        this.checkForDataframesUpdate = this._source.requestData(this._getZoom(), this._getViewport());\n\n        this.checkForDataframesUpdate.then(dataframesHaveChanged => {\n            if (dataframesHaveChanged) {\n                this._needRefresh().then(() => {\n                    if (this._state === states.INIT) {\n                        this._state = states.IDLE;\n                        this._fire('loaded');\n                    }\n                    this._fire('updated', 'different dataframes required from source');\n                });\n            } else {\n                if (isNewMatrix) {\n                    this._fire('updated', 'new camara view');\n                }\n            }\n        });\n    }\n\n    _getViewport () {\n        return computeViewportFromCameraMatrix(this._cameraMatrix);\n    }\n\n    /**\n     * Custom Layer API: `render` function\n     */\n    render (gl, matrix) {\n        this._paintLayer();\n\n        this._renderWaiters.forEach(resolve => resolve());\n\n        if (this.isAnimated()) {\n            if (this.isPlaying()) {\n                this._needRefresh().then(() => {\n                    this._fire('updated', 'animation is playing');\n                });\n            } else {\n                this._keepTimestampIfPaused();\n            }\n        } else {\n            if (this._state === states.UPDATING) {\n                this._state = states.IDLE;\n                this._fire('updated', 'updated viz');\n            }\n        }\n    }\n\n    _keepTimestampIfPaused () {\n        let timestamp = this.renderer.timestamp;\n        // to avoid 'jumps' after resume playing.\n        this._viz._getRootStyleExpressions().forEach(vizExpr => {\n            vizExpr._setTimestamp(timestamp);\n        });\n    }\n\n    _paintLayer () {\n        this._renderLayer.setViz(this._viz);\n        this.renderer.renderLayer(this._renderLayer, {\n            zoomLevel: this.map.getZoom() // for zoom expressions\n        });\n    }\n\n    _fire (eventType, eventData) {\n        // We don't want to fire an event within MGL custom layer callback since an error there\n        // would crash MGL renderer\n        // We fire the event asynchronously to be safe\n        new Promise(resolve => {\n            this._emitter.emit(eventType, eventData);\n            resolve();\n        });\n    }\n\n    /**\n     * Callback executed when the client adds a new dataframe\n     * @param {Dataframe} dataframe\n     */\n    _onDataframeAdded (dataframe) {\n        this._renderLayer.addDataframe(dataframe);\n        if (this._viz) {\n            this._viz.setDefaultsIfRequired(dataframe.type);\n        }\n    }\n\n    _needRefresh () {\n        if (this._state === states.IDLE) {\n            this._state = states.UPDATING;\n        }\n        return new Promise(resolve => {\n            this._renderWaiters.push(resolve);\n            this.map.triggerRepaint();\n        });\n    }\n\n    _addLayerIdToFeature (feature) {\n        feature.layerId = this.id;\n        return feature;\n    }\n\n    async _vizChanged (viz) {\n        return this._update(this._source, viz, false);\n    }\n\n    _checkId (id) {\n        if (id === undefined) {\n            throw new CartoValidationError('\\'id\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n        }\n        if (!util.isString(id)) {\n            throw new CartoValidationError('\\'id\\' property must be a string.', CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n        if (id === '') {\n            throw new CartoValidationError('\\'id\\' property must be not empty.', CartoValidationErrorTypes.INCORRECT_VALUE);\n        }\n    }\n\n    _checkSource (source) {\n        if (source === undefined) {\n            throw new CartoValidationError('\\'source\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n        }\n        if (!(source instanceof SourceBase)) {\n            throw new CartoValidationError('The given object is not a valid \\'source\\'. See \"carto.source\".', CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n    }\n\n    _checkViz (viz) {\n        if (util.isUndefined(viz)) {\n            throw new CartoValidationError('\\'viz\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n        }\n\n        if (!(viz instanceof Viz)) {\n            throw new CartoValidationError(\n                'The given object is not a valid \\'viz\\'. See \"carto.Viz\".',\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n\n        if (viz._boundLayer && viz._boundLayer !== this) {\n            // Note the required 1 on 1 relationship between layer & viz\n            throw new CartoValidationError(\n                'The given Viz object is already bound to another layer. Vizs cannot be shared between different layers.',\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n    }\n\n    _getZoom () {\n        return this.map.getZoom();\n    }\n\n    _freeSource () {\n        if (this._source) {\n            this._source.free();\n        }\n        this._renderLayer.freeDataframes();\n    }\n}\n\nfunction _getRenderer (map, gl) {\n    if (!renderers.get(map)) {\n        const renderer = new Renderer();\n        renderer.initialize(gl);\n        renderers.set(map, renderer);\n    }\n    return renderers.get(map);\n}\n","import CartoRuntimeError from '../src/errors/carto-runtime-error';\n\n/**\n * Helper to manage concurrent updates to a Layer.\n *\n * There are 2 type of changes in a layer's source or viz:\n *      - Major changes. Major changes are performed by the `Layer.update` method and they will override (have priority over) minor changes\n *      - Minor changes. Minor changes are performed by the `Layer.blendToViz` and `blendTo` method and they won't override concurrent calls to `Layer.update`\n *\n * @export\n * @class LayerConcurrency\n */\nexport default class LayerConcurrencyHelper {\n    constructor () {\n        this._majorNextUID = 0;\n        this._majorCurrentUID = null;\n        this._minorNextUID = 0;\n        this._minorCurrentUID = null;\n    }\n\n    /**\n     * Init a Major change\n     *\n     * @returns {Object} changeUID\n     */\n    initMajorChange () {\n        return this._getChangeUID(true);\n    }\n\n    /**\n     * Init a Minor change\n     *\n     * @returns {Object} changeUID\n     */\n    initMinorChange () {\n        return this._getChangeUID(false);\n    }\n\n    /**\n     * End a Major change, checking previously for concurrency problems\n     *\n     * @param {Object} changeUID\n     */\n    endMajorChange (changeUID) {\n        this._detectConcurrentChanges(true, changeUID);\n        this._setUID(changeUID);\n    }\n\n    /**\n     * End a Minor change, checking previously for concurrency problems\n     *\n     * @param {Object} changeUID\n     */\n    endMinorChange (changeUID) {\n        this._detectConcurrentChanges(false, changeUID);\n        this._setUID(changeUID);\n    }\n\n    /**\n     * Get an object with UID counters, that serve as a guard against concurrent changes\n     * @param {Boolean} majorChange\n     */\n    _getChangeUID (majorChange) {\n        let uid;\n        if (majorChange) {\n            uid = { major: this._majorNextUID, minor: 0 };\n            this._majorNextUID++;\n            this._minorNextUID = 1;\n        } else {\n            uid = { major: this._majorCurrentUID, minor: this._minorNextUID };\n            this._minorNextUID++;\n        }\n        return uid;\n    }\n\n    /**\n     * Check against concurrency problems (raise an error if any is found)\n     * @param {Boolean} majorChange\n     * @param {Object} changeUID\n     */\n    _detectConcurrentChanges (majorChange, changeUID) {\n        if (majorChange) {\n            if (this._majorCurrentUID > changeUID.major) {\n                throw new CartoRuntimeError(`Another \\`Layer.update()\\` finished before this one:\n                 Commit ${changeUID} overridden by commit ${this._majorCurrentUID}.`);\n            }\n        } else {\n            if (this._majorCurrentUID > changeUID.major || (this._majorCurrentUID !== null && changeUID.major === null)) {\n                throw new CartoRuntimeError(`Another \\`Layer.update()\\` finished before this viz change:\n                 Commit ${changeUID} overridden by commit ${this._majorCurrentUID}.${this._minorCurrentUID}`);\n            }\n            if (this._minorCurrentUID > changeUID.minor) {\n                throw new CartoRuntimeError(`Another \\`viz change\\` finished before this one:\n                 Commit ${changeUID.major}.${changeUID.minor} overridden by commit ${this._majorCurrentUID}.${this._minorCurrentUID}`);\n            }\n        }\n    }\n\n    /**\n     * Update internal counters\n     *\n     * @param {Object} changeUID\n     */\n    _setUID (changeUID) {\n        this._majorCurrentUID = changeUID.major;\n        this._minorCurrentUID = changeUID.minor;\n    }\n}\n","import schema from './renderer/schema';\nimport shaders from './renderer/shaders/index';\nimport { compileShader } from './renderer/shaders/shaderCompiler';\nimport * as s from './renderer/viz/expressions';\nimport BaseExpression from './renderer/viz/expressions/base';\nimport { implicitCast, noOverrideColor } from './renderer/viz/expressions/utils';\nimport { parseVizDefinition } from './renderer/viz/parser';\nimport util from './utils/util';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../src/errors/carto-validation-error';\nimport CartoRuntimeError from '../src/errors/carto-runtime-error';\nimport pointVertexShaderGLSL from './renderer/shaders/geometry/point/pointVertexShader.glsl';\nimport pointFragmentShaderGLSL from './renderer/shaders/geometry/point/pointFragmentShader.glsl';\nimport lineVertexShaderGLSL from './renderer/shaders/geometry/line/lineVertexShader.glsl';\nimport lineFragmentShaderGLSL from './renderer/shaders/geometry/line/lineFragmentShader.glsl';\nimport polygonVertexShaderGLSL from './renderer/shaders/geometry/polygon/polygonVertexShader.glsl';\nimport polygonFragmentShaderGLSL from './renderer/shaders/geometry/polygon/polygonFragmentShader.glsl';\nimport Image from './renderer/viz/expressions/Image';\nimport svgs from './renderer/viz/defaultSVGs';\nimport Placement from './renderer/viz/expressions/Placement';\nimport Translate from './renderer/viz/expressions/transformation/Translate';\nimport { GEOMETRY_TYPE } from './utils/geometry';\nimport { MAX_RESOLUTION, MIN_RESOLUTION, SUPPORTED_VIZ_PROPERTIES, STYLE_VIZ_PROPERTIES } from './constants/viz';\n\nconst DEFAULT_COLOR_EXPRESSION = () => _markDefault(s.rgb(0, 0, 0));\nconst DEFAULT_WIDTH_EXPRESSION = () => _markDefault(s.number(1));\nconst DEFAULT_STROKE_COLOR_EXPRESSION = () => _markDefault(s.rgb(0, 0, 0));\nconst DEFAULT_STROKE_WIDTH_EXPRESSION = () => _markDefault(s.number(0));\nconst DEFAULT_ORDER_EXPRESSION = () => _markDefault(s.noOrder());\nconst DEFAULT_FILTER_EXPRESSION = () => _markDefault(s.constant(1));\nconst DEFAULT_SYMBOL_EXPRESSION = () => _markDefault(new Image(svgs.circle));\nconst DEFAULT_SYMBOLPLACEMENT_EXPRESSION = () => _markDefault(new Placement(s.constant(0), s.constant(1)));\nconst DEFAULT_TRANSFORM_EXPRESSION = () => _markDefault(new Translate(s.constant(0), s.constant(0)));\nconst DEFAULT_RESOLUTION = () => _markDefault(s.number(1));\n/**\n * A `vizSpec` object is used to create a {@link carto.Viz|Viz} and controlling multiple aspects.\n *\n * @typedef {Object} vizSpec\n * @name vizSpec\n * @api\n */\n\n/**\n* A Viz is one of the core elements of CARTO VL and defines how the data will be styled,\n* displayed and processed. A Viz instance can only be bound to one layer.\n*\n*\n* @param {string|vizSpec} definition - The definition of a viz. This parameter could be a `string` or a {@link vizSpec|vizSpec}  object\n*\n* @example <caption> Create a viz with black dots using the string constructor </caption>\n* const viz = new carto.Viz(`\n*   color: rgb(0,0,0)\n* `);\n*\n* @example <caption> Create a viz with black dots using the vizSpec constructor </caption>\n* const viz = new carto.Viz({\n*   color: carto.expressions.rgb(0,0,0)\n* });\n*\n* @constructor Viz\n* @name carto.Viz\n* @property {Color} color - fill color of points and polygons and color of lines, if used with `symbol` the color will override the original image RGB channels\n* @property {Number} width - fill diameter of points, thickness of lines, not applicable to polygons\n* @property {Color} strokeColor - stroke/border color of points and polygons, not applicable to lines\n* @property {Number} strokeWidth - stroke width of points and polygons, not applicable to lines\n* @property {Number} filter - filter features by removing from rendering and interactivity all the features that don't pass the test. In combination with {@link carto.expressions.animation} temporal maps can be created.\n* @property {Image} symbol - show an image instead in the place of points. There is a list of built-in icons you can use by default in the {@link https://carto.com/developers/carto-vl/reference/#icons|Icons section}\n* @property {Placement} symbolPlacement - when using `symbol`, offset to apply to the image\n* @property {Transformation} transform - transformation to apply to the features in pixels. We can assign a {@link carto.expressions.translate|translation}, a {@link carto.expressions.rotate|rotation}, or a chain of those two.\n* @property {Order} order - rendering order of the features, only applicable to points. See {@link carto.expressions.asc}, {@link carto.expressions.desc} and {@link carto.expressions.noOrder}\n* @property {Number} resolution - resolution of the property-aggregation functions, only applicable to points. Default resolution is 1. Custom values must be greater than 0 and lower than 256, and power of 2 values work better (no visual artifacts). A resolution of N means points are aggregated to grid cells NxN pixels. Unlike {@link https://carto.com/developers/torque-js/guides/how-spatial-aggregation-works/|Torque resolution}, the aggregated points are placed in the centroid of the cluster, not in the center of the grid cell.\n* @property {Object} variables - An object describing the variables used.\n* @api\n*\n*/\nexport default class Viz {\n    constructor (definition) {\n        const vizSpec = this._getVizDefinition(definition);\n        this._checkVizSpec(vizSpec);\n\n        Object.keys(vizSpec).forEach(property => {\n            this._defineProperty(property, vizSpec[property]);\n        });\n\n        if (!Object.keys(vizSpec).includes('variables')) {\n            this._defineProperty('variables', {});\n        }\n\n        this.updated = true;\n        this._changeCallback = null;\n\n        this._updateRootExpressionList();\n        this._updateRootExpressions();\n\n        this._resolveAliases();\n        this._validateAliasDAG();\n    }\n\n    /**\n     * Get the geometry type of the visualization.\n     * @readonly\n     * @memberof carto.Viz\n     * @api\n     */\n    get geometryType () {\n        return this._geomType;\n    }\n\n    loadImages () {\n        return Promise.all(this._getRootExpressions().map(expr => expr.loadImages()));\n    }\n\n    /*\n     * There are cases when promise rejections are fine, such as when using\n     * `blendTo` to change the viz synchronously.\n    */\n    _ignoreChangeRejections () {\n        return {};\n    }\n\n    // Define a viz property, setting all the required getters, setters and creating a proxy for the variables object\n    // These setters and the proxy allow us to re-render without requiring further action from the user\n    _defineProperty (propertyName, propertyValue) {\n        if (propertyName !== 'variables' && !SUPPORTED_VIZ_PROPERTIES.includes(propertyName)) {\n            return;\n        }\n        Object.defineProperty(this, propertyName, {\n            get: () => this['_' + propertyName],\n            set: expr => {\n                this['_' + propertyName] = implicitCast(expr);\n                this._changed().catch(this._ignoreChangeRejections);\n            }\n        });\n\n        let property = propertyValue;\n        if (propertyName === 'variables') {\n            let init = false;\n            const handler = {\n                get: (obj, prop) => {\n                    return obj[prop];\n                },\n                set: (obj, prop, value) => {\n                    value = implicitCast(value);\n\n                    if (value instanceof BaseExpression) {\n                        value._variableName = prop;\n                    }\n\n                    obj[prop] = value;\n                    this['__cartovl_variable_' + prop] = value;\n                    if (init) {\n                        this._changed().catch(this._ignoreChangeRejections);\n                    }\n                    return true;\n                }\n            };\n            property = new Proxy({}, handler);\n            Object.keys(propertyValue).map(varName => {\n                property[varName] = propertyValue[varName];\n            });\n            init = true;\n        }\n        this['_' + propertyName] = property;\n    }\n\n    _getRootExpressions () {\n        return this._rootExpressions;\n    }\n\n    _getRootStyleExpressions () {\n        return this._rootStyleExpressions;\n    }\n\n    _updateRootExpressions () {\n        this._getRootExpressions().forEach(expr => {\n            expr.parent = this;\n            expr.notify = this._changed.bind(this);\n        });\n    }\n\n    isAnimated () {\n        return this._getRootStyleExpressions().some(expr => expr.isAnimated());\n    }\n\n    isPlaying () {\n        return this._getRootStyleExpressions().some(expr => expr.isPlaying());\n    }\n\n    onChange (callback) {\n        this._changeCallback = callback;\n    }\n\n    _changed () {\n        this._updateRootExpressionList();\n        this._resolveAliases();\n        this._validateAliasDAG();\n        if (this._changeCallback) {\n            return this._changeCallback(this);\n        }\n        return Promise.resolve(null);\n    }\n\n    _updateRootExpressionList () {\n        const expressions = [...SUPPORTED_VIZ_PROPERTIES].map(expression => this[expression]);\n        const styleExpressions = [...STYLE_VIZ_PROPERTIES].map(expression => this[expression]);\n        const variables = [...Object.values(this.variables)];\n\n        this._rootExpressions = [...expressions, ...variables];\n        this._rootStyleExpressions = styleExpressions;\n    }\n\n    getMinimumNeededSchema () {\n        return this._getRootExpressions()\n            .filter(x => x && x._getMinimumNeededSchema)\n            .map(expr => expr._getMinimumNeededSchema())\n            .reduce(schema.union, schema.IDENTITY);\n    }\n\n    setDefaultsIfRequired (geomType) {\n        this._geomType = geomType;\n        if (this._appliedDefaults) {\n            return;\n        }\n        let defaults = this._getDefaultGeomStyle(geomType);\n        if (defaults) {\n            this._appliedDefaults = true;\n            if (this.color.default) {\n                this.color = defaults.COLOR_EXPRESSION();\n            }\n            if (this.width.default) {\n                this.width = defaults.WIDTH_EXPRESSION();\n            }\n            if (this.strokeColor.default) {\n                this.strokeColor = defaults.STROKE_COLOR_EXPRESSION();\n            }\n            if (this.strokeWidth.default) {\n                this.strokeWidth = defaults.STROKE_WIDTH_EXPRESSION();\n            }\n            this._updateRootExpressions();\n        }\n    }\n\n    _getDefaultGeomStyle (geomType) {\n        if (geomType === GEOMETRY_TYPE.POINT) {\n            return {\n                COLOR_EXPRESSION: () => _markDefault(s.hex('#EE4D5A')),\n                WIDTH_EXPRESSION: () => _markDefault(s.number(7)),\n                STROKE_COLOR_EXPRESSION: () => _markDefault(s.hex('#FFF')),\n                STROKE_WIDTH_EXPRESSION: () => _markDefault(s.number(1))\n            };\n        } else if (geomType === GEOMETRY_TYPE.LINE) {\n            return {\n                COLOR_EXPRESSION: () => _markDefault(s.hex('#4CC8A3')),\n                WIDTH_EXPRESSION: () => _markDefault(s.number(1.5)),\n                STROKE_COLOR_EXPRESSION: () => _markDefault(s.hex('#FFF')), // Not used in lines\n                STROKE_WIDTH_EXPRESSION: () => _markDefault(s.number(1)) // Not used in lines\n            };\n        } else if (geomType === GEOMETRY_TYPE.POLYGON) {\n            return {\n                COLOR_EXPRESSION: () => _markDefault(s.hex('#826DBA')),\n                WIDTH_EXPRESSION: () => _markDefault(s.number(1)), // Not used in polygons\n                STROKE_COLOR_EXPRESSION: () => _markDefault(s.hex('#FFF')),\n                STROKE_WIDTH_EXPRESSION: () => _markDefault(s.number(1))\n            };\n        }\n    }\n\n    _resolveAliases () {\n        this._getRootExpressions().forEach(expr => {\n            expr._resolveAliases(this.variables);\n        });\n    }\n\n    _validateAliasDAG () {\n        const permanentMarkedSet = new Set();\n        const temporarilyMarkedSet = new Set();\n        const visit = node => {\n            if (permanentMarkedSet.has(node)) {\n                // Node is already a processed dependency\n                return;\n            }\n            if (temporarilyMarkedSet.has(node)) {\n                throw new CartoRuntimeError('Viz contains a circular dependency');\n            }\n            temporarilyMarkedSet.add(node);\n            node._getDependencies().forEach(visit);\n            permanentMarkedSet.add(node);\n        };\n        const unmarked = this._getRootExpressions().map(\n            expr => expr._getDependencies()\n        ).reduce(\n            (a, b) => [...a, ...b],\n            []\n        );\n        while (unmarked.length) {\n            visit(unmarked.pop());\n        }\n    }\n\n    _bindMetadata (metadata) {\n        this._colorShader = null;\n        this._widthShader = null;\n        this._strokeColorShader = null;\n        this._strokeWidthShader = null;\n        this._filterShader = null;\n        this._symbolShader = null;\n        this._pointShader = null;\n        this._lineShader = null;\n        this._polygonShader = null;\n        this.metadata = metadata;\n        this._getRootExpressions().forEach(expr => expr._bindMetadata(this.metadata));\n        checkVizPropertyTypes(this);\n    }\n\n    get colorMetaShader () {\n        return this._compileShader('colorShader', shaders.styler.colorShaderGLSL, { color: this.color });\n    }\n    get widthMetaShader () {\n        return this._compileShader('widthShader', shaders.styler.widthShaderGLSL, { width: this.width });\n    }\n    get strokeColorMetaShader () {\n        return this._compileShader('strokeColorShader', shaders.styler.colorShaderGLSL, { color: this.strokeColor });\n    }\n    get strokeWidthMetaShader () {\n        return this._compileShader('strokeWidthShader', shaders.styler.widthShaderGLSL, { width: this.strokeWidth });\n    }\n    get filterMetaShader () {\n        return this._compileShader('filterShader', shaders.styler.filterShaderGLSL, { filter: this.filter });\n    }\n    get symbolMetaShader () {\n        return this._compileShader('symbolShader', shaders.symbolizer.symbolShaderGLSL, {\n            symbol: this.symbol,\n            symbolPlacement: this.symbolPlacement,\n            transform: this.transform\n        });\n    }\n    get pointMetaShader () {\n        return this._compileShader('pointShader', { vertexShader: pointVertexShaderGLSL, fragmentShader: pointFragmentShaderGLSL },\n            { transform: this.transform });\n    }\n    get lineMetaShader () {\n        return this._compileShader('lineShader', { vertexShader: lineVertexShaderGLSL, fragmentShader: lineFragmentShaderGLSL },\n            { transform: this.transform });\n    }\n    get polygonMetaShader () {\n        return this._compileShader('polygonShader', { vertexShader: polygonVertexShaderGLSL, fragmentShader: polygonFragmentShaderGLSL },\n            { transform: this.transform });\n    }\n\n    _compileShader (shaderName, GLSL, expr) {\n        if (!this['_' + shaderName]) {\n            this['_' + shaderName] = compileShader(this.gl, GLSL, expr, this);\n        }\n        return this['_' + shaderName];\n    }\n\n    replaceChild (toReplace, replacer) {\n        if (Object.values(this.variables).includes(toReplace)) {\n            const varName = Object.keys(this.variables).find(varName => this.variables[varName] === toReplace);\n            this.variables[varName] = replacer;\n            replacer.parent = this;\n            replacer.notify = toReplace.notify;\n        } else {\n            const propertyName = SUPPORTED_VIZ_PROPERTIES.find(propertyName => this[propertyName] === toReplace);\n            if (propertyName) {\n                this[propertyName] = replacer;\n                replacer.parent = this;\n                replacer.notify = toReplace.notify;\n            } else {\n                throw new CartoRuntimeError('No child found');\n            }\n        }\n    }\n\n    /**\n     * This function checks the input parameter `definition` returning always an object.\n     * If the `definition` is an object it returns the same object.\n     * If the `definition` is a string it returns the parsed string as an object.\n     * Otherwise it throws an error.\n     *\n     * @param  {string|object} definition\n     * @return {vizSpec}\n     */\n    _getVizDefinition (definition) {\n        if (util.isUndefined(definition)) {\n            return this._setDefaults({});\n        }\n        if (util.isObject(definition)) {\n            return this._setDefaults(definition);\n        }\n        if (util.isString(definition)) {\n            return this._setDefaults(parseVizDefinition(definition));\n        }\n        throw new CartoValidationError(\n            'viz \\'definition\\' should be a vizSpec object or a valid viz string.',\n            CartoValidationErrorTypes.INCORRECT_VALUE\n        );\n    }\n\n    /**\n     * Add default values to a vizSpec object.\n     *\n     * @param {vizSpec} vizSpec\n     * @return {vizSpec}\n     */\n    _setDefaults (vizSpec) {\n        if (util.isUndefined(vizSpec.color)) {\n            vizSpec.color = util.isUndefined(vizSpec.symbol) ? DEFAULT_COLOR_EXPRESSION() : noOverrideColor();\n        }\n        if (util.isUndefined(vizSpec.width)) {\n            vizSpec.width = DEFAULT_WIDTH_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.strokeColor)) {\n            vizSpec.strokeColor = DEFAULT_STROKE_COLOR_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.strokeWidth)) {\n            vizSpec.strokeWidth = DEFAULT_STROKE_WIDTH_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.order)) {\n            vizSpec.order = DEFAULT_ORDER_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.filter)) {\n            vizSpec.filter = DEFAULT_FILTER_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.resolution)) {\n            vizSpec.resolution = DEFAULT_RESOLUTION();\n        }\n        if (util.isUndefined(vizSpec.symbol)) {\n            vizSpec.symbol = DEFAULT_SYMBOL_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.symbolPlacement)) {\n            vizSpec.symbolPlacement = DEFAULT_SYMBOLPLACEMENT_EXPRESSION();\n        }\n        if (util.isUndefined(vizSpec.transform)) {\n            vizSpec.transform = DEFAULT_TRANSFORM_EXPRESSION();\n        }\n        vizSpec.variables = vizSpec.variables || {};\n        return vizSpec;\n    }\n\n    _checkResolution (resolution) {\n        const resolutionValue = resolution instanceof BaseExpression\n            ? resolution.eval()\n            : resolution;\n\n        if (util.isNumber(resolutionValue)) {\n            if (resolution <= MIN_RESOLUTION) {\n                throw new CartoValidationError(\n                    `'resolution' is ${resolution}, must be greater than ${MIN_RESOLUTION}.`,\n                    CartoValidationErrorTypes.INCORRECT_VALUE\n                );\n            }\n\n            if (resolution >= MAX_RESOLUTION) {\n                throw new CartoValidationError(\n                    `'resolution' is ${resolution}, must be lower than ${MAX_RESOLUTION}.`,\n                    CartoValidationErrorTypes.INCORRECT_VALUE\n                );\n            }\n        } else {\n            throw new CartoValidationError(\n                '\\'resolution\\' property must be a number.',\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n    }\n\n    _applyImplitCastToNumericProperties (vizSpec) {\n        vizSpec.filter = implicitCast(vizSpec.filter);\n        vizSpec.resolution = implicitCast(vizSpec.resolution);\n        vizSpec.strokeWidth = implicitCast(vizSpec.strokeWidth);\n        vizSpec.symbol = implicitCast(vizSpec.symbol);\n        vizSpec.symbolPlacement = implicitCast(vizSpec.symbolPlacement);\n        vizSpec.transform = implicitCast(vizSpec.transform);\n        vizSpec.width = implicitCast(vizSpec.width);\n    }\n\n    _checkVizSpec (vizSpec) {\n        this._applyImplitCastToNumericProperties(vizSpec);\n        this._checkResolution(vizSpec.resolution);\n\n        SUPPORTED_VIZ_PROPERTIES.forEach((parameter) => {\n            if (!(vizSpec[parameter] instanceof BaseExpression)) {\n                throw new CartoValidationError(\n                    `'${parameter}' parameter is not a valid viz Expresion.`,\n                    CartoValidationErrorTypes.INCORRECT_TYPE);\n            }\n        });\n\n        for (let key in vizSpec) {\n            if (key !== 'variables' && SUPPORTED_VIZ_PROPERTIES.indexOf(key) === -1) {\n                console.warn(`Property '${key}' is not supported`);\n            }\n        }\n    }\n\n    /**\n     * Stringify the visualization\n     *\n     * @returns {String}\n     * @memberof carto.Viz\n     * @api\n     */\n    toString () {\n        const variables = Object\n            .keys(this.variables)\n            .map(varName => `@${varName}: ${this.variables[varName].toString()}`);\n\n        const properties = SUPPORTED_VIZ_PROPERTIES\n            .map(property => `${property}: ${this[property].toString()}`);\n\n        return [...variables, ...properties].join('\\n');\n    }\n}\n\nfunction checkVizPropertyTypes (viz) {\n    const expectedTypePerProperty = {\n        color: 'color',\n        filter: 'number',\n        order: 'orderer',\n        resolution: 'number',\n        strokeColor: 'color',\n        strokeWidth: 'number',\n        symbol: 'image',\n        symbolPlacement: 'placement',\n        transform: 'transformation',\n        width: 'number'\n    };\n\n    Object.keys(expectedTypePerProperty).forEach((property) => {\n        const currentType = viz[property].type;\n        const expected = expectedTypePerProperty[property];\n        if (currentType !== expected) {\n            throw new CartoValidationError(\n                `Viz property '${property}': must be of type '${expected}' but it was of type '${currentType}'`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n    });\n}\n\n/**\n * Mark default expressions to apply the style defaults for each\n * geometry (point, line, polygon) when available.\n */\nfunction _markDefault (expression) {\n    expression.default = true;\n    return expression;\n}\n","/**\n * Voyager vector basemap\n *\n * @example <caption>Use Voyager vector basemap.</caption>\n * const map = new mapboxgl.Map({\n *   container: 'map',\n *   style: carto.basemaps.voyager\n * })\n *\n * @example <caption>Use Voyager vector basemap. (String)</caption>\n * const map = new mapboxgl.Map({\n *   container: 'map',\n *   style: carto.basemaps.voyager\n * })\n *\n * @memberof carto.basemaps\n * @name voyager\n * @api\n */\nexport const voyager = 'https://basemaps.cartocdn.com/gl/voyager-gl-style/style.json';\n\n/**\n * Dark-Matter vector basemap\n *\n * @example <caption>Use Dark-Matter vector basemap.</caption>\n * const map = new mapboxgl.Map({\n *   container: 'map',\n *   style: carto.basemaps.darkmatter\n * })\n *\n * @example <caption>Use Dark-Matter vector basemap. (String)</caption>\n * const map = new mapboxgl.Map({\n *   container: 'map',\n *   style: carto.basemaps.darkmatter\n * })\n *\n * @memberof carto.basemaps\n * @name darkmatter\n * @api\n */\nexport const darkmatter = 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json';\n\n/**\n * Positron vector basemap\n *\n * @example <caption>Use Positron vector basemap.</caption>\n * const map = new mapboxgl.Map({\n *   container: 'map',\n *   style: carto.basemaps.positron\n * })\n *\n * @example <caption>Use Positron vector basemap. (String)</caption>\n * const map = new mapboxgl.Map({\n *   container: 'map',\n *   style: carto.basemaps.positron\n * })\n *\n * @memberof carto.basemaps\n * @name positron\n * @api\n */\nexport const positron = 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json';\n","import MVTMetadata from '../sources/MVTMetadata';\nimport windshaftCodecFactory from '../codecs/windshaft';\n\n// // Windshaft metadata internal structure of properties\n// properties: {\n//     // There's an entry here for every column of the original dataset/SQL query\n//     simple_value: { type: 'number', min: 10, max: 1000 },\n\n//     // Now, that's all there's to it for other sources,\n//     // but for Windshaft sources things more complicated:\n\n//     // There might be multiple aggregated properties derived from one base column\n//     value: {\n//         type: 'number' // this is the type of the base column and all aggregated properties\n//         aggregation: {\n//             // actual properties received and decoded are _cdb_agg_sum_value and _cdb_avg_sum_value\n//             sum: '_cdb_agg_sum_value',\n//             avg: '_cdb_agg_sum_value'\n//         }\n//     },\n\n//     // Then we can have dimension properties, also derived from a base column\n//     // here time1 is a date column of the dataset/query; but what we receive is\n//     // a _cdb_dim_month_time1 property of numeric type.\n//     // these dimension properties are triggered by clusterMonth/clusterMonthIso etc\n//     time1: {\n//         type: 'date' // this is the type of the base column only,\n//         min: '2017-01-01T00:00:00',  // stats of the base column\n//         max: '2018-12-01T00:00:00',\n//         dimension: {\n//             type: 'number', // type of the actual property received and decoded\n//             grouping: {},// (to be changed to group) grouping parameters\n//             propertyName: \"_cdb_dim_month_time1\",\n//             min: 1,      // actual stats of property _cdb_dim_month_time1\n//             max: 24\n//         }\n//     },\n\n//     // But wait, there's more, we can transfer a date dimension as an iso string property\n//     // but then expose it as two date properties, one for the start of each period and\n//     // one from the end (if not used, any of them may not be present)\n//     // these dimension properties are triggered by clusterMonthStart/clusterMonthEnd etc.\n//     time2: {\n//         type: 'date' // this is the type of the base column only,\n//         min: '2017-01-01T00:00:00',  // stats of the base column\n//         max: '2018-12-01T00:00:00',\n//         dimension: {\n//             type: 'category', // type of the actual (source) property received internally\n//             grouping: {},// (to be changed to group) grouping parameters\n//             propertyName: \"_cdb_dim_month_time1\", // source property\n//             min: '2017-01', // stats of property _cdb_dim_month_time1\n//             max: '2017-12',\n//             range: [\n//                 // here come the actual decoded (internal) properties!!:\n//                 // the types of these properties is 'date'\n//                 '_cdb_dim_month_time1_start',\n//                 '_cdb_dim_month_time1_end'\n//             }\n//         }\n//     }\n// }\n\nexport default class WindshaftMetadata extends MVTMetadata {\n    constructor (...args) {\n        super(...args);\n        this.propertyKeys = [];\n        this.baseNames = {};\n        Object.keys(this.properties).forEach(baseName => {\n            const property = this.properties[baseName];\n            if (property.aggregations) {\n                Object.values(property.aggregations).forEach(propName => {\n                    this._addProperty(baseName, propName);\n                });\n            } else if (property.dimension) {\n                if (property.dimension.range) {\n                    property.dimension.range.forEach(rangePropertyName => {\n                        this._addProperty(baseName, rangePropertyName, false);\n                    });\n                    // add source property too, for stats\n                    this._addProperty(baseName, property.dimension.propertyName);\n                } else {\n                    this._addProperty(baseName, property.dimension.propertyName);\n                }\n            } else {\n                this._addProperty(baseName, baseName);\n            }\n        });\n    }\n\n    _addProperty (baseName, propertyName, addToKeys = true) {\n        this.baseNames[propertyName] = baseName;\n        if (addToKeys) {\n            this.propertyKeys.push(propertyName);\n        }\n    }\n\n    _dimensionInfo (propertyName) {\n        const baseName = this.baseName(propertyName) || propertyName;\n        const column = this.properties[baseName];\n        let dimension = null;\n        if (baseName !== propertyName) {\n            if (baseName !== propertyName && column.dimension) {\n                dimension = column.dimension;\n            }\n        }\n        const baseType = column.type;\n        const sourceType = dimension ? dimensionBaseType(dimension) : baseType;\n        // type of the dataframe properties\n        const dataframeType = dimension ? dimensionType(dimension, propertyName) : sourceType;\n        return { baseName, column, dimension, dataframeType, baseType, sourceType };\n    }\n\n    baseName (propertyName) {\n        return this.baseNames[propertyName];\n    }\n\n    decodedProperties (propertyName) {\n        const { dimension } = this._dimensionInfo(propertyName);\n        if (dimension && dimension.grouping && dimension.range) {\n            return dimension.range;\n        }\n        return super.decodedProperties(propertyName);\n    }\n\n    // Stats usage: (is internal, external or source representation preferable?)\n    // * global aggregations\n    // * coding/decoding\n    stats (propertyName) {\n        const { dimension } = this._dimensionInfo(propertyName);\n        if (dimension && dimension.grouping) {\n            return dimension;\n        }\n        return super.stats(propertyName);\n    }\n\n    setCodecs () {\n        setMetadataCodecs(this);\n    }\n\n    sourcePropertyName (propertyName) {\n        const baseName = this.baseName(propertyName);\n        const dimension = this.properties[baseName].dimension;\n        if (dimension && dimension.range) {\n            return dimension.propertyName;\n        }\n        return propertyName;\n    }\n}\n\nfunction dimensionType (dimension, propertyName) {\n    if (dimension.range) {\n        return 'date';\n    }\n    return dimension.type;\n}\n\nfunction dimensionBaseType (dimension) {\n    return dimension.type;\n}\n\nfunction setMetadataCodecs (metadata) {\n    // assign codecs\n    // a single codec kept per base property\n    // so, all its aggregations share the same encoding.\n    // form a dimension, the kept codec is that of the dimension\n    Object.keys(metadata.properties).forEach(baseName => {\n        const property = metadata.properties[baseName];\n        const baseType = property.type;\n        if (baseType !== 'geometry') {\n            const dimType = property.dimension ? property.dimension.type : null;\n            const dimName = dimType ? property.dimension.propertyName : baseName;\n            const actualDimType = (dimType === 'category' && property.dimension.range) ? 'timerange' : dimType;\n            property.codec = windshaftCodecFactory(metadata, actualDimType || baseType, dimName || baseName);\n        }\n    });\n}\n","import { version } from '../../package';\nimport CartoMapsAPIError, { CartoMapsAPIErrorTypes } from '../errors/carto-maps-api-error';\n\nconst REQUEST_GET_MAX_URL_LENGTH = 2048;\n\nexport default class WindshaftRequestHelper {\n    constructor (conf, mapConfig) {\n        this._conf = conf;\n        this._mapConfig = mapConfig;\n\n        this._auth = this._encodeParameter('api_key', this._conf.apiKey);\n        this._client = this._encodeParameter('client', `vl-${version}`);\n    }\n\n    /**\n     * Make a request to Windshaft for a LayerGroup, dealing internally with errors in the Maps API\n     */\n    async getLayerGroup () {\n        let response;\n        try {\n            response = await fetch(this._makeHttpRequest());\n        } catch (error) {\n            throw new CartoMapsAPIError(`Failed to connect to Maps API with your user('${this._conf.username}')`);\n        }\n\n        const layergroup = await response.json();\n        if (!response.ok) {\n            this._dealWithWindshaftErrors(response, layergroup);\n        }\n\n        return layergroup;\n    }\n\n    _makeHttpRequest () {\n        const parameters = [this._auth, this._client, this._encodeParameter('config', this._mapConfigPayload())];\n        const url = this._generateUrl(this._generateMapsApiUrl(), parameters);\n        if (url.length < REQUEST_GET_MAX_URL_LENGTH) {\n            return this._getRequest(url);\n        }\n\n        return this._postRequest();\n    }\n\n    _dealWithWindshaftErrors (response, layergroup) {\n        if (response.status === 401) {\n            throw new CartoMapsAPIError(\n                `Unauthorized access to Maps API: invalid combination of user('${this._conf.username}') and apiKey('${this._conf.apiKey}')`,\n                CartoMapsAPIErrorTypes.SECURITY\n            );\n        } else if (response.status === 403) {\n            throw new CartoMapsAPIError(\n                `Unauthorized access to dataset: the provided apiKey('${this._conf.apiKey}') doesn't provide access to the requested data`,\n                CartoMapsAPIErrorTypes.SECURITY\n            );\n        }\n        throw new CartoMapsAPIError(`${JSON.stringify(layergroup.errors)}`, CartoMapsAPIErrorTypes.SQL);\n    }\n\n    _mapConfigPayload () {\n        return JSON.stringify(this._mapConfig);\n    }\n\n    _getRequest (url) {\n        return new Request(url, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n    }\n\n    _postRequest () {\n        const parameters = [this._auth, this._client];\n\n        return new Request(this._generateUrl(this._generateMapsApiUrl(), parameters), {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: this._mapConfigPayload()\n        });\n    }\n\n    _encodeParameter (name, value) {\n        return `${name}=${encodeURIComponent(value)}`;\n    }\n\n    _generateUrl (url, parameters = []) {\n        return `${url}?${parameters.join('&')}`;\n    }\n\n    _generateMapsApiUrl (path) {\n        let url = `${this._conf.serverURL}/api/v1/map`;\n        if (path) {\n            url += path;\n        }\n        return url;\n    }\n}\n","/**\n * An RSys defines a local coordinate system that maps the coordinates\n * in the range -1 <= x <= +1; -1 <= y <= +1 to an arbitrary rectangle\n * in an external coordinate system. (e.g. Dataframe coordinates to World coordinates)\n * It is the combination of a translation and anisotropic scaling.\n * @typedef {Object} RSys - Renderer relative coordinate system\n * @property {RPoint} center - Position of the local system in external coordinates\n * @property {number} scale - Y-scale (local Y-distance / external Y-distance)\n*/\n\n/*\n * Random notes\n *\n * We can redefine Dataframe to use a Rsys instead of center, scale\n * and we can use an Rsys for the Renderer's canvas.\n *\n * Some interesting World coordinate systems:\n *\n * WM (Webmercator): represents a part of the world (excluding polar regions)\n * with coordinates in the range +/-WM_R for both X and Y. (positive orientation: E,N)\n *\n * NWMC (Normalized Webmercator Coordinates): represents the Webmercator *square*\n * with coordinates in the range +/-1. Results from dividing Webmercator coordinates\n * by WM_R. (positive orientation: E,N)\n *\n * TC (Tile coordinates): integers in [0, 2^Z) for zoom level Z. Example: the tile 0/0/0 (zoom, x, y) is the root tile.\n * (positive orientation: E,S)\n *\n * An RSys's rectangle (its bounds) is the area covered by the local coordinates in\n * the range +/-1.\n *\n * When an RSys external coordinate system is WM or NWMC, we can compute:\n * * Minimum zoom level for which tiles are no larger than the RSys rectangle:\n *   Math.ceil(Math.log2(1 / r.scale));\n * * Maximum zoom level for which tiles are no smaller than the rectangle:\n *   Math.floor(Math.log2(1 / r.scale));\n * (note that 1 / r.scale is the fraction of the World height that the local rectangle's height represents)\n *\n * We'll use the term World coordinates below for the *external* reference system\n * of an RSys (usually NWMC).\n */\n\n/* eslint no-unused-vars: [\"off\"] */\n\n/**\n * R coordinates to World\n * @param {RSys} r - ref. of the passed coordinates\n * @param {number} x - x coordinate in r\n * @param {number} y - y coordinate in r\n * @return {RPoint} World coordinates\n */\nfunction rToW (r, x, y) {\n    return { x: x * r.scale + r.center.x, y: y * r.scale + r.center.y };\n}\n\n/**\n * World coordinates to local RSys\n * @param {number} x - x W-coordinate\n * @param {number} y - y W-coordinate\n * @param {RSys} r - target ref. system\n * @return {RPoint} R coordinates\n */\nexport function wToR (x, y, r) {\n    return { x: (x - r.center.x) / r.scale, y: (y - r.center.y) / r.scale };\n}\n\n/**\n * RSys of a tile (mapping local tile coordinates in +/-1 to NWMC)\n * @param {number} x - TC x coordinate\n * @param {number} y - TC y coordinate\n * @param {number} z - Tile zoom level\n * @return {RSys}\n */\nfunction tileRsys (x, y, z) {\n    let max = Math.pow(2, z);\n    return { scale: 1 / max, center: { x: 2 * (x + 0.5) / max - 1, y: 1 - 2 * (y + 0.5) / max } };\n}\n\n/**\n * TC tiles that intersect the local rectangle of an RSys\n * (with the largest tile size no larger than the rectangle)\n * @param {RSys} rsys\n * @return {Array} - array of TC tiles {x, y, z}\n */\nexport function rTiles (zoom, bounds, viewportZoomToSourceZoom = Math.ceil) {\n    return wRectangleTiles(viewportZoomToSourceZoom(zoom), bounds);\n}\n\n/**\n * TC tiles of a given zoom level that intersect a W rectangle\n * @param {number} z\n * @param {Array} - rectangle extents [minx, miny, maxx, maxy]\n * @return {Array} - array of TC tiles {x, y, z}\n */\nfunction wRectangleTiles (z, wr) {\n    const [wMinx, wMiny, wMaxx, wMaxy] = wr;\n    const n = (1 << z); // for 0 <= z <= 30 equals Math.pow(2, z)\n\n    const clamp = x => Math.min(Math.max(x, 0), n - 1);\n    // compute tile coordinate ranges\n    const tMinx = clamp(Math.floor(n * (wMinx + 1) * 0.5));\n    const tMaxx = clamp(Math.ceil(n * (wMaxx + 1) * 0.5) - 1);\n    const tMiny = clamp(Math.floor(n * (1 - wMaxy) * 0.5));\n    const tMaxy = clamp(Math.ceil(n * (1 - wMiny) * 0.5) - 1);\n    let tiles = [];\n    for (let x = tMinx; x <= tMaxx; ++x) {\n        for (let y = tMiny; y <= tMaxy; ++y) {\n            tiles.push({ x: x, y: y, z: z });\n        }\n    }\n    return tiles;\n}\n\n/**\n * Get the Rsys of a tile where the Rsys's center is the tile center and the Rsys's scale is the tile extent.\n * @param {*} x\n * @param {*} y\n * @param {*} z\n * @returns {RSys}\n */\nexport function getRsysFromTile (x, y, z) {\n    return {\n        center: {\n            x: ((x + 0.5) / Math.pow(2, z)) * 2.0 - 1,\n            y: (1.0 - (y + 0.5) / Math.pow(2, z)) * 2.0 - 1.0\n        },\n        scale: 1 / Math.pow(2, z)\n    };\n}\n\nexport default { rTiles, getRsysFromTile, wToR };\n","import GreaterThan from '../renderer/viz/expressions/binary/GreaterThan';\nimport GreaterThanOrEqualTo from '../renderer/viz/expressions/binary/GreaterThanOrEqualTo';\nimport LessThan from '../renderer/viz/expressions/binary/LessThan';\nimport LessThanOrEqualTo from '../renderer/viz/expressions/binary/LessThanOrEqualTo';\nimport And from '../renderer/viz/expressions/binary/And';\nimport Or from '../renderer/viz/expressions/binary/Or';\nimport Equals from '../renderer/viz/expressions/binary/Equals';\nimport NotEquals from '../renderer/viz/expressions/binary/NotEquals';\nimport { In, Nin } from '../renderer/viz/expressions/belongs';\nimport Between from '../renderer/viz/expressions/between';\nimport Property from '../renderer/viz/expressions/basic/property';\nimport Blend from '../renderer/viz/expressions/blend';\nimport Transition from '../renderer/viz/expressions/transition';\nimport NumberExpression from '../renderer/viz/expressions/basic/number';\nimport ConstantExpression from '../renderer/viz/expressions/basic/constant';\nimport CategoryExpression from '../renderer/viz/expressions/basic/category';\nimport ClusterAvg from '../renderer/viz/expressions/aggregation/cluster/ClusterAvg';\nimport ClusterMax from '../renderer/viz/expressions/aggregation/cluster/ClusterMax';\nimport ClusterMin from '../renderer/viz/expressions/aggregation/cluster/ClusterMin';\nimport ClusterMode from '../renderer/viz/expressions/aggregation/cluster/ClusterMode';\nimport ClusterSum from '../renderer/viz/expressions/aggregation/cluster/ClusterSum';\n\nclass AggregationFiltering {\n    /**\n     * Generate aggregation filters:\n     * This extracts, from the vizs filters, those compatible to be\n     * executed through the Maps API aggregation API.\n     * The extracted filters are in the format admitted by the Maps API\n     * `filters` parameter.\n     * Filters affecting dimensions (non-aggregated columns) can optionally\n     * be extracted too, but it is more efficient to not do so and apply those\n     * filters before aggregation.\n     */\n    constructor (options) {\n        // exclusive mode: aggregate filters don't include pre-aggregate conditions (dimensions)\n        // in that case pre-aggregate filters should always be applied, even with aggregation\n        // (which can be more efficient)\n        this._onlyAggregateFilters = options.exclusive;\n    }\n\n    // return (partial) filters as an object (JSON) in the format of the Maps API aggregation interface\n    getFilters (vizFilter) {\n        let filters = {};\n        let filterList = this._and(vizFilter).filter(Boolean);\n        for (let p of filterList) {\n            let name = p.property;\n            let existingFilter = filters[name];\n            if (existingFilter) {\n                if (this._compatibleAndFilters(existingFilter, p.filters)) {\n                    // combine inequalities into a range\n                    Object.assign(existingFilter[0], p.filters[0]);\n                } else {\n                    // can't AND-combine filters for the same property\n                    return {};\n                }\n            } else {\n                filters[name] = p.filters;\n            }\n        }\n        return filters;\n    }\n\n    _and (f) {\n        if (f.isA(And)) {\n            return this._and(f.a).concat(this._and(f.b)).filter(Boolean);\n        }\n        return [this._or(f)].filter(Boolean);\n    }\n\n    _or (f) {\n        if (f.isA(Or)) {\n            let a = this._basicCondition(f.a);\n            let b = this._basicCondition(f.b);\n            if (a && b) {\n                if (a.property === b.property) {\n                    a.filters = a.filters.concat(b.filters);\n                    return a;\n                }\n            }\n        }\n        return this._basicCondition(f);\n    }\n\n    _removeBlend (f) {\n        if (f.isA(Blend) && f.originalMix.isA(Transition)) {\n            return f.b;\n        }\n        return f;\n    }\n\n    _basicCondition (f) {\n        f = this._removeBlend(f);\n        return this._between(f) ||\n            this._equals(f) || this._notEquals(f) ||\n            this._lessThan(f) || this._lessThanOrEqualTo(f) ||\n            this._greaterThan(f) || this._greaterThanOrEqualTo(f) ||\n            this._in(f) || this._notIn(f);\n    }\n\n    _value (f) {\n        f = this._removeBlend(f);\n        if (f.isA(NumberExpression) || f.isA(ConstantExpression) || f.isA(CategoryExpression)) {\n            return f.value;\n        }\n    }\n\n    _between (f) {\n        if (f.isA(Between)) {\n            let p = this._aggregation(f.input);\n            let lo = p && this._value(f.lowerLimit);\n            let hi = p && lo && this._value(f.upperLimit);\n            if (hi) {\n                p.filters.push({\n                    greater_than_or_equal_to: lo,\n                    less_than_or_equal_to: hi\n                });\n                return p;\n            }\n        }\n    }\n\n    _in (f) {\n        if (f.isA(In)) {\n            let p = this._aggregation(f.input);\n            let values = f.list.elems.map(c => this._value(c)).filter(v => v !== null);\n            if (p && values.length > 0 && values.length === f.list.elems.length) {\n                p.filters.push({\n                    in: values\n                });\n                return p;\n            }\n        }\n    }\n\n    _notIn (f) {\n        if (f.isA(Nin)) {\n            let p = this._aggregation(f.input);\n            let values = f.list.elems.map(c => this._value(c)).filter(v => v !== null);\n            if (p && values.length > 0 && values.length === f.list.elems.length) {\n                p.filters.push({\n                    not_in: values\n                });\n                return p;\n            }\n        }\n    }\n\n    _equals (f) {\n        return this._cmpOp(f, Equals, 'equal');\n    }\n\n    _notEquals (f) {\n        return this._cmpOp(f, NotEquals, 'not_equal');\n    }\n\n    _lessThan (f) {\n        return this._cmpOp(f, LessThan, 'less_than', 'greater_than');\n    }\n\n    _lessThanOrEqualTo (f) {\n        return this._cmpOp(f, LessThanOrEqualTo, 'less_than_or_equal_to', 'greater_than_or_equal_to');\n    }\n\n    _greaterThan (f) {\n        return this._cmpOp(f, GreaterThan, 'greater_than', 'less_than');\n    }\n\n    _greaterThanOrEqualTo (f) {\n        return this._cmpOp(f, GreaterThanOrEqualTo, 'greater_than_or_equal_to', 'less_than_or_equal_to');\n    }\n\n    _aggregation (f) {\n        f = this._removeBlend(f);\n        if (f.isA(ClusterAvg) || f.isA(ClusterMax) || f.isA(ClusterMin) || f.isA(ClusterMode) || f.isA(ClusterSum)) {\n            let p = this._property(f.property);\n            if (p) {\n                p.property = f.propertyName;\n                return p;\n            }\n        }\n        if (this._onlyAggregateFilters) {\n            // no filters on non-aggregate columns (i.e. dimensions) are generated\n            // such filtering should be applied elsewhere\n            return;\n        }\n        return this._property(f);\n    }\n\n    _property (f) {\n        f = this._removeBlend(f);\n        if (f.isA(Property)) {\n            return {\n                property: f.name,\n                filters: []\n            };\n        }\n    }\n\n    _cmpOp (f, opClass, opParam, inverseOpParam) {\n        inverseOpParam = inverseOpParam || opParam;\n        if (f.isA(opClass)) {\n            let p = this._aggregation(f.a);\n            let v = p && this._value(f.b);\n            let op = opParam;\n            if (!v) {\n                p = this._aggregation(f.b);\n                v = p && this._value(f.a);\n                op = inverseOpParam;\n            }\n            if (v) {\n                let filter = {};\n                filter[op] = v;\n                p.filters.push(filter);\n                return p;\n            }\n        }\n    }\n\n    _compatibleAndFilters (a, b) {\n        // check if a and b can be combined into a range filter\n        if (a.length === 0 || b.length === 0) {\n            return true;\n        }\n        if (a.length === 1 && b.length === 1) {\n            const af = a[0];\n            const bf = b[0];\n            if (Object.keys(af).length === 1 && Object.keys(bf).length === 1) {\n                const ka = Object.keys(af)[0];\n                const kb = Object.keys(bf)[0];\n                const lessOps = ['less_than', 'less_than_or_equal_to'];\n                const greaterOps = ['greater_than', 'greater_than_or_equal_to'];\n                return (lessOps.includes(ka) && greaterOps.includes(kb)) ||\n                    (lessOps.includes(kb) && greaterOps.includes(ka));\n            }\n        }\n        return false;\n    }\n}\n\nclass PreaggregationFiltering {\n    /**\n     * Generate pre-aggregation filters, i.e. filters that can be\n     * applied to the dataset before aggregation.\n     * This extracts, from the vizs filters, those compatible to be\n     * executed before aggregation.\n     * The extracted filters are in an internal tree-like format;\n     * each node has a `type` property and various other parameters\n     * that depend on the type.\n     */\n\n    // return (partial) filters as an object (JSON) representing the SQL syntax tree\n    getFilter (vizFilter) {\n        return this._filter(vizFilter);\n    }\n\n    _filter (f) {\n        return this._and(f) || this._or(f) ||\n            this._in(f) || this._notIn(f) ||\n            this._between(f) ||\n            this._equals(f) || this._notEquals(f) ||\n            this._lessThan(f) || this._lessThanOrEqualTo(f) ||\n            this._greaterThan(f) || this._greaterThanOrEqualTo(f) ||\n            this._blend(f) || null;\n    }\n\n    _and (f) {\n        if (f.isA(And)) {\n            // we can ignore nonsupported (null) subexpressions that are combined with AND\n            // and keep the supported ones as a partial filter\n            const l = [this._filter(f.a), this._filter(f.b)].filter(Boolean).reduce((x, y) => x.concat(y), []);\n            if (l.length) {\n                if (l.length === 1) {\n                    return l[0];\n                }\n                return {\n                    type: 'and',\n                    left: l[0],\n                    right: l[1]\n                };\n            }\n        }\n    }\n\n    _or (f) {\n        if (f.isA(Or)) {\n            // if any subexpression is not supported the OR combination isn't supported either\n            let a = this._filter(f.a);\n            let b = this._filter(f.b);\n            if (a && b) {\n                return {\n                    type: 'or',\n                    left: a,\n                    right: b\n                };\n            }\n        }\n    }\n\n    _lessThan (f) {\n        return this._cmpOp(f, LessThan, 'lessThan');\n    }\n\n    _lessThanOrEqualTo (f) {\n        return this._cmpOp(f, LessThanOrEqualTo, 'lessThanOrEqualTo');\n    }\n\n    _greaterThan (f) {\n        return this._cmpOp(f, GreaterThan, 'greaterThan');\n    }\n\n    _greaterThanOrEqualTo (f) {\n        return this._cmpOp(f, GreaterThanOrEqualTo, 'greaterThanOrEqualTo');\n    }\n\n    _equals (f) {\n        return this._cmpOp(f, Equals, 'equals');\n    }\n\n    _notEquals (f) {\n        return this._cmpOp(f, NotEquals, 'notEquals');\n    }\n\n    _cmpOp (f, opClass, type) {\n        if (f.isA(opClass)) {\n            let a = this._property(f.a) || this._value(f.a);\n            let b = this._property(f.b) || this._value(f.b);\n            if (a && b) {\n                return {\n                    type: type,\n                    left: a,\n                    right: b\n                };\n            }\n        }\n    }\n\n    _blend (f) {\n        if (f.isA(Blend) && f.originalMix.isA(Transition)) {\n            return this._filter(f.b);\n        }\n    }\n\n    _property (f) {\n        if (f.isA(Property)) {\n            return {\n                type: 'property',\n                property: f.name\n            };\n        }\n    }\n\n    _value (f) {\n        if (f.isA(NumberExpression) || f.isA(ConstantExpression) || f.isA(CategoryExpression)) {\n            return {\n                type: 'value',\n                value: f.value\n            };\n        }\n    }\n\n    _in (f) {\n        if (f.isA(In)) {\n            let p = this._property(f.input);\n            let values = f.list.elems.map(cat => this._value(cat));\n            if (p && values.length > 0 && values.length === f.list.elems.length) {\n                return {\n                    type: 'in',\n                    property: p.property,\n                    values: values.map(v => v.value)\n                };\n            }\n        }\n    }\n\n    _notIn (f) {\n        if (f.isA(Nin)) {\n            let p = this._property(f.input);\n            let values = f.list.elems.map(cat => this._value(cat));\n            if (p && values.length > 0 && values.length === f.list.elems.length) {\n                return {\n                    type: 'notIn',\n                    property: p.property,\n                    values: values.map(v => v.value)\n                };\n            }\n        }\n    }\n\n    _between (f) {\n        if (f.isA(Between)) {\n            let p = this._property(f.input);\n            let lo = this._value(f.lowerLimit);\n            let hi = this._value(f.upperLimit);\n            if (p && lo && hi) {\n                return {\n                    type: 'between',\n                    property: p.property,\n                    lower: lo.value,\n                    upper: hi.value\n                };\n            }\n        }\n    }\n}\n\nfunction getSQL (node) {\n    if (node.type) {\n        return `(${SQLGenerators[node.type](node)})`;\n    }\n    return sqlQ(node);\n}\n\nfunction sqlQ (value) {\n    if (isFinite(value)) {\n        return String(value);\n    }\n    return `'${value.replace(/\\'/g, '\\'\\'')}'`;\n}\n\nfunction sqlId (id) {\n    if (!id.match(/^[a-z\\d_]+$/)) {\n        id = `\"${id.replace(/\\\"/g, '\"\"')}\"`;\n    }\n    return id;\n}\n\nfunction sqlSep (sep, ...args) {\n    return args.map(arg => getSQL(arg)).join(sep);\n}\n\nconst SQLGenerators = {\n    'and': f => sqlSep(' AND ', f.left, f.right),\n    'or': f => sqlSep(' OR ', f.left, f.right),\n    'between': f => `${sqlId(f.property)} BETWEEN ${sqlQ(f.lower)} AND ${sqlQ(f.upper)}`,\n    'in': f => `${sqlId(f.property)} IN (${sqlSep(',', ...f.values)})`,\n    'notIn': f => `${sqlId(f.property)} NOT IN (${sqlSep(',', ...f.values)})`,\n    'equals': f => sqlSep(' = ', f.left, f.right),\n    'notEquals': f => sqlSep(' <> ', f.left, f.right),\n    'lessThan': f => sqlSep(' < ', f.left, f.right),\n    'lessThanOrEqualTo': f => sqlSep(' <= ', f.left, f.right),\n    'greaterThan': f => sqlSep(' > ', f.left, f.right),\n    'greaterThanOrEqualTo': f => sqlSep(' >= ', f.left, f.right),\n    'property': f => sqlId(f.property),\n    'value': f => sqlQ(f.value)\n};\n\n/**\n * Returns supported windshaft filters for the viz\n * @param {*} viz\n * @returns {Filtering}\n */\nexport function getFiltering (viz, options = {}) {\n    const aggrFiltering = new AggregationFiltering(options);\n    const preFiltering = new PreaggregationFiltering(options);\n    const filtering = {\n        preaggregation: preFiltering.getFilter(viz.filter),\n        aggregation: aggrFiltering.getFilters(viz.filter)\n    };\n    if (!filtering.preaggregation && !filtering.aggregation) {\n        return null;\n    }\n    return filtering;\n}\n\n/**\n * Convert preaggregation filters (as generated by PreaggregationFiltering)\n * into an equivalent SQL WHERE expression.\n *\n * @param {Filtering} filtering\n */\nexport function getSQLWhere (filtering) {\n    filtering = filtering && filtering.preaggregation;\n    let sql;\n    if (filtering && Object.keys(filtering).length > 0) {\n        sql = getSQL(filtering);\n    }\n    return sql ? 'WHERE ' + sql : '';\n}\n\nexport function getAggregationFilters (filtering) {\n    return filtering && filtering.aggregation;\n}\n","\nimport MVT from '../sources/MVT';\nimport Metadata from './WindshaftMetadata';\nimport { DEFAULT_ID_PROPERTY } from '../renderer/Metadata';\nimport schema from '../renderer/schema';\nimport * as windshaftFiltering from './windshaft-filtering';\nimport WindshaftRequestHelper from './WindshaftRequestHelper';\n\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\nimport CartoMapsAPIError, { CartoMapsAPIErrorTypes } from '../errors/carto-maps-api-error';\nimport { GEOMETRY_TYPE } from '../utils/geometry';\nimport { CLUSTER_FEATURE_COUNT, aggregationTypes } from '../constants/metadata';\n\nconst SAMPLE_ROWS = 1000;\nconst MIN_FILTERING = 2000000;\nconst MAX_CATEGORIES = 32768;\nconst TILE_EXTENT = 2048;\n\nexport default class Windshaft {\n    constructor (source) {\n        this._source = source;\n        this._exclusive = true;\n\n        this._MNS = null;\n        this._promiseMNS = null;\n        this.inProgressInstantiations = {};\n    }\n\n    bindLayer (addDataframe) {\n        this._addDataframe = addDataframe;\n        this._mvtClient.bindLayer(addDataframe);\n    }\n\n    _getInstantiationID (vizInfo, choices) {\n        const { MNS, resolution, filtering } = vizInfo;\n\n        return JSON.stringify({\n            MNS: schema.simplify(MNS),\n            resolution,\n            filtering: choices.backendFilters ? filtering : null,\n            options: choices\n        });\n    }\n\n    /**\n     * Should be called whenever the viz changes, even if metadata is not going to be used.\n     * This not only computes metadata: it also updates the map (instantiates) for the new viz if needed\n     * Returns  a promise to a Metadata\n     * @param {*} viz\n     */\n    async getMetadata (viz) {\n        const vizInfo = this._getServerInfoFrom(viz);\n\n        if (this._needToInstantiateMap(vizInfo)) {\n            const instantiationData = await this._repeatableInstantiate(vizInfo);\n            this._updateStateAfterInstantiating(instantiationData);\n        }\n\n        return this.metadata;\n    }\n\n    /**\n     * Get relevant info from Viz related to windshaft requests\n     */\n    _getServerInfoFrom (viz) {\n        const MNS = this._getMinNeededSchemaFrom(viz);\n        const resolution = viz.resolution.value;\n        const filtering = windshaftFiltering.getFiltering(viz, { exclusive: this._exclusive });\n\n        // TODO: properly document returned output at jsdoc (with typedef?)\n        const vizInfo = { MNS, resolution, filtering }; // TODO this looks like a Type or even a Class\n        return vizInfo;\n    }\n\n    /**\n     * Get the minimum schema from the viz, validated and with DEFAULT_ID_PROPERTY\n    */\n    _getMinNeededSchemaFrom (viz) {\n        const MNS = viz.getMinimumNeededSchema();\n        this._checkAcceptableMNS(MNS);\n        this._forceIncludeCartodbId(MNS);\n\n        return MNS;\n    }\n\n    _forceIncludeCartodbId (MNS) {\n        // Force to include DEFAULT_ID_PROPERTY in the MNS columns.\n        // TODO: revisit this request to Maps API\n        if (!MNS[DEFAULT_ID_PROPERTY]) {\n            MNS[DEFAULT_ID_PROPERTY] = [{ type: aggregationTypes.UNAGGREGATED }];\n        }\n    }\n\n    requiresNewMetadata (viz) {\n        const vizInfo = this._getServerInfoFrom(viz);\n        return this._needToInstantiateMap(vizInfo);\n    }\n\n    _checkAcceptableMNS (MNS) {\n        Object.keys(MNS).forEach(propertyName => {\n            const usages = MNS[propertyName];\n            const aggregatedUsage = usages.some(x => x.type === aggregationTypes.AGGREGATED);\n            const unAggregatedUsage = usages.some(x => x.type === aggregationTypes.UNAGGREGATED);\n            if (aggregatedUsage && unAggregatedUsage) {\n                const aggregationUssages = JSON.stringify(usages.filter(x => x.type !== 'aggregated'));\n                throw new CartoValidationError(\n                    `Incompatible combination of cluster aggregation usages (${aggregationUssages}) with unaggregated usage for property '${propertyName}'`,\n                    CartoValidationErrorTypes.INCORRECT_VALUE\n                );\n            }\n        });\n    }\n\n    /**\n     * After calling getMetadata(), data for a viewport can be obtained with this function.\n     * So long as the viz doesn't change, getData() can be called repeatedly for different\n     * viewports. If viz changes getMetadata() should be called before requesting data\n     * for the new viz.\n     */\n    getData (zoom, viewport) {\n        if (this._mvtClient) {\n            return this._mvtClient.requestData(zoom, viewport);// FIXME extend\n        }\n    }\n\n    /**\n     * Check if the map needs to be reinstantiated\n     * This happens:\n     *  - When the minimun required schema changed.\n     *  - When the resolution changed.\n     *  - When the filter conditions changed and the dataset should be server-filtered.\n     */\n    _needToInstantiateMap (vizInfo) {\n        const { MNS, resolution, filtering } = vizInfo;\n\n        const schemaChanged = schema.notEquals(this._MNS, MNS);\n        const resolutionChanged = this.resolution !== resolution;\n        const filteringChanged = JSON.stringify(this.filtering) !== JSON.stringify(filtering);\n        const shouldBeServerFiltered = this.metadata && (this.metadata.featureCount > MIN_FILTERING);\n\n        return schemaChanged || resolutionChanged || (filteringChanged && shouldBeServerFiltered);\n    }\n\n    _isInstantiated () {\n        return !!this.metadata;\n    }\n\n    _instantiationChoices (metadata) {\n        let choices = {\n            backendFilters: true // default choices\n        };\n\n        const thereAreFeatures = metadata && metadata.featureCount >= 0;\n        if (thereAreFeatures) {\n            const shouldBeServerFiltered = metadata.featureCount > MIN_FILTERING;\n            choices.backendFilters = shouldBeServerFiltered || !metadata.backendFiltersApplied;\n        }\n\n        return choices;\n    }\n\n    async _instantiateUncached (vizInfo, choices = { backendFilters: true }, overrideMetadata = null) {\n        const { MNS, resolution, filtering } = vizInfo;\n\n        const agg = await this._generateAggregation(MNS, resolution);\n        let select = this._buildSelectClause(MNS);\n        let aggSQL = this._buildQuery(select);\n\n        const query = `(${aggSQL}) AS tmp`;\n\n        let backendFilters = choices.backendFilters ? filtering : null;\n        let backendFiltersApplied = false;\n        if (backendFilters && this._requiresAggregation(MNS)) {\n            agg.filters = windshaftFiltering.getAggregationFilters(backendFilters);\n            if (agg.filters) {\n                backendFiltersApplied = true;\n            }\n            if (!this._exclusive) {\n                backendFilters = null;\n            }\n        }\n        if (backendFilters) {\n            const filteredSQL = this._buildQuery(select, backendFilters);\n            backendFiltersApplied = backendFiltersApplied || filteredSQL !== aggSQL;\n            aggSQL = filteredSQL;\n        }\n\n        const conf = this._getConfig();\n        let { urlTemplates, metadata } = await this._getInstantiationPromise(query, conf, agg, aggSQL, select, overrideMetadata, MNS);\n        metadata.backendFiltersApplied = backendFiltersApplied;\n\n        return { MNS, resolution, filtering, metadata, urlTemplates };\n    }\n\n    _updateStateAfterInstantiating ({ MNS, resolution, filtering, metadata, urlTemplates }) {\n        if (this._mvtClient) {\n            this._mvtClient.free();\n        }\n        metadata.extent = TILE_EXTENT;\n        this._mvtClient = new MVT(urlTemplates, metadata);\n        this._mvtClient._workerName = 'windshaft';\n        this._mvtClient.bindLayer(this._addDataframe);\n        this.urlTemplates = urlTemplates;\n        this.metadata = metadata;\n        this._MNS = MNS;\n        this.filtering = filtering;\n        this.resolution = resolution;\n        this._checkLayerMeta(MNS);\n    }\n\n    async _instantiate (vizInfo, choices, metadata) {\n        const id = this._getInstantiationID(vizInfo, choices);\n        if (this.inProgressInstantiations[id]) {\n            return this.inProgressInstantiations[id];\n        }\n\n        const instantiationPromise = this._instantiateUncached(vizInfo, choices, metadata);\n        this.inProgressInstantiations[id] = instantiationPromise;\n        return instantiationPromise;\n    }\n\n    async _repeatableInstantiate (vizInfo) {\n        // TODO: we shouldn't reinstantiate just to not apply backend filters\n        // (we'd need to add a choice comparison function argument to repeatablePromise)\n        let finalMetadata = null;\n        const initialChoices = this._instantiationChoices(this.metadata);\n        const finalChoices = instantiation => {\n            // first instantiation metadata is kept\n            finalMetadata = instantiation.metadata;\n            return this._instantiationChoices(instantiation.metadata);\n        };\n\n        return repeatablePromise(initialChoices, finalChoices, choices => this._instantiate(vizInfo, choices, finalMetadata));\n    }\n\n    _checkLayerMeta (MNS) {\n        if (!this._isAggregated() && this._requiresAggregation(MNS)) {\n            throw new CartoMapsAPIError('Aggregation not supported for this dataset', CartoMapsAPIErrorTypes.NOT_SUPPORTED);\n        }\n    }\n\n    _isAggregated () {\n        return this.metadata && this.metadata.isAggregated;\n    }\n\n    _requiresAggregation (MNS) {\n        return Object.values(MNS).some(propertyUsages =>\n            propertyUsages.some(u => u.type === aggregationTypes.AGGREGATED)\n        );\n    }\n\n    _generateAggregation (MNS, resolution) {\n        let aggregation = {\n            columns: {},\n            dimensions: {},\n            placement: 'centroid',\n            resolution: resolution,\n            threshold: 1\n        };\n\n        Object.keys(MNS)\n            .forEach(propertyName => {\n                if (propertyName !== DEFAULT_ID_PROPERTY) {\n                    const propertyUsages = MNS[propertyName];\n                    propertyUsages.forEach(usage => {\n                        if (usage.type === 'aggregated') {\n                            aggregation.columns[schema.column.aggColumn(propertyName, usage.op)] = {\n                                aggregate_function: usage.op,\n                                aggregated_column: propertyName\n                            };\n                        } else if (usage.type === 'dimension') {\n                            const dimension = usage.dimension;\n                            const { group, format } = dimension;\n                            const parameters = { column: propertyName, group, format };\n                            aggregation.dimensions[dimension.propertyName] = parameters;\n                        } else {\n                            // automatic ungrouped dimension\n                            // TODO:\n                            // we should consider eliminating this and requiring\n                            // all dimensions to be used through clusterXXX functions\n                            aggregation.dimensions[propertyName] = {\n                                column: propertyName\n                            };\n                        }\n                    });\n                }\n            });\n\n        return aggregation;\n    }\n\n    _buildSelectClause (MNS) {\n        const columns = Object.keys(MNS).concat(['the_geom_webmercator', DEFAULT_ID_PROPERTY]);\n        return columns.filter((item, pos) => columns.indexOf(item) === pos); // get unique values\n    }\n\n    _buildQuery (select, filters) {\n        const columns = select.map(column => `\"${column}\"`).join();\n        const condition = filters ? windshaftFiltering.getSQLWhere(filters) : '';\n        return `SELECT ${columns} FROM ${this._source._getFromClause()} ${condition}`;\n    }\n\n    _getConfig () {\n        return {\n            apiKey: this._source._apiKey,\n            username: this._source._username,\n            serverURL: this._source._serverURL\n        };\n    }\n\n    free () {\n        if (this._mvtClient) {\n            this._mvtClient.free();\n        }\n    }\n\n    async _getInstantiationPromise (query, conf, agg, aggSQL, columns, overrideMetadata, MNS) {\n        const mapConfigAgg = this._getMapConfigAgg(agg, aggSQL);\n        if (!overrideMetadata) {\n            this._completeMapConfigWithColumns(mapConfigAgg, columns);\n        }\n\n        const layergroup = await this._getLayerGroupFromWindshaft(conf, mapConfigAgg);\n\n        return {\n            urlTemplates: layergroup.metadata.tilejson.vector.tiles,\n            metadata: overrideMetadata || this._adaptMetadata(layergroup.metadata.layers[0].meta, agg, MNS)\n        };\n    }\n\n    _getMapConfigAgg (agg, aggSQL) {\n        const mapConfigAgg = {\n            buffersize: {\n                mvt: 1\n            },\n            layers: [\n                {\n                    type: 'mapnik',\n                    options: {\n                        sql: aggSQL,\n                        aggregation: agg,\n                        vector_extent: TILE_EXTENT,\n                        vector_simplify_extent: TILE_EXTENT,\n                        dates_as_numbers: true\n                    }\n                }\n            ]\n        };\n        return mapConfigAgg;\n    }\n\n    _completeMapConfigWithColumns (mapConfigAgg, columns) {\n        const excludedColumns = ['the_geom', 'the_geom_webmercator'];\n        const includedColumns = columns.filter(name => !excludedColumns.includes(name));\n        mapConfigAgg.layers[0].options.metadata = {\n            geometryType: true,\n            columnStats: {\n                topCategories: MAX_CATEGORIES,\n                includeNulls: true\n            },\n            dimensions: true,\n            sample: {\n                num_rows: SAMPLE_ROWS,\n                include_columns: includedColumns // TODO: when supported by Maps API: exclude_columns: excludedColumns\n            }\n        };\n    }\n\n    async _getLayerGroupFromWindshaft (conf, mapConfigAgg) {\n        const requestHelper = new WindshaftRequestHelper(conf, mapConfigAgg);\n        return requestHelper.getLayerGroup();\n    }\n\n    _adaptMetadata (meta, agg, MNS) {\n        meta.datesAsNumbers = meta.dates_as_numbers;\n        const { stats, aggregation, datesAsNumbers } = meta;\n        const featureCount = stats.hasOwnProperty('featureCount') ? stats.featureCount : stats.estimatedFeatureCount;\n        const geomType = stats.geometryType && adaptGeometryType(stats.geometryType);\n\n        const properties = stats.columns;\n        Object.keys(agg.columns).forEach(aggName => {\n            const basename = agg.columns[aggName].aggregated_column;\n            const fnName = agg.columns[aggName].aggregate_function;\n\n            if (!properties[basename].aggregations) {\n                properties[basename].aggregations = {};\n            }\n\n            properties[basename].aggregations[fnName] = aggName;\n\n            if (basename !== aggName) {\n                properties[aggName] = JSON.parse(JSON.stringify(properties[basename]));\n            }\n        });\n\n        Object.keys(agg.dimensions).forEach(dimName => {\n            const dimension = agg.dimensions[dimName];\n            if (stats.dimensions && stats.dimensions[dimName].type) {\n                // otherwise, the dimension is a (legacy) ungrouped dimension\n                const dimensionStats = stats.dimensions[dimName];\n                const dimType = adaptColumnType(dimensionStats.type);\n                const { column, ...params } = dimension;\n                if (properties[column].dimension) {\n                    throw new CartoMapsAPIError(`Multiple dimensions based on same column '${column}'.`, CartoMapsAPIErrorTypes.NOT_SUPPORTED);\n                }\n                properties[column].dimension = {\n                    propertyName: dimName,\n                    grouping: Object.keys(params).length === 0 ? undefined : dimensionStats.params,\n                    type: dimType,\n                    // TODO: merge all properties of dimensionStats except params, type\n                    min: dimensionStats.min,\n                    max: dimensionStats.max\n                };\n                const range = MNS[column].some(c => c.range);\n\n                if (range > 0) {\n                    properties[column].dimension.range = ['start', 'end'].map(mode => `${dimName}_${mode}`);\n                }\n            }\n        });\n\n        Object.values(properties).map(property => {\n            property.type = adaptColumnType(property.type);\n        });\n\n        Object.keys(properties).forEach(propertyName => {\n            const property = properties[propertyName];\n            if (property.type === 'category' && property.categories) {\n                property.categories.forEach(category => {\n                    category.name = category.category;\n                    delete category.category;\n                });\n            } else if (datesAsNumbers && datesAsNumbers.includes(propertyName)) {\n                property.type = 'date';\n            }\n        });\n\n        if (geomType === GEOMETRY_TYPE.POINT) {\n            properties[CLUSTER_FEATURE_COUNT] = { type: 'number' };\n        }\n\n        return new Metadata({\n            properties,\n            featureCount,\n            sample: stats.sample,\n            geomType,\n            isAggregated: aggregation.mvt,\n            idProperty: DEFAULT_ID_PROPERTY\n        });\n    }\n}\n\nfunction adaptGeometryType (type) {\n    switch (type) {\n        case 'ST_MultiPolygon':\n        case 'ST_Polygon':\n            return GEOMETRY_TYPE.POLYGON;\n        case 'ST_Point':\n            return GEOMETRY_TYPE.POINT;\n        case 'ST_MultiLineString':\n        case 'ST_LineString':\n            return GEOMETRY_TYPE.LINE;\n        default:\n            throw new CartoMapsAPIError(`Unimplemented geometry type '${type}'.`, CartoMapsAPIErrorTypes.NOT_SUPPORTED);\n    }\n}\n\nfunction adaptColumnType (type) {\n    if (type === 'string') {\n        return 'category';\n    }\n    return type;\n}\n\n// generate a promise under certain assumptions/choices; then if the result changes the assumptions,\n// repeat the generation with the new information\nasync function repeatablePromise (initialAssumptions, assumptionsFromResult, promiseGenerator) {\n    let promise = promiseGenerator(initialAssumptions);\n    let result = await promise;\n    let finalAssumptions = assumptionsFromResult(result);\n    if (JSON.stringify(initialAssumptions) === JSON.stringify(finalAssumptions)) {\n        return promise;\n    } else {\n        return promiseGenerator(finalAssumptions);\n    }\n}\n","// A Dataframe property Codec is used to transform between property value encodings.\n// Three different encodings are handled:\n// * The `source` encoding correspond to the format in which\n//   the property values appear in the data sources (e.g. in MVT)\n// * The `internal` encoding is used in Dataframe properties\n//   apt for GPU consumption.\n// * The `external` encoding is the format in which feature\n//   properties are presented to the user\n//   (e.g. `property.eval(feature)` or `globalMin(property)`)\n// The Codec base class serves both as a base for derived codecs.\n// Codecs are associated to source properties.\n// There are two kind of codecs:\n// * Scalar (simple) encoder: source value is encoded as a single internal value\n// * Range encoder: a source value encodes as a pair [lo, hi] of values.\nexport default class BaseCodec {\n    constructor (metadata, propertyName) {\n        if (metadata && propertyName) {\n            this._baseName = metadata.baseName(propertyName);\n        }\n    }\n\n    isRange () {\n        return false;\n    }\n\n    isIdentity () {\n        return false;\n    }\n\n    // Convert source encoding to internal;\n    // Result is an array [lo, hi] for ranges and a value for scalar codecs\n    // Used to encode sources into dataframe properties.\n    sourceToInternal (metadata, v) {\n        return v;\n    }\n\n    // Convert internal encoding to external;\n    // Input may be one for scalar, or two values (hi, lo) for ranges.\n    // Used to present dataframe features.\n    internalToExternal (metadata, v) {\n        return v;\n    }\n\n    // Convert external encoding back to source values.\n    // Used to generate SQL filters: (apply to constant/global)\n    externalToSource (metadata, v) {\n        return v;\n    }\n\n    // Convert source encoding to external encoding.\n    // Used to present source stats values (global aggregations)\n    // to match the format of constant expressions.\n    sourceToExternal (metadata, v) {\n        return this.internalToExternal(metadata, this.sourceToInternal(metadata, v));\n    }\n\n    // Convert external to internal encoding.\n    // Result is a value for scalar codecs\n    // and [lo, hi] for range codecs.\n    // used to to apply filters in GLSL inlined code;\n    // evaluate binary operations property vs external (constant/global\n    externalToInternal (metadata, v) {\n        return this.sourceToInternal(metadata, this.externalToSource(metadata, v));\n    }\n\n    // Generate GLSL inline expression to map a property value\n    // to the internal encoding of another property.\n    // Used to bind some binary operations between properties.\n    inlineInternalMatch (thisValue, _otherCodec) {\n        return `${thisValue}`;\n    }\n}\n","import BaseCodec from './Base';\n\nexport default class CategoryCodec extends BaseCodec {\n    sourceToInternal (metadata, propertyValue) {\n        return metadata.categorizeString(this._baseName, propertyValue);\n    }\n\n    internalToExternal (metadata, propertyValue) {\n        return metadata.IDToCategory.get(propertyValue);\n    }\n\n    sourceToExternal (metadata, propertyValue) {\n        return propertyValue;\n    }\n\n    externalToSource (metadata, v) {\n        return v;\n    }\n}\n","import BaseCodec from './Base';\nimport * as util from '../utils/util';\n\nexport default class DateCodec extends BaseCodec {\n    constructor (metadata, propertyName) {\n        super(metadata, propertyName);\n\n        const { min } = metadata.stats(propertyName);\n        this._min_date = util.castDate(min);\n        this._min_ms = this._min_date.getTime();\n    }\n\n    sourceToInternal (metadata, propertyValue) {\n        // numbers (epoch in milliseconds) or Dates are accepted\n        return util.castDate(propertyValue).getTime() - this._min_ms;\n    }\n\n    internalToExternal (metadata, propertyValue) {\n        let value = propertyValue;\n        value += this._min_ms;\n        return util.msToDate(value);\n    }\n\n    externalToSource (metadata, v) {\n        return v.getTime();\n    }\n\n    sourceToExternal (metadata, v) {\n        return util.castDate(v);\n    }\n\n    inlineInternalMatch (thisValue, otherCodec) {\n        const offset = otherCodec._min_ms - this._min_ms;\n        return `(${thisValue}-${offset.toFixed(20)})`;\n    }\n}\n","import BaseCodec from './Base';\n\n// The Identity codec class serves\n// as the default, identity encoding, in which all three\n// encodings are exactly the same.\nexport default class IdentityCodec extends BaseCodec {\n    isIdentity () {\n        return true;\n    }\n\n    sourceToInternal (metadata, v) {\n        return v;\n    }\n\n    internalToExternal (metadata, v) {\n        return v;\n    }\n\n    sourceToExternal (metadata, v) {\n        return v;\n    }\n\n    externalToSource (metadata, v) {\n        return v;\n    }\n\n    externalToInternal (metadata, v) {\n        return v;\n    }\n}\n","import IdentityCodec from './Identity';\nimport { FP32_DESIGNATED_NULL_VALUE } from '../renderer/viz/expressions/constants';\n\nexport default class NumberCodec extends IdentityCodec {\n    sourceToInternal (metadata, propertyValue) {\n        if (isNaN(propertyValue) || propertyValue == null) {\n            propertyValue = FP32_DESIGNATED_NULL_VALUE;\n        }\n        return propertyValue;\n    }\n\n    internalToExternal (metadata, value) {\n        if (value === FP32_DESIGNATED_NULL_VALUE) {\n            value = null;\n        }\n        return value;\n    }\n\n    externalToInternal (metadata, value) {\n        if (value === null) {\n            value = FP32_DESIGNATED_NULL_VALUE;\n        }\n        return value;\n    }\n}\n","import NumberCodec from './Number';\nimport CategoryCodec from './Category';\nimport DateCodec from './Date';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../errors/carto-runtime-error';\n\nexport default function codecFactory (metadata, type, propertyName) {\n    switch (type) {\n        case 'number':\n            return new NumberCodec(metadata, propertyName);\n        case 'category':\n            return new CategoryCodec(metadata, propertyName);\n        case 'date':\n            return new DateCodec(metadata, propertyName);\n        default:\n            throw new CartoRuntimeError(\n                `Feature property value of type '${type}' cannot be decoded.`,\n                CartoRuntimeErrorTypes.NOT_SUPPORTED\n            );\n    }\n}\n","import CategoryCodec from '../Category';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../errors/carto-runtime-error';\n\nexport default class MVTCategoryCodec extends CategoryCodec {\n    sourceToInternal (metadata, propertyValue) {\n        const propertyValueType = typeof propertyValue;\n        if (propertyValue !== null && propertyValueType !== 'undefined' && propertyValueType !== 'string') {\n            // In general Codecs are unique per original base property, not per source property,\n            // but for the generic MVT sources we don't support multiple source properties per base property (e.g. aggregations)\n            // so it would suffice to keep the property name in the Codec class.\n            // For more general solutions we'd need to provide the source property name as an argument to this method.\n            throw new CartoRuntimeError(\n                `MVT decoding error. Metadata property '${this._baseName}' is of type 'category' but the MVT tile contained a feature property of type '${propertyValueType}': '${propertyValue}'`,\n                CartoRuntimeErrorTypes.MVT\n            );\n        }\n        return super.sourceToInternal(metadata, propertyValue);\n    }\n}\n","import NumberCodec from '../Number';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../errors/carto-runtime-error';\n\nexport default class MVTNumberCodec extends NumberCodec {\n    sourceToInternal (metadata, propertyValue) {\n        const propertyValueType = typeof propertyValue;\n        if (propertyValue !== null && propertyValueType !== 'undefined' && propertyValueType !== 'number') {\n            throw new CartoRuntimeError(\n                `MVT decoding error. Metadata property '${this._baseName}' is of type 'number' but the MVT tile contained a feature property of type '${propertyValueType}': '${propertyValue}'`,\n                CartoRuntimeErrorTypes.MVT\n            );\n        }\n        return super.sourceToInternal(metadata, propertyValue);\n    }\n}\n","import NumberCodec from './Number';\nimport CategoryCodec from './Category';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../errors/carto-runtime-error';\n\nexport default function MVTCodecFactory (metadata, type, propertyName) {\n    switch (type) {\n        case 'number':\n            return new NumberCodec(metadata, propertyName);\n        case 'category':\n            return new CategoryCodec(metadata, propertyName);\n        default:\n            throw new CartoRuntimeError(\n                `MVT decoding error. Feature property value of type '${type}' cannot be decoded.`,\n                CartoRuntimeErrorTypes.MVT\n            );\n    }\n}\n","import BaseCodec from '../Base';\nimport * as util from '../../utils/util';\n\nexport default class TimeRangeCodec extends BaseCodec {\n    constructor (metadata, propertyName) {\n        super(metadata, propertyName);\n\n        const stats = metadata.stats(propertyName);\n        const { min } = stats;\n        const timeZone = stats.grouping && stats.grouping.timezone;\n        const timeRange = util.timeRange({ timeZone, iso: min });\n\n        this._min = timeRange.startValue / 1000;\n        this._timeZone = timeZone;\n    }\n\n    isRange () {\n        return true;\n    }\n\n    sourceToInternal (metadata, propertyValue) {\n        const timeRange = util.timeRange({ iso: propertyValue });\n        return [timeRange.startValue / 1000, timeRange.endValue / 1000].map(v => (v - this._min));\n    }\n\n    internalToExternal (metadata, [lo, hi]) {\n        return util.timeRange({\n            start: (lo + this._min) * 1000,\n            end: (hi + this._min) * 1000,\n            timeZone: this._timeZone\n        });\n    }\n\n    externalToSource (metadata, v) {\n        return util.castTimeRange(v, this._timeZone)._iso;\n    }\n\n    sourceToExternal (metadata, v) {\n        return util.timeRange({ iso: v, timeZone: this._timeZone });\n    }\n\n    inlineInternalMatch (thisValue, otherCodec) {\n        const offset = otherCodec._min.getTime() - this._min.getTime();\n        return `(${thisValue}-${offset.toFixed(20)})`;\n    }\n}\n","import BaseCodec from '../Base';\nimport * as util from '../../utils/util';\n\nexport default class WindshaftDateCodec extends BaseCodec {\n    constructor (metadata, propertyName) {\n        super(metadata, propertyName);\n\n        const { min } = metadata.stats(propertyName);\n        this._min_ms = min * 1000;\n        this._min_date = util.msToDate(this._min_ms);\n    }\n\n    sourceToInternal (metadata, propertyValue) {\n        return util.msToDate(propertyValue * 1000) - this._min_date;\n    }\n\n    internalToExternal (metadata, propertyValue) {\n        let value = propertyValue;\n        value += this._min_ms;\n        return util.msToDate(value);\n    }\n\n    externalToSource (metadata, v) {\n        return v.getTime() / 1000;\n    }\n\n    sourceToExternal (metadata, v) {\n        return asDate(v);\n    }\n\n    inlineInternalMatch (thisValue, otherCodec) {\n        const offset = otherCodec._min_ms - this._min_ms;\n        return `(${thisValue}-${offset.toFixed(20)})`;\n    }\n}\n\n// convert seconds epoch (source encoding) or Date to Date\nfunction asDate (value) {\n    if (value instanceof Date) {\n        return value;\n    }\n    return util.msToDate(value * 1000);\n}\n","import NumberCodec from '../Number';\nimport CategoryCodec from '../Category';\nimport WindshaftDateCodec from './WindshaftDate';\nimport TimeRangeCodec from './TimeRange';\nimport CartoMapsAPIError, { CartoMapsAPIErrorTypes } from '../../errors/carto-maps-api-error';\n\nexport default function windshaftCodecFactory (metadata, type, propertyName) {\n    switch (type) {\n        case 'number':\n            return new NumberCodec(metadata, propertyName);\n        case 'category':\n            return new CategoryCodec(metadata, propertyName);\n        case 'date':\n            return new WindshaftDateCodec(metadata, propertyName);\n        case 'timerange':\n            return new TimeRangeCodec(metadata, propertyName);\n        default:\n            throw new CartoMapsAPIError(\n                `Windshaft MVT decoding error. Feature property value of type '${type}' cannot be decoded.`,\n                CartoMapsAPIErrorTypes.NOT_SUPPORTED);\n    }\n}\n","export const RESOLUTION_ZOOMLEVEL_ZERO = 512;\n","export const AGG_PREFIX = '_cdb_agg_';\nexport const DIM_PREFIX = '_cdb_dim_';\nexport const CLUSTER_FEATURE_COUNT = '_cdb_feature_count';\nexport const aggregationTypes = {\n    AGGREGATED: 'aggregated',\n    UNAGGREGATED: 'unaggregated',\n    UNKNOWN: 'unknown'\n};\n","export const SUPPORTED_VIZ_PROPERTIES = [\n    'color',\n    'filter',\n    'order',\n    'resolution',\n    'strokeColor',\n    'strokeWidth',\n    'symbol',\n    'symbolPlacement',\n    'transform',\n    'width'\n];\n\nexport const STYLE_VIZ_PROPERTIES = [\n    'color',\n    'filter',\n    'order',\n    'strokeColor',\n    'strokeWidth',\n    'symbol',\n    'symbolPlacement',\n    'transform',\n    'width'\n];\n\nexport const MIN_RESOLUTION = 0;\nexport const MAX_RESOLUTION = 256;\n","/**\n * Represents an error in the carto library.\n *\n * @typedef {Object} CartoError\n * @property {String} message - A short error description\n * @property {String} name - The name of the error \"CartoError\"\n * @property {String} type - The type of the error \"CartoError\"\n * @property {Object} originalError - An object containing the internal/original error\n *\n * @event CartoError\n * @api\n */\n\n/**\n * @namespace CartoErrors\n * @api\n *\n*/\nexport default class CartoError extends Error {\n    /**\n     * Build a cartoError from a generic error.\n     * @constructor\n     *\n     * @return {CartoError} A well formed object representing the error.\n     */\n    constructor (error) {\n        if (!error) {\n            throw Error('Invalid CartoError, a message is mandatory');\n        }\n\n        if (!error.message) {\n            throw Error('Invalid CartoError, a message is mandatory');\n        }\n\n        if (!error.type) {\n            throw Error('Invalid CartoError, a type is mandatory');\n        }\n\n        super(`${error.type} ${error.message}`);\n        this.name = 'CartoError';\n        this.type = error.type;\n        this.originalError = error;\n    }\n}\n","import CartoError from './carto-error';\n\n/**\n * Utility to build a cartoError related to MapsAPI errors.\n *\n * @return {CartoError} A well formed object representing the error.\n */\n\n/**\n * CartoMapsAPIError types:\n * - [Error]\n * - [Not supported]\n * - [Security]\n *\n * @name CartoMapsAPIError\n * @memberof CartoError\n * @api\n*/\n\nexport default class CartoMapsAPIError extends CartoError {\n    constructor (message, type = CartoMapsAPIErrorTypes.DEFAULT) {\n        super({ message, type });\n        this.name = 'CartoMapsAPIError';\n    }\n}\n\nexport const CartoMapsAPIErrorTypes = {\n    DEFAULT: '[Error]',\n    SQL: '[SQL]',\n    NOT_SUPPORTED: '[Not supported]',\n    SECURITY: '[Security]'\n};\n","import CartoError from './carto-error';\n\n/**\n * Utility to build a cartoError related to Parsing errors.\n *\n * @return {CartoError} A well formed object representing the error.\n */\n\n/**\n * CartoParsingError types:\n * - [Error]\n *\n * @name CartoParsingError\n * @memberof CartoError\n * @api\n*/\n\nexport default class CartoParsingError extends CartoError {\n    constructor (message) {\n        const type = '[Error]';\n        super({ message, type });\n        this.name = 'CartoParsingError';\n    }\n}\n","import CartoError from './carto-error';\n\n/**\n * Utility to build a cartoError related to Runtime errors.\n *\n * @return {CartoError} A well formed object representing the error.\n */\n\n/**\n * CartoRuntimeError types:\n * - [Error]\n * - [Not supported]\n * - [WebGL]\n * - [MVT]\n *\n * @name CartoRuntimeError\n * @memberof CartoError\n * @api\n*/\nexport default class CartoRuntimeError extends CartoError {\n    constructor (message, type = CartoRuntimeErrorTypes.DEFAULT) {\n        super({ message, type });\n        this.name = 'CartoRuntimeError';\n    }\n}\n\nexport const CartoRuntimeErrorTypes = {\n    DEFAULT: '[Error]',\n    NOT_SUPPORTED: '[Not supported]',\n    WEB_GL: '[WebGL]',\n    MVT: '[MVT]'\n};\n","import CartoError from './carto-error';\n\n/**\n * Utility to build a cartoError related to validation errors.\n *\n * @return {CartoError} A well formed object representing the error.\n */\n\n/**\n * CartoValidationError types:\n * - [Error]\n * - [Missing required property]\n * - [Property with an incorrect type]\n * - [Incorrect value]\n * - [Too many arguments]\n * - [Not enough arguments]\n * - [Wrong number of arguments]\n *\n * @name CartoValidationError\n * @memberof CartoError\n * @api\n*/\nexport default class CartoValidationError extends CartoError {\n    constructor (message, type = CartoValidationErrorTypes.DEFAULT) {\n        super({ message, type });\n        this.name = 'CartoValidationError';\n    }\n}\n\nexport const CartoValidationErrorTypes = {\n    DEFAULT: '[Error]',\n    MISSING_REQUIRED: '[Missing required property]',\n    INCORRECT_TYPE: '[Property with an incorrect type]',\n    INCORRECT_VALUE: '[Incorrect value]',\n    TOO_MANY_ARGS: '[Too many arguments]',\n    NOT_ENOUGH_ARGS: '[Not enough arguments]',\n    WRONG_NUMBER_ARGS: '[Wrong number of arguments]'\n};\n","/**\n *  @namespace carto\n *  @api\n *\n *  @description\n *  The CARTO VL functionality is exposed through the **carto** namespace including:\n *\n * Current version:\n * - {@link carto.version|carto.version}\n *\n * Setup:\n * - {@link carto.setDefaultAuth|carto.setDefaultAuth}\n * - {@link carto.setDefaultConfig|carto.setDefaultConfig}\n *\n * CARTO Basemaps:\n * - {@link carto.basemaps.voyager|carto.basemaps.voyager}\n * - {@link carto.basemaps.darkmatter|carto.basemaps.darkmatter}\n * - {@link carto.basemaps.positron|carto.basemaps.positron}\n *\n * Source:\n * - {@link carto.source.Dataset|carto.source.Dataset}\n * - {@link carto.source.GeoJSON|carto.source.GeoJSON}\n * - {@link carto.source.MVT|carto.source.MVT}\n * - {@link carto.source.SQL|carto.source.SQL}\n *\n * Layer:\n * - {@link carto.Layer|carto.Layer}\n *\n * Viz:\n * - {@link carto.Viz|carto.Viz}\n *\n * Expressions:\n * - {@link carto.expressions|carto.expressions}\n *\n * Interactivity:\n * - {@link carto.Interactivity|carto.Interactivity}\n */\n\nimport { setDefaultAuth } from './setup/auth-service';\nimport { setDefaultConfig } from './setup/config-service';\nimport Viz from './Viz';\nimport Interactivity from './interactivity/Interactivity';\nimport Layer from './Layer';\nimport * as expressions from './renderer/viz/expressions';\nimport Dataset from './sources/Dataset';\nimport GeoJSON from './sources/GeoJSON';\nimport MVT from './sources/MVT';\nimport SQL from './sources/SQL';\nimport { on, off } from './utils/events';\nimport { isBrowserSupported, unsupportedBrowserReasons } from './renderer/Renderer';\n\n/**\n *  @namespace carto.basemaps\n *  @description Use CARTO basemaps for your map visualization. Here you have more information about our {@link https://carto.com/location-data-services/basemaps/|basemaps}.\n *  @api\n */\n\nimport * as basemaps from './basemaps';\n\n/**\n * The version of CARTO VL in use as specified in `package.json` and the GitHub release.\n *\n * @var {String} version\n *\n * @memberof carto\n * @api\n */\nimport { version } from '../package.json';\n\nconst source = { Dataset, SQL, GeoJSON, MVT };\n\nexport { version, on, off, isBrowserSupported, unsupportedBrowserReasons, setDefaultAuth, setDefaultConfig, source, expressions, Layer, Viz, Interactivity, basemaps };\nexport default { version, on, off, setDefaultAuth, setDefaultConfig, source, expressions, Layer, Viz, Interactivity, basemaps };\n","import mitt from 'mitt';\nimport Layer from '../Layer';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\n\nconst EVENTS = [\n    'featureClick',\n    'featureClickOut',\n    'featureEnter',\n    'featureHover',\n    'featureLeave'\n];\n\nconst MAP_STATE = {\n    IDLE: 'idle',\n    MOVING: 'moving'\n};\n\nexport default class Interactivity {\n    /**\n    *\n    * Interactivity purpose is to allow the reception and management of user-generated events, like clicking, over layer features.\n    *\n    * To create a Interactivity object a {@link carto.Layer} or an array with several {@link carto.Layer} is required.\n    * Events fired from interactivity objects will refer to the features of these layer/s and only these layer/s.\n    * Moreover, when using an array of layers, the order of the features in the events will be determined by the order of these layers in the layerList.\n    *\n    * @param {carto.Layer|carto.Layer[]} layerList - {@link carto.Layer} or array of {@link carto.Layer}, events will be fired based on the features of these layers. The array cannot be empty, and all the layers must be attached to the same map.\n    * @param {Object} [options={}] - Object containing interactivity options\n    * @param {boolean} [options.autoChangePointer=true] - A boolean flag indicating if the cursor should change when the mouse is over a feature.\n    *\n    * @example\n    * const interactivity = new carto.Interactivity(layer);\n    * interactivity.on('click', event => {\n    *   style(event.features);\n    *   show(event.coordinates);\n    * });\n    *\n    * @fires featureClick\n    * @fires featureClickOut\n    * @fires featureHover\n    * @fires featureEnter\n    * @fires featureLeave\n    * @throws CartoError\n    *\n    * @constructor Interactivity\n    * @name carto.Interactivity\n    * @api\n    */\n    constructor (layerList, options = { autoChangePointer: true }) {\n        if (layerList instanceof Layer) {\n            layerList = [layerList]; // Allow one layer as input\n        }\n        preCheckLayerList(layerList);\n        this._init(layerList, options);\n    }\n\n    /**\n     * Register an event handler for the given type.\n     *\n     * @param {String} eventName - Type of event to listen for\n     * @param {function} callback - Function to call in response to given event, function will be called with a {@link carto.FeatureEvent}\n     * @memberof carto.Interactivity\n     * @instance\n     * @api\n     */\n    on (eventName, callback) {\n        checkEvent(eventName);\n        const currentCount = this._numListeners[eventName] || 0;\n        this._numListeners[eventName] = currentCount + 1;\n        return this._emitter.on(eventName, callback);\n    }\n\n    /**\n     * Remove an event handler for the given type.\n     *\n     * @param {String} eventName - Type of event to unregister\n     * @param {function} callback - Handler function to unregister\n     * @memberof carto.Interactivity\n     * @instance\n     * @api\n     */\n    off (eventName, callback) {\n        checkEvent(eventName);\n        const currentCount = this._numListeners[eventName];\n        this._numListeners[eventName] = currentCount - 1;\n        return this._emitter.off(eventName, callback);\n    }\n\n    /**\n    * Interactivity enabled property. When enabled, it can emit events\n    *\n    * @type {boolean}\n    * @memberof carto.Interactivity\n    * @instance\n    * @api\n    */\n    get isEnabled () {\n        return this._enabled && this._mapState !== MAP_STATE.MOVING;\n    }\n\n    /**\n     * Change interactivity state to disabled, so no event will be emitted\n     *\n     * @memberof carto.Interactivity\n     * @instance\n     * @api\n     */\n    disable () {\n        this._enabled = false;\n    }\n\n    /**\n     * Change interactivity state to enabled, so events can be emitted\n     *\n     * @memberof carto.Interactivity\n     * @instance\n     * @api\n     */\n    enable () {\n        this._enabled = true;\n    }\n\n    _init (layerList, options) {\n        this._enabled = true;\n        this._mapState = MAP_STATE.IDLE;\n        this._emitter = mitt();\n        this._layerList = layerList;\n        this._prevHoverFeatures = [];\n        this._prevClickFeatures = [];\n        this._numListeners = {};\n        this._isAutoChangePointerEnabled = options.autoChangePointer;\n\n        const allLayersReadyPromises = layerList.map(layer => layer._context);\n        return Promise.all(allLayersReadyPromises)\n            .then(() => {\n                postCheckLayerList(layerList);\n                this._map = layerList[0].map;\n\n                this._subscribeToLayerEvents(layerList);\n                this._subscribeToMapEvents(this._map);\n\n                if (this._isAutoChangePointerEnabled) {\n                    this._setInteractiveCursor();\n                }\n            });\n    }\n\n    _setInteractiveCursor () {\n        if (!this._map.__carto_interactivities) {\n            this._map.__carto_interactivities = new Set();\n        }\n        this.on('featureHover', event => this._onFeatureHover(event, this._map));\n    }\n\n    _onFeatureHover (event, map) {\n        if (event.features.length) {\n            map.__carto_interactivities.add(this);\n        } else {\n            map.__carto_interactivities.delete(this);\n        }\n        map.getCanvas().style.cursor = (map.__carto_interactivities.size > 0) ? 'pointer' : '';\n    }\n\n    _subscribeToMapEvents (map) {\n        this._onMouseMoveBound = this._onMouseMove.bind(this);\n        map.on('mousemove', this._onMouseMoveBound);\n\n        this._onClickBound = this._onClick.bind(this);\n        map.on('click', this._onClickBound);\n\n        this._disableWhileMovingMap(map);\n    }\n\n    _unsubscribeToMapEvents (map) {\n        map.off('mousemove', this._onMouseMoveBound);\n        map.off('click', this._onClickBound);\n    }\n\n    _disableWhileMovingMap (map) {\n        map.on('movestart', () => {\n            this._setMapState(MAP_STATE.MOVING);\n        });\n\n        map.on('moveend', () => {\n            this._setMapState(MAP_STATE.IDLE);\n        });\n    }\n\n    _setMapState (state) {\n        this._mapState = state;\n    }\n\n    _subscribeToLayerEvents (layers) {\n        layers.forEach(layer => {\n            layer.on('updated', this._onLayerUpdated.bind(this));\n            layer.on('removed', this._onLayerRemoved.bind(this));\n        });\n    }\n\n    _onLayerUpdated () {\n        this._onMouseMove(this._mouseEvent, true);\n    }\n\n    _onLayerRemoved (layer) {\n        this._removeLayerFromInteractivity(layer);\n\n        if (this._isAutoChangePointerEnabled) {\n            this._onFeatureHover({ features: [] }, this._map);\n        }\n\n        if (!this._layerList.length) {\n            this._unsubscribeToMapEvents(this._map);\n        }\n    }\n\n    _removeLayerFromInteractivity (layer) {\n        const layerIndex = this._layerList.indexOf(layer);\n\n        if (layerIndex === -1) {\n            return;\n        }\n\n        this._layerList.splice(layerIndex, 1);\n    }\n\n    _onMouseMove (event, emulated) {\n        // Store mouse event to be used in `onLayerUpdated`\n        this._mouseEvent = event;\n\n        if (!this.isEnabled) {\n            return;\n        }\n\n        if (!event ||\n            (!this._numListeners['featureEnter'] &&\n                !this._numListeners['featureHover'] &&\n                !this._numListeners['featureLeave'])) {\n            return;\n        }\n\n        const featureEvent = this._createFeatureEvent(event);\n\n        const featuresLeft = this._manageFeatureLeaveEvent(featureEvent);\n        const featuresEntered = this._manageFeatureEnterEvent(featureEvent);\n\n        this._prevHoverFeatures = featureEvent.features;\n        this._manageFeatureHoverEvent(featureEvent, { featuresLeft, featuresEntered }, emulated);\n    }\n\n    _manageFeatureLeaveEvent (featureEvent) {\n        const featuresLeft = this._getDiffFeatures(this._prevHoverFeatures, featureEvent.features);\n        this._fireEventIfFeatures('featureLeave', { featureEvent, eventFeatures: featuresLeft });\n        return featuresLeft;\n    }\n\n    _manageFeatureEnterEvent (featureEvent) {\n        const featuresEntered = this._getDiffFeatures(featureEvent.features, this._prevHoverFeatures);\n        this._fireEventIfFeatures('featureEnter', { featureEvent, eventFeatures: featuresEntered });\n        return featuresEntered;\n    }\n\n    _manageFeatureHoverEvent (featureEvent, { featuresLeft, featuresEntered }, emulated) {\n        // If the event comes from a real mouse move, trigger always (because coordinates and position have changed)\n        // If the event comes from an animated event, trigger only when features have changed (because position is the same)\n        if (!emulated || (emulated && (featuresLeft.length || featuresEntered.length))) {\n            // Launch hover event\n            this._fireEvent('featureHover', featureEvent);\n        }\n    }\n\n    _fireEventIfFeatures (eventName, { featureEvent, eventFeatures }) {\n        if (eventFeatures.length > 0) {\n            this._fireEvent(eventName, {\n                coordinates: featureEvent.coordinates,\n                position: featureEvent.position,\n                features: eventFeatures\n            });\n        }\n    }\n\n    _onClick (event) {\n        if (!this.isEnabled) {\n            return;\n        }\n\n        if (!this._numListeners['featureClick'] &&\n            !this._numListeners['featureClickOut']) {\n            return;\n        }\n\n        const featureEvent = this._createFeatureEvent(event);\n        this._manageClickOutEvent(featureEvent);\n\n        this._prevClickFeatures = featureEvent.features;\n\n        // Launch click event\n        this._fireEvent('featureClick', featureEvent);\n    }\n\n    _manageClickOutEvent (featureEvent) {\n        const featuresClickedOut = this._getDiffFeatures(this._prevClickFeatures, featureEvent.features);\n        this._fireEventIfFeatures('featureClickOut', { featureEvent, eventFeatures: featuresClickedOut });\n        return featuresClickedOut;\n    }\n\n    _createFeatureEvent (eventData) {\n        // a potentially very intensive task\n        const features = this._getFeaturesAtPosition(eventData.point);\n        return {\n            coordinates: eventData.lngLat,\n            position: eventData.point,\n            features\n        };\n    }\n\n    _fireEvent (type, featureEvent) {\n        this._emitter.emit(type, featureEvent);\n    }\n\n    _getFeaturesAtPosition (point) {\n        return [].concat(...this._layerList.map(layer => layer.getFeaturesAtPosition(point)));\n    }\n\n    /**\n     * Return the difference between the feature arrays A and B.\n     * The output value is also an array of features.\n     */\n    _getDiffFeatures (featuresA, featuresB) {\n        const IDs = this._getFeatureIDs(featuresB);\n        return featuresA.filter(feature => !IDs.includes(feature.id));\n    }\n\n    _getFeatureIDs (features) {\n        return features.map(feature => feature.id);\n    }\n}\n\nfunction preCheckLayerList (layerList) {\n    if (!Array.isArray(layerList)) {\n        throw new CartoValidationError(\n            'Invalid layer list, parameter must be an array of \"carto.Layer\" objects.',\n            CartoValidationErrorTypes.INCORRECT_TYPE\n        );\n    }\n\n    if (!layerList.length) {\n        throw new CartoValidationError(\n            'Invalid argument, layer list must not be empty.',\n            CartoValidationErrorTypes.INCORRECT_VALUE\n        );\n    }\n\n    if (!layerList.every(layer => layer instanceof Layer)) {\n        throw new CartoValidationError(\n            'Invalid layer, layer must be an instance of \"carto.Layer\".',\n            CartoValidationErrorTypes.INCORRECT_TYPE\n        );\n    }\n}\n\nfunction postCheckLayerList (layerList) {\n    if (!layerList.every(layer => layer.map === layerList[0].map)) {\n        throw new CartoValidationError(\n            'Invalid argument, all layers must belong to the same map.',\n            CartoValidationErrorTypes.INCORRECT_VALUE\n        );\n    }\n}\n\nfunction checkEvent (eventName) {\n    if (!EVENTS.includes(eventName)) {\n        throw new CartoValidationError(\n            `Unrecognized event: '${eventName}'. Available events: ${EVENTS.join(', ')}.`,\n            CartoValidationErrorTypes.INCORRECT_VALUE\n        );\n    }\n}\n","import { blend, property, transition, notEquals } from '../renderer/viz/expressions';\n\nexport function generateResetFunction (propertyName, id, customizedFeatures, viz, idProperty) {\n    return function reset (duration = 500) {\n        if (customizedFeatures[id] && customizedFeatures[id][propertyName]) {\n            customizedFeatures[id][propertyName].replaceChild(\n                customizedFeatures[id][propertyName].mix,\n                // transition(0) is used to ensure that blend._predraw() \"GC\" collects it\n                blend(notEquals(property(idProperty), id), transition(0), transition(duration))\n            );\n            viz[propertyName].notify();\n            customizedFeatures[id][propertyName] = undefined;\n        }\n    };\n}\n\nexport function generateBlenderFunction (propertyName, id, customizedFeatures, viz, trackFeatureViz, idProperty, parseVizExpression) {\n    return function generatedBlendTo (newExpression, duration = 500) {\n        if (typeof newExpression === 'string') {\n            newExpression = parseVizExpression(newExpression);\n        }\n        if (customizedFeatures[id] && customizedFeatures[id][propertyName]) {\n            customizedFeatures[id][propertyName].a.blendTo(newExpression, duration);\n            return;\n        }\n        const blendExpr = blend(\n            newExpression,\n            viz[propertyName],\n            blend(1, notEquals(property(idProperty), id), transition(duration))\n        );\n        trackFeatureViz(id, propertyName, blendExpr, customizedFeatures);\n        viz.replaceChild(\n            viz[propertyName],\n            blendExpr\n        );\n        viz[propertyName].notify();\n    };\n}\n","\nfunction _getGeomPropertiesFromPieces (pieces) {\n    const geomPropertiesFromPieces = pieces.map(piece => {\n        const [x, y] = piece.getRenderedCentroid();\n        const aabb = piece._rawFeature._dataframe._aabb[piece._rawFeature._index];\n        return { centroid: { x, y }, aabb };\n    });\n\n    const geomProperties = geomPropertiesFromPieces.filter(piece => {\n        const { x, y } = piece.centroid;\n        return !(isNaN(x) || isNaN(y));\n    });\n\n    return geomProperties;\n}\n\n/**\n * Get a 'compound Feature'. It is a Feature created from a set of 'feature' pieces\n * @param {Array} featurePieces\n */\nexport function getCompoundFeature (featurePieces) {\n    const exemplar = featurePieces[0];\n    if (featurePieces.length === 1) return exemplar;\n\n    const geomProperties = _getGeomPropertiesFromPieces(featurePieces);\n    Object.defineProperty(exemplar, 'getRenderedCentroid', {\n        get: function () {\n            const getRenderedCentroid = () => {\n                // average of centroids ponderated by aabb size\n                const [weightedXs, weightedYs, totalSize] = geomProperties.reduce((accumulator, currentValue) => {\n                    const { minx, miny, maxx, maxy } = currentValue.aabb;\n                    const size = (maxx - minx) * (maxy - miny);\n                    const pX = currentValue.centroid.x * size;\n                    const pY = currentValue.centroid.y * size;\n                    return [accumulator[0] + pX, accumulator[1] + pY, accumulator[2] + size];\n                }, [0, 0, 0]);\n\n                return [weightedXs / totalSize, weightedYs / totalSize];\n            };\n            return getRenderedCentroid;\n        }\n    });\n\n    return exemplar;\n}\n","import FeatureVizProperty from './featureVizProperty';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\nimport { SUPPORTED_VIZ_PROPERTIES } from '../constants/viz';\n\n/**\n * @namespace Features\n * @description CARTO VL Features are objects that contain information of the visualization.\n * @api\n */\n\n/**\n *\n * FeatureEvent objects are fired by {@link carto.Interactivity|Interactivity} objects.\n *\n * @typedef {Object} FeatureEvent\n * @property {Object} coordinates - LongLat coordinates in { lng, lat } form\n * @property {Object} position - Pixel coordinates in { x, y } form\n * @property {Feature[]} features - Array of {@link Feature}\n * @api\n */\n\n/**\n * featureClick events are fired when the user clicks on features. The list of features behind the cursor is provided.\n *\n * @event featureClick\n * @type {FeatureEvent}\n * @api\n */\n\n/**\n * featureClickOut events are fired when the user clicks outside a feature that was clicked in the last featureClick event.\n * The list of features that were clicked before and that are no longer behind this new click is provided.\n *\n * @event featureClickOut\n * @type {FeatureEvent}\n * @api\n */\n\n/**\n * featureEnter events are fired when the user moves the cursor and the movement implies that a non-previously hovered feature (as reported by featureHover or featureLeave) is now under the cursor.\n * The list of features that are now behind the cursor and that weren't before is provided.\n *\n * @event featureEnter\n * @type {FeatureEvent}\n * @api\n */\n\n/**\n * featureHover events are fired when the user moves the cursor.\n * The list of features behind the cursor is provided.\n *\n * @event featureHover\n * @type {FeatureEvent}\n * @api\n */\n\n/**\n * featureLeave events are fired when the user moves the cursor and the movement implies that a previously hovered feature (as reported by featureHover or featureEnter) is no longer behind the cursor.\n * The list of features that are no longer behind the cursor and that were before is provided.\n *\n * @event featureLeave\n * @type {FeatureEvent}\n * @api\n */\n\n/**\n *\n * Feature objects are provided by {@link FeatureEvent} events.\n *\n * @constructor Feature\n * @typedef {Object} Feature\n * @property {number} id - Unique identification code\n * @property {FeatureVizProperty} color\n * @property {FeatureVizProperty} filter\n * @property {FeatureVizProperty} order\n * @property {FeatureVizProperty} resolution\n * @property {FeatureVizProperty} strokeColor\n * @property {FeatureVizProperty} strokeWidth\n * @property {FeatureVizProperty} symbol\n * @property {FeatureVizProperty} symbolPlacement\n * @property {FeatureVizProperty} transform\n * @property {FeatureVizProperty} width\n * @property {FeatureVizProperty[]} variables - Declared variables in the viz object\n * @property {function} blendTo - Blend custom feature vizs by fading in `duration` milliseconds\n * @property {function} reset - Reset custom feature vizs by fading out `duration` milliseconds, where `duration` is the first parameter to reset\n * @property {function} getRenderedCentroid - Get centroid from the displayed geometry as [longitude, latitude]. When using lines and polygons in a MVT source, it can be different from canonical feature's centroid (it can be the centroid from just some client-side pieces). Useful for labeling.\n * @api\n */\n\nexport default class Feature {\n    constructor (rawFeature, { viz, customizedFeatures, trackFeatureViz, idProperty }, publicFeatureProperties = []) {\n        this.id = rawFeature[idProperty];\n\n        this._rawFeature = rawFeature;\n        this._featureVizParams = { rawFeature, viz, customizedFeatures, trackFeatureViz, idProperty };\n\n        this._defineVizProperties();\n        this._defineVizVariables();\n        this._defineFeatureProperties(publicFeatureProperties);\n    }\n\n    _defineVizProperties () {\n        SUPPORTED_VIZ_PROPERTIES.forEach((property) => {\n            this[property] = this._buildFeatureVizProperty(property);\n        });\n    }\n\n    _buildFeatureVizProperty (name) {\n        const { rawFeature, viz, customizedFeatures, trackFeatureViz, idProperty } = this._featureVizParams;\n        return new FeatureVizProperty(name, rawFeature, viz, customizedFeatures, trackFeatureViz, idProperty);\n    }\n\n    _defineVizVariables () {\n        const variables = {};\n        const vizVariables = this._featureVizParams.viz.variables;\n        Object.keys(vizVariables).forEach(varName => {\n            const name = `__cartovl_variable_${varName}`;\n            variables[varName] = this._buildFeatureVizProperty(name);\n        });\n        this.variables = variables;\n    }\n\n    _defineFeatureProperties (featurePropertyNames) {\n        featurePropertyNames.forEach(prop => {\n            Object.defineProperty(this, prop, {\n                get: function () {\n                    return this._rawFeature[prop];\n                }\n            });\n        });\n    }\n\n    blendTo (newVizProperties, duration = 500) {\n        Object.keys(newVizProperties).forEach((property) => {\n            if (!(SUPPORTED_VIZ_PROPERTIES.includes(property))) {\n                throw new CartoValidationError(\n                    `Property '${property}' is not a valid viz property`,\n                    CartoValidationErrorTypes.INCORRECT_VALUE\n                );\n            }\n            const newValue = newVizProperties[property];\n            this[property].blendTo(newValue, duration);\n        });\n    }\n\n    reset (duration = 500) {\n        SUPPORTED_VIZ_PROPERTIES.forEach((property) => {\n            this[property].reset(duration);\n        });\n\n        for (let key in this.variables) {\n            this.variables[key].reset(duration);\n        }\n    }\n\n    getRenderedCentroid () {\n        return this._rawFeature._dataframe.getRenderedCentroid(this._rawFeature._index);\n    }\n}\n","import { generateBlenderFunction, generateResetFunction } from './blendUtils';\nimport { parseVizExpression } from '../renderer/viz/parser';\n\n/**\n *\n * FeatureVizProperty objects can be accessed through {@link Feature} objects.\n *\n * @typedef {Object} FeatureVizProperty\n * @property {function} blendTo - Change the feature viz by blending to a destination viz expression `expr` in `duration` milliseconds, where `expr` is the first parameter and `duration` the last one\n * @property {function} reset - Reset custom feature viz property by fading out `duration` milliseconds, where `duration` is the first parameter to reset\n * @property {function} value - Getter that evaluates the property and returns the computed value\n * @api\n */\nexport default class FeatureVizProperty {\n    constructor (propertyName, feature, viz, customizedFeatures, trackFeatureViz, idProperty) {\n        this._propertyName = propertyName;\n        this._properties = feature;\n        this._viz = viz;\n\n        this.blendTo = generateBlenderFunction(propertyName, feature[idProperty], customizedFeatures, viz, trackFeatureViz, idProperty, parseVizExpression);\n        this.reset = generateResetFunction(propertyName, feature[idProperty], customizedFeatures, viz, idProperty);\n    }\n\n    get value () {\n        return this._viz[this._propertyName].eval(this._properties);\n    }\n\n    eval (...properties) {\n        const props = [];\n        properties.forEach((property) => {\n            const prop = {};\n            prop[property] = this._properties[property];\n            props.push(prop);\n        });\n\n        return this._viz[this._propertyName].eval(props);\n    }\n}\n","import { generateBlenderFunction, generateResetFunction } from './blendUtils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\nimport { SUPPORTED_VIZ_PROPERTIES } from '../constants/viz';\n\n/**\n * Generate a lightweight Feature-like class\n * Its main purpouse is to define a light class to improve performance when creating a\n * high number of features (see `viewportFeatures`)\n *\n * @param {*} propertyNames\n * @param {*} renderLayer\n * @returns FeatureLike class\n */\nexport function genLightweightFeatureClass (propertyNames, renderLayer) {\n    const cls = class LightweightFeature {\n        constructor (rawFeature) {\n            this._rawFeature = rawFeature;\n            this._featureProperties = null;\n        }\n    };\n\n    _defineIdProperty(cls.prototype, renderLayer);\n    _defineVizProperties(cls.prototype, renderLayer);\n    _defineVizVariables(cls.prototype, renderLayer);\n    _defineFeatureProperties(cls.prototype, propertyNames);\n    _defineRootBlendToMethod(cls.prototype);\n    _defineRootResetMethod(cls.prototype);\n    _defineGetRenderedCentroidMethod(cls.prototype);\n\n    return cls;\n}\n\nfunction _defineIdProperty (targetObject, renderLayer) {\n    Object.defineProperty(targetObject, 'id', {\n        get: function () {\n            const idProperty = renderLayer.viz.metadata.idProperty;\n            return this._rawFeature[idProperty];\n        },\n        configurable: true\n    });\n}\n\nfunction _defineVizProperties (targetObject, renderLayer) {\n    SUPPORTED_VIZ_PROPERTIES.forEach(property => {\n        _createLightweightFeatureVizProperty(targetObject, renderLayer, property);\n    });\n}\n\nfunction _createLightweightFeatureVizProperty (targetObject, renderLayer, prop, propName = prop) {\n    const { customizedFeatures, viz, trackFeatureViz, parseVizExpression } = renderLayer;\n    const idProperty = viz.metadata.idProperty;\n    const blender = (featureId) => {\n        return generateBlenderFunction(prop, featureId, customizedFeatures, viz, trackFeatureViz, idProperty, parseVizExpression);\n    };\n    const reset = (featureId) => {\n        return generateResetFunction(prop, featureId, customizedFeatures, viz, idProperty);\n    };\n\n    Object.defineProperty(targetObject, propName, {\n        get: function () {\n            return {\n                blendTo: (...args) => {\n                    return blender(this.id)(...args);\n                },\n                reset: (...args) => {\n                    return reset(this.id)(...args);\n                },\n                value: viz[prop].eval(this._rawFeature)\n            };\n        }\n    });\n}\n\nfunction _defineVizVariables (targetObject, renderLayer) {\n    Object.defineProperty(targetObject, 'variables', {\n        get: function () {\n            const variables = {};\n\n            // To allow the use of this.id in `_createLightweightFeatureVizProperty`\n            Object.defineProperty(variables, 'id', {\n                get: function () { return this.id; }\n            });\n\n            // viz variables\n            const vizVariables = renderLayer.viz.variables;\n            Object.keys(vizVariables).forEach(varName => {\n                const name = `__cartovl_variable_${varName}`;\n                _createLightweightFeatureVizProperty(variables, renderLayer, name, varName);\n            });\n            return variables;\n        }\n    });\n}\n\nfunction _defineFeatureProperties (targetObject, propertyNames) {\n    Object.defineProperty(targetObject, 'properties', {\n        get: function () {\n            if (this._featureProperties === null) {\n                this._featureProperties = {};\n\n                propertyNames.forEach(({ property, variable }) => {\n                    const propertyName = variable || property;\n                    this._featureProperties[propertyName] = this._rawFeature[property];\n                });\n            }\n            return this._featureProperties;\n        }\n    });\n}\n\nfunction _defineRootBlendToMethod (targetObject) {\n    Object.defineProperty(targetObject, 'blendTo', {\n        get: function () {\n            const blendTo = (newVizProperties, duration = 500) => {\n                Object.keys(newVizProperties).forEach((property) => {\n                    if (!(SUPPORTED_VIZ_PROPERTIES.includes(property))) {\n                        throw new CartoValidationError(\n                            `Property '${property}' is not a valid viz property`,\n                            CartoValidationErrorTypes.INCORRECT_VALUE\n                        );\n                    }\n                    const newValue = newVizProperties[property];\n                    this[property].blendTo(newValue, duration);\n                });\n            };\n            return blendTo;\n        }\n    });\n}\n\nfunction _defineRootResetMethod (targetObject) {\n    Object.defineProperty(targetObject, 'reset', {\n        get: function () {\n            const reset = (duration = 500) => {\n                SUPPORTED_VIZ_PROPERTIES.forEach((property) => {\n                    this[property].reset(duration);\n                });\n                for (let key in this.variables) {\n                    this.variables[key].reset(duration);\n                }\n            };\n            return reset;\n        }\n    });\n}\n\nfunction _defineGetRenderedCentroidMethod (targetObject) {\n    Object.defineProperty(targetObject, 'getRenderedCentroid', {\n        get: function () {\n            const getRenderedCentroid = () => {\n                return this._rawFeature._dataframe.getRenderedCentroid(this._rawFeature._index);\n            };\n            return getRenderedCentroid;\n        },\n        configurable: true\n    });\n}\n","import CartoRuntimeError from '../errors/carto-runtime-error';\nimport IdentityCodec from '../codecs/Identity';\nimport { FP32_DESIGNATED_NULL_VALUE } from './viz/expressions/constants';\n\nconst DEFAULT_MVT_EXTENT = 4096;\nexport const DEFAULT_ID_PROPERTY = 'cartodb_id';\n\n// The IDENTITY metadata contains zero properties\nexport const IDENTITY = {\n    properties: {}\n};\n\nexport default class Metadata {\n    constructor ({ properties, featureCount, sample, geomType, isAggregated, idProperty, extent } = { properties: {} }) {\n        this.properties = properties;\n        this.featureCount = featureCount;\n        this.sample = sample;\n        this.geomType = geomType;\n        this.isAggregated = isAggregated;\n        this.idProperty = idProperty || DEFAULT_ID_PROPERTY;\n        if (!this.properties.hasOwnProperty(this.idProperty)) {\n            this.properties[this.idProperty] = { type: 'number' };\n        }\n\n        this.categoryToID = new Map();\n        this.IDToCategory = new Map();\n        this.numCategories = 0;\n        this.extent = extent || DEFAULT_MVT_EXTENT;\n\n        Object.values(properties).map(property => {\n            property.categories = property.categories || [];\n            property.categories.map(category => this.categorizeString(property, category.name, true));\n        });\n\n        this.propertyKeys = Object.keys(properties);\n    }\n\n    setCodecs () {\n        throw new CartoRuntimeError('You must call \"setCodecs\" once you have determined the proper subclass');\n    }\n\n    categorizeString (propertyName, category, init = false) {\n        if (category === undefined) {\n            category = null;\n        }\n        if (this.categoryToID.has(category)) {\n            return this.categoryToID.get(category);\n        }\n        if (!init && category !== null) {\n            this.properties[propertyName].categories.push({\n                name: category,\n                frequency: Number.NaN\n            });\n        }\n        const categoryId = category === null ? FP32_DESIGNATED_NULL_VALUE : this.numCategories;\n        this.categoryToID.set(category, categoryId);\n        this.IDToCategory.set(categoryId, category);\n        this.numCategories++;\n        return categoryId;\n    }\n\n    // dataframe properties into which a single source property is decoded\n    // TODO: rename as encodedProperties or dataframeProperties\n    decodedProperties (propertyName) {\n        return [propertyName];\n    }\n\n    // property of the data origin (dataset, query) from which\n    // a (source or dataframe) property is derived\n    baseName (propertyName) {\n        return propertyName;\n    }\n\n    // property transferred from the source from which\n    // a (source or dataframe) property it so be computed\n    // TODO: move to windshaft metadata\n    sourcePropertyName (propertyName) {\n        return propertyName;\n    }\n\n    stats (propertyName) {\n        return this.properties[propertyName];\n    }\n\n    codec (propertyName) {\n        const name = this.baseName(propertyName);\n\n        return this.properties[name] && this.properties[name].codec\n            ? this.properties[name].codec\n            : new IdentityCodec();\n    }\n}\n","import Feature from '../interactivity/feature';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\nimport { GEOMETRY_TYPE } from '../utils/geometry';\nimport { getCompoundFeature } from '../interactivity/commonFeature';\n\nexport default class RenderLayer {\n    constructor () {\n        this.dataframes = [];\n        this.renderer = null;\n        this.viz = null;\n        this.type = null;\n        this.customizedFeatures = {};\n        this.idProperty = null;\n    }\n\n    // Performance-intensive. The required allocation and copy of resources will happen synchronously.\n    // To achieve good performance, avoid multiple calls within the same event, particularly with large dataframes.\n    addDataframe (dataframe) {\n        if (this.type) {\n            this._checkDataframeType(dataframe);\n        }\n        this.type = dataframe.type;\n        if (this.renderer) {\n            dataframe.bindRenderer(this.renderer);\n        }\n        this.dataframes.push(dataframe);\n        this.idProperty = dataframe.metadata.idProperty;\n    }\n\n    setRenderer (renderer) {\n        this.renderer = renderer;\n        this.dataframes.forEach(d => d.bindRenderer(renderer));\n    }\n\n    setViz (viz) {\n        this.viz = viz;\n    }\n\n    getActiveDataframes () {\n        this.dataframes = this.dataframes.filter(df => !df.freed);\n        let active = this.dataframes.filter(df => df.active && df.numVertex);\n        if (active.length && active[0].orderID !== undefined) {\n            active = active.sort((a, b) => a.orderID - b.orderID);\n        }\n        return active;\n    }\n\n    hasDataframes () {\n        return this.getActiveDataframes().length > 0;\n    }\n\n    getNumFeatures () {\n        return this.getActiveDataframes().map(d => d.numFeatures).reduce((x, y) => x + y, 0);\n    }\n\n    _checkDataframeType (dataframe) {\n        if (this.type !== dataframe.type) {\n            throw new CartoValidationError(\n                'Layer dataframes must always be of the same type',\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n    }\n\n    getFeaturesAtPosition (pos) {\n        if (!this.viz) {\n            return [];\n        }\n\n        const noPossiblePartialFeatures = (this.viz.geometryType === GEOMETRY_TYPE.POINT);\n        if (noPossiblePartialFeatures) {\n            return this._getPointFeaturesAtPosition(pos);\n        } else {\n            return this._getPartialFeaturesAtPosition(pos);\n        }\n    }\n\n    _getPointFeaturesAtPosition (pos) {\n        const rawFeatures = this._getRawFeaturesAtPosition(pos);\n        return rawFeatures.map((raw) => { return this._buildFeatureFromRaw(raw); });\n    }\n\n    _buildFeatureFromRaw (rawFeature) {\n        const { viz, customizedFeatures, trackFeatureViz, idProperty } = this;\n        const featureVizParams = { viz, customizedFeatures, trackFeatureViz, idProperty };\n        return new Feature(rawFeature, featureVizParams);\n    }\n\n    _getRawFeaturesAtPosition (pos) {\n        const rawFeatures = [].concat(...this.getActiveDataframes().map(df =>\n            df.getFeaturesAtPosition(pos, this.viz)\n        ));\n        return rawFeatures;\n    }\n\n    _getPartialFeaturesAtPosition (pos) {\n        const rawFeatures = this._getRawFeaturesAtPosition(pos);\n        if (rawFeatures.length === 0) return [];\n\n        const rawPartialFeatures = this._getPartialFeaturesFromSingle(rawFeatures);\n\n        const compoundFeatures = this._getCompoundFeaturesFrom(rawPartialFeatures);\n        return compoundFeatures;\n    }\n\n    _getCompoundFeaturesFrom (rawPartialFeatures) {\n        const features = [];\n        for (let featureId in rawPartialFeatures) {\n            const viewporFeaturePieces = rawPartialFeatures[featureId];\n            const featurePieces = viewporFeaturePieces.map((raw) => { return this._buildFeatureFromRaw(raw); });\n            features.push(getCompoundFeature(featurePieces));\n        }\n        return features;\n    }\n\n    /**\n     * Get all the pieces from rawFeatures.\n     * Returns an Object, where each key includes an array with (potentially) several feature pieces\n     */\n    _getPartialFeaturesFromSingle (rawFeatures) {\n        const featuresIds = new Set(rawFeatures.map(raw => raw[this.idProperty]));\n        return this.getAllPiecesPerFeature(featuresIds);\n    }\n\n    /**\n     * Gather all feature pieces in the dataframes\n     */\n    getAllPiecesPerFeature (featureIds) {\n        const piecesPerFeature = {};\n        featureIds.forEach((featureId) => { piecesPerFeature[featureId] = []; });\n\n        const dataframes = this.getActiveDataframes();\n        dataframes.forEach(dataframe => {\n            this._addPartialFeaturesIfExistIn(dataframe, featureIds, piecesPerFeature);\n        });\n\n        return piecesPerFeature;\n    }\n\n    /**\n     * Add all the feature pieces, with selected featureIds, if present in the dataframe.\n     */\n    _addPartialFeaturesIfExistIn (dataframe, featureIds, result) {\n        for (let i = 0; i < dataframe.numFeatures; i++) {\n            const feature = dataframe.getFeature(i);\n            const currentFeatureId = feature[this.idProperty];\n\n            if (featureIds.has(currentFeatureId)) {\n                const pieces = result[currentFeatureId];\n                pieces.push(feature);\n            }\n        }\n    }\n\n    trackFeatureViz (featureID, vizProperty, newViz, customizedFeatures) {\n        customizedFeatures[featureID] = customizedFeatures[featureID] || {};\n        customizedFeatures[featureID][vizProperty] = newViz;\n    }\n\n    freeDataframes () {\n        this.dataframes.map(df => df.free());\n        this.dataframes = [];\n        this.type = null;\n    }\n}\n","import shaders from './shaders';\nimport { Asc, Desc } from './viz/expressions';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../errors/carto-runtime-error';\nimport { mat4 } from 'gl-matrix';\nimport { RESOLUTION_ZOOMLEVEL_ZERO } from '../constants/layer';\nimport { parseVizExpression } from './viz/parser';\nimport { runViewportAggregations } from './viz/expressions/aggregation/viewport/ViewportAggCalculator';\nimport { GEOMETRY_TYPE } from '../utils/geometry';\n\nconst INITIAL_TIMESTAMP = Date.now();\nlet timestamp = INITIAL_TIMESTAMP;\nrequestAnimationFrame(refreshClock);\nfunction refreshClock () {\n    timestamp = (Date.now() - INITIAL_TIMESTAMP) / 1000.0;\n    requestAnimationFrame(refreshClock);\n}\n\n/**\n * The renderer use fuzzy logic where < 0.5 means false and >= 0.5 means true\n */\nexport const FILTERING_THRESHOLD = 0.5;\n\n/**\n * @typedef {Object} RPoint - Point in renderer coordinates space\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @description The Render To Texture Width limits the maximum number of features per dataframe: *maxFeatureCount = RTT_WIDTH^2*\n *\n * Large RTT_WIDTH values are unsupported by hardware. Limits vary on each machine.\n * Support starts to drop from 2048, with a drastic reduction in support for more than 4096 pixels.\n *\n * Large values imply a small overhead too.\n */\nexport const RTT_WIDTH = 1024;\n\nexport const MIN_VERTEX_TEXTURE_IMAGE_UNITS_NEEDED = 8;\n\n/**\n * @description Renderer constructor. Use it to create a new renderer bound to the provided canvas.\n * Initialization will be done synchronously.\n * The function will fail in case that a WebGL context cannot be created this can happen because of the following reasons:\n *   * The provided canvas element is invalid\n *   * The browser or the machine doesn't support WebGL or the required WebGL extension and minimum parameter values\n * @jsapi\n * @memberOf renderer\n * @constructor\n * @param {HTMLElement} canvas - the WebGL context will be created on this element\n */\n\nexport default class Renderer {\n    constructor (canvas) {\n        if (canvas) {\n            this.gl = getValidWebGLContextOrThrow(canvas);\n            this._initGL(this.gl);\n        }\n        this._center = { x: 0, y: 0 };\n        this._zoom = 1;\n        this.RTT_WIDTH = RTT_WIDTH;\n        this.dataframes = [];\n    }\n\n    /**\n     * Initialize renderer\n     * @param {WebGLRenderingContext} gl - WebGL context\n     */\n    initialize (gl) {\n        gl = getValidWebGLContextOrThrow(null, gl);\n        this._initGL(gl);\n    }\n\n    _initGL (gl) {\n        this.gl = gl;\n        this._initShaders();\n\n        this.auxFB = gl.createFramebuffer();\n\n        // Create a VBO that covers the entire screen\n        // Use a \"big\" triangle instead of a square for performance and simplicity\n        this.bigTriangleVBO = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.bigTriangleVBO);\n        const vertices = new Float32Array([\n            10.0, -10.0,\n            0.0, 10.0,\n            -10.0, -10.0\n        ]);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        // Create a 1x1 RGBA texture set to [0,0,0,0]\n        // Needed because sometimes we don't really use some textures within the shader, but they are declared anyway.\n        this.zeroTex = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, this.zeroTex);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,\n            1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n            new Uint8Array(4));\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        this._AATex = gl.createTexture(); // Antialiasing\n        this._AAFB = gl.createFramebuffer();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, this.zeroTex);\n    }\n\n    _getAspect () {\n        if (this.gl) {\n            return this.gl.canvas.width / this.gl.canvas.height;\n        }\n        return 1;\n    }\n\n    renderLayer (renderLayer, drawMetadata) {\n        this.drawMetadata = drawMetadata;\n        const dataframes = renderLayer.getActiveDataframes();\n        const viz = renderLayer.viz;\n        if (!viz) {\n            return;\n        }\n        const gl = this.gl;\n\n        this._updateDataframeMatrices(dataframes);\n\n        renderLayer.parseVizExpression = parseVizExpression; // Important! to avoid a circular dependency problem (eg. viewportFeatures)\n        runViewportAggregations(renderLayer);\n\n        if (!dataframes.length) {\n            return;\n        }\n        viz._getRootExpressions().map(expr => expr._dataReady());\n\n        gl.enable(gl.CULL_FACE); // this enables an optimization but it forces a particular vertices orientation\n        gl.disable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.STENCIL_TEST);\n        gl.depthMask(false);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.auxFB);\n\n        // To execute once per daframe and style property\n        // (geometries, properties and ids have been already loaded to GPU)\n        const styleDataframe = (dataframe, dataframeTexture, metashader, vizExpr) => {\n            const shader = metashader.shader;\n            const textureId = metashader.textureIds;\n\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, dataframeTexture, 0);\n            gl.viewport(0, 0, RTT_WIDTH, dataframe.getSize().height);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.useProgram(shader.program);\n            // Enforce that property texture TextureUnit don't clash with auxiliar ones\n            drawMetadata.freeTexUnit = Object.keys(textureId).length;\n            vizExpr._setTimestamp(timestamp);\n            vizExpr._preDraw(shader.program, drawMetadata, gl);\n\n            Object.keys(textureId).forEach((name, i) => {\n                gl.activeTexture(gl.TEXTURE0 + i);\n                gl.bindTexture(gl.TEXTURE_2D, dataframe.getPropertyTexture(name));\n                gl.uniform1i(textureId[name], i);\n            });\n\n            gl.enableVertexAttribArray(shader.vertexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bigTriangleVBO);\n            gl.vertexAttribPointer(shader.vertexAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.drawArrays(gl.TRIANGLES, 0, 3);\n            gl.disableVertexAttribArray(shader.vertexAttribute);\n        };\n\n        // Draw dataframe style textures\n        dataframes.map(dataframe => styleDataframe(dataframe, dataframe.texColor, viz.colorMetaShader, viz.color));\n        if (dataframes[0].type !== GEOMETRY_TYPE.POLYGON) {\n            dataframes.map(dataframe => styleDataframe(dataframe, dataframe.texWidth, viz.widthMetaShader, viz.width));\n        }\n        if (dataframes[0].type !== GEOMETRY_TYPE.LINE) {\n            dataframes.map(dataframe => styleDataframe(dataframe, dataframe.texStrokeColor, viz.strokeColorMetaShader, viz.strokeColor));\n            dataframes.map(dataframe => styleDataframe(dataframe, dataframe.texStrokeWidth, viz.strokeWidthMetaShader, viz.strokeWidth));\n        }\n        dataframes.map(dataframe => styleDataframe(dataframe, dataframe.texFilter, viz.filterMetaShader, viz.filter));\n\n        // Final drawing (to screen). In the case of lines / polygons, there is an extra step (for antialiasing)\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        if (renderLayer.type === GEOMETRY_TYPE.POINT) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        } else {\n            // lines & polygon (antialiasing)\n            const antialiasingScale = (window.devicePixelRatio || 1) >= 2 ? 1 : 2;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._AAFB);\n            const [w, h] = [gl.drawingBufferWidth, gl.drawingBufferHeight];\n\n            if (w !== this._width || h !== this._height) {\n                gl.bindTexture(gl.TEXTURE_2D, this._AATex);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,\n                    w * antialiasingScale, h * antialiasingScale, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._AATex, 0);\n\n                const renderbuffer = gl.createRenderbuffer();\n                gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n                gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w * antialiasingScale, h * antialiasingScale);\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderbuffer);\n\n                [this._width, this._height] = [w, h];\n            }\n            gl.viewport(0, 0, w * antialiasingScale, h * antialiasingScale);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        const { orderingMins, orderingMaxs } = getOrderingRenderBuckets(renderLayer);\n\n        if (dataframes[0].type === GEOMETRY_TYPE.LINE || dataframes[0].type === GEOMETRY_TYPE.POLYGON) {\n            gl.clearDepth(1);\n            gl.depthRange(0, 1);\n            gl.depthFunc(gl.NOTEQUAL);\n            gl.depthMask(true);\n            gl.enable(gl.DEPTH_TEST);\n        }\n\n        const renderDrawPass = orderingIndex => dataframes.forEach(dataframe => {\n            let freeTexUnit = 0;\n            let metaRenderer = null;\n            if (!viz.symbol.default) {\n                metaRenderer = viz.symbolMetaShader;\n            } else if (dataframe.type === GEOMETRY_TYPE.POINT) {\n                metaRenderer = viz.pointMetaShader;\n            } else if (dataframe.type === GEOMETRY_TYPE.LINE) {\n                metaRenderer = viz.lineMetaShader;\n            } else {\n                metaRenderer = viz.polygonMetaShader;\n            }\n            const renderer = metaRenderer.shader;\n            gl.useProgram(renderer.program);\n\n            // Set filtering condition on \"... AND feature is in current order bucket\"\n            gl.uniform1f(renderer.orderMinWidth, orderingMins[orderingIndex]);\n            gl.uniform1f(renderer.orderMaxWidth, orderingMaxs[orderingIndex]);\n\n            // Define some scalar uniforms\n            gl.uniform1f(renderer.normalScale, 1 / (Math.pow(2, drawMetadata.zoomLevel) * RESOLUTION_ZOOMLEVEL_ZERO * dataframe.scale));\n            gl.uniform2f(renderer.resolution, gl.canvas.width / window.devicePixelRatio, gl.canvas.height / window.devicePixelRatio);\n\n            gl.enableVertexAttribArray(renderer.vertexPositionAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, dataframe.vertexBuffer);\n            gl.vertexAttribPointer(renderer.vertexPositionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.enableVertexAttribArray(renderer.featureIdAttr);\n            gl.bindBuffer(gl.ARRAY_BUFFER, dataframe.featureIDBuffer);\n            gl.vertexAttribPointer(renderer.featureIdAttr, 2, gl.FLOAT, false, 0, 0);\n\n            if (dataframe.type === GEOMETRY_TYPE.LINE || dataframe.type === GEOMETRY_TYPE.POLYGON) {\n                gl.enableVertexAttribArray(renderer.normalAttr);\n                gl.bindBuffer(gl.ARRAY_BUFFER, dataframe.normalBuffer);\n                gl.vertexAttribPointer(renderer.normalAttr, 2, gl.FLOAT, false, 0, 0);\n            }\n\n            // Common Style textures\n            gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n            gl.bindTexture(gl.TEXTURE_2D, dataframe.texColor);\n            gl.uniform1i(renderer.colorTexture, freeTexUnit);\n            freeTexUnit++;\n\n            gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n            gl.bindTexture(gl.TEXTURE_2D, dataframe.texFilter);\n            gl.uniform1i(renderer.filterTexture, freeTexUnit);\n            freeTexUnit++;\n\n            // Specific Style textures\n            if (dataframe.type === 'point' || dataframe.type === 'line') {\n                gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n                gl.bindTexture(gl.TEXTURE_2D, dataframe.texWidth);\n                gl.uniform1i(renderer.widthTexture, freeTexUnit);\n                freeTexUnit++;\n            }\n\n            if (!viz.symbol.default) {\n                const textureId = metaRenderer.textureIds;\n                // Enforce that property texture and style texture TextureUnits don't clash with auxiliar ones\n                drawMetadata.freeTexUnit = freeTexUnit + Object.keys(textureId).length;\n                viz.symbol._setTimestamp(timestamp);\n                viz.symbol._preDraw(renderer.program, drawMetadata, gl);\n\n                viz.symbolPlacement._setTimestamp(timestamp);\n                viz.symbolPlacement._preDraw(renderer.program, drawMetadata, gl);\n\n                freeTexUnit = drawMetadata.freeTexUnit;\n\n                Object.keys(textureId).forEach(name => {\n                    gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n                    gl.bindTexture(gl.TEXTURE_2D, dataframe.getPropertyTexture(name));\n                    gl.uniform1i(textureId[name], freeTexUnit);\n                    freeTexUnit++;\n                });\n            } else if (dataframe.type !== GEOMETRY_TYPE.LINE) {\n                // Lines don't support stroke\n                gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n                gl.bindTexture(gl.TEXTURE_2D, dataframe.texStrokeColor);\n                gl.uniform1i(renderer.strokeColorTexture, freeTexUnit);\n                freeTexUnit++;\n\n                gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n                gl.bindTexture(gl.TEXTURE_2D, dataframe.texStrokeWidth);\n                gl.uniform1i(renderer.strokeWidthTexture, freeTexUnit);\n                freeTexUnit++;\n            }\n\n            if (dataframe.type === GEOMETRY_TYPE.LINE || dataframe.type === GEOMETRY_TYPE.POLYGON) {\n                gl.clear(gl.DEPTH_BUFFER_BIT); // antialising-related\n            }\n\n            if (!viz.transform.default) {\n                const textureId = metaRenderer.textureIds;\n                // Enforce that property texture and style texture TextureUnits don't clash with auxiliar ones\n                drawMetadata.freeTexUnit = freeTexUnit + Object.keys(textureId).length;\n                viz.transform._setTimestamp(timestamp);\n                viz.transform._preDraw(renderer.program, drawMetadata, gl);\n\n                freeTexUnit = drawMetadata.freeTexUnit;\n\n                Object.keys(textureId).forEach(name => {\n                    gl.activeTexture(gl.TEXTURE0 + freeTexUnit);\n                    gl.bindTexture(gl.TEXTURE_2D, dataframe.getPropertyTexture(name));\n                    gl.uniform1i(textureId[name], freeTexUnit);\n                    freeTexUnit++;\n                });\n\n                gl.uniform2f(renderer.resolution, gl.canvas.width, gl.canvas.height); // remove it ? (duplicated)\n            }\n\n            gl.uniformMatrix4fv(renderer.matrix, false, dataframe.matrix);\n\n            gl.drawArrays(gl.TRIANGLES, 0, dataframe.numVertex);\n\n            // Some cleaning...\n            gl.disableVertexAttribArray(renderer.vertexPositionAttribute);\n            gl.disableVertexAttribArray(renderer.featureIdAttr);\n            if (dataframe.type === GEOMETRY_TYPE.LINE || dataframe.type === GEOMETRY_TYPE.POLYGON) {\n                gl.disableVertexAttribArray(renderer.normalAttr);\n                gl.disable(gl.DEPTH_TEST);\n            }\n        });\n        orderingMins.map((_, orderingIndex) => {\n            renderDrawPass(orderingIndex);\n        });\n\n        if (renderLayer.type !== GEOMETRY_TYPE.POINT) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n            gl.useProgram(this._aaBlendShader.program);\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this._AATex);\n            gl.uniform1i(this._aaBlendShader.readTU, 0);\n\n            gl.enableVertexAttribArray(this._aaBlendShader.vertexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bigTriangleVBO);\n            gl.vertexAttribPointer(this._aaBlendShader.vertexAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.drawArrays(gl.TRIANGLES, 0, 3);\n            gl.disableVertexAttribArray(this._aaBlendShader.vertexAttribute);\n        }\n\n        gl.disable(gl.CULL_FACE); // ? not needed from v0.50?\n    }\n\n    _updateDataframeMatrices (dataframes) {\n        dataframes.forEach(dataframe => {\n            let m2 = [];\n            let m3 = [];\n            mat4.copy(m2, this.matrix);\n            mat4.identity(m3);\n            mat4.translate(m3, m3, [0.5, 0.5, 0]);\n            mat4.scale(m3, m3, [0.5, -0.5, 1]);\n\n            mat4.translate(m3, m3, [dataframe.center.x, dataframe.center.y, 0]);\n            mat4.scale(m3, m3, [dataframe.scale, dataframe.scale, 1]);\n\n            mat4.multiply(m2, m2, m3);\n            dataframe.matrix = m2;\n        });\n    }\n\n    /**\n     * Initialize static shaders\n     */\n    _initShaders () {\n        this._aaBlendShader = new shaders.AABlender(this.gl);\n    }\n}\n\nfunction getOrderingRenderBuckets (renderLayer) {\n    const orderer = renderLayer.viz.order;\n    const MAX_SIZE = 1030;\n    let orderingMins = [0];\n    let orderingMaxs = [MAX_SIZE];\n    // We divide the ordering into 64 buckets of 2 pixels each, since the size limit is 127 pixels\n    const NUM_BUCKETS = 64;\n    if (orderer.isA(Asc)) {\n        orderingMins = Array.from({ length: NUM_BUCKETS }, (_, i) => ((NUM_BUCKETS - 1) - i) * 2);\n        orderingMaxs = Array.from({ length: NUM_BUCKETS }, (_, i) => i === 0 ? MAX_SIZE : ((NUM_BUCKETS - 1) - i + 1) * 2);\n    } else if (orderer.isA(Desc)) {\n        orderingMins = Array.from({ length: NUM_BUCKETS }, (_, i) => i * 2);\n        orderingMaxs = Array.from({ length: NUM_BUCKETS }, (_, i) => i === (NUM_BUCKETS - 1) ? MAX_SIZE : (i + 1) * 2);\n    }\n    return {\n        orderingMins,\n        orderingMaxs\n    };\n}\n\nfunction getValidWebGLContextOrThrow (canvas, gl) {\n    const reasons = unsupportedBrowserReasons(canvas, gl, true);\n    if (reasons.length > 0) {\n        throw reasons[0];\n    }\n    return gl;\n}\n\nexport function isBrowserSupported (canvas, gl) {\n    const reasons = unsupportedBrowserReasons(canvas, gl);\n    return reasons.length === 0;\n}\n\nexport function unsupportedBrowserReasons (canvas, gl, early = false) {\n    const reasons = [];\n    if (!gl) {\n        if (!canvas) {\n            canvas = document.createElement('canvas');\n        }\n        gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    }\n    if (!gl) {\n        reasons.push(new CartoRuntimeError('WebGL 1 is unsupported', CartoRuntimeErrorTypes.WEB_GL));\n        return reasons;\n    }\n\n    const OESTextureFloat = gl.getExtension('OES_texture_float');\n    if (!OESTextureFloat) {\n        reasons.push(new CartoRuntimeError('WebGL extension \\'OES_texture_float\\' is unsupported', CartoRuntimeErrorTypes.WEB_GL));\n        if (early) {\n            return reasons;\n        }\n    }\n\n    const supportedRTT = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\n    if (supportedRTT < RTT_WIDTH) {\n        reasons.push(\n            new CartoRuntimeError(\n                `WebGL parameter 'gl.MAX_RENDERBUFFER_SIZE' is below the requirement: ${supportedRTT} < ${RTT_WIDTH}`,\n                CartoRuntimeErrorTypes.WEB_GL\n            )\n        );\n    }\n\n    const vertexTextureImageUnits = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    if (vertexTextureImageUnits < MIN_VERTEX_TEXTURE_IMAGE_UNITS_NEEDED) {\n        reasons.push(\n            new CartoRuntimeError(\n                `WebGL parameter 'gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS' is below the requirement: ${vertexTextureImageUnits} < ${MIN_VERTEX_TEXTURE_IMAGE_UNITS_NEEDED}`,\n                CartoRuntimeErrorTypes.WEB_GL\n            )\n        );\n    }\n\n    return reasons;\n}\n","import { GEOMETRY_TYPE } from '../../utils/geometry';\nimport DummyDataframe from './DummyDataframe';\nimport { WM_R } from '../../utils/util';\n\nimport { genViewportFeatureClass } from './viewportFeature';\n\nimport FeatureIdsHelper from './FeatureIdsHelper';\nimport ViewportHelper from './ViewportHelper';\n\n// Maximum number of property textures that will be uploaded automatically to the GPU\n// in a non-lazy manner\nconst MAX_GPU_AUTO_UPLOAD_TEXTURE_LIMIT = 32;\n\nconst featureClassCache = new Map();\n\nexport default class Dataframe extends DummyDataframe {\n    constructor (...args) {\n        super(...args);\n\n        this._initHelpers();\n    }\n\n    _initHelpers () {\n        if (!this._featureIdsHelper) {\n            this._featureIdsHelper = new FeatureIdsHelper(this);\n        }\n\n        if (!this._viewportHelper) {\n            this._viewportHelper = new ViewportHelper(this);\n        }\n    }\n\n    /**\n     * Loads all the relevant information to the WebGL context, provided by the renderer.\n     * This includes:\n     *   - the textures for each property\n     *   - the buffers for vertices & normals\n     *   - the auxiliary textures for style properties\n     *\n     * This method is very intensive in terms of computations, loading potentially a lot of CPU data to the GPU\n     *\n     */\n    bindRenderer (renderer) {\n        this.renderer = renderer;\n\n        this._initHelpers();\n\n        // Load alphanumeric properties to WebGL textures\n        this.addProperties();\n\n        // Load geometry-related data to WebGL buffers\n        this._loadVertices();\n        this._loadNormals();\n        this._loadFeatureIds();\n\n        // Create auxiliary WebGL style textures\n        this._createEmptyStyleTextures();\n    }\n\n    /**\n     * Gets width & height size, considering RTT_WIDTH and the number of features\n     */\n    getSize () {\n        const width = this.renderer.RTT_WIDTH;\n        const height = Math.ceil(this.numFeatures / width);\n        return { width, height };\n    }\n\n    /**\n     * Gets the WebGL context from the renderer\n     */\n    _getGL () {\n        return this.renderer.gl;\n    }\n\n    /**\n     * Creates the WebGL `vertexBuffer` and loads there the vertices\n     */\n    _loadVertices () {\n        const gl = this._getGL();\n        const vertices = this.decodedGeom.vertices;\n\n        this.vertexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    }\n\n    /**\n     * Creates the WebGL `normalBuffer` and loads there the normals, if they exist\n     */\n    _loadNormals () {\n        const gl = this._getGL();\n        const normals = this.decodedGeom.normals;\n\n        if (normals) {\n            this.normalBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, normals, gl.STATIC_DRAW);\n        }\n    }\n\n    /**\n     * Creates the WebGL `featureIDBuffer` and loads there the featureIds per vertex\n     */\n    _loadFeatureIds () {\n        const gl = this._getGL();\n        const ids = this._featureIdsHelper.getFeatureIds();\n\n        this.featureIDBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.featureIDBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, ids, gl.STATIC_DRAW);\n    }\n\n    getFeaturesAtPosition (position, viz) {\n        if (!this.matrix) {\n            return [];\n        }\n\n        switch (this.type) {\n            case GEOMETRY_TYPE.POINT:\n                return this._viewportHelper.getPointsAtPosition(position, viz);\n            case GEOMETRY_TYPE.LINE:\n            case GEOMETRY_TYPE.POLYGON:\n                return this._viewportHelper.getFeaturesAtPositionFromTriangles(this.type, position, viz);\n            default:\n                return [];\n        }\n    }\n\n    inViewport (featureIndex) {\n        if (!this.matrix) {\n            return false;\n        }\n\n        switch (this.type) {\n            case GEOMETRY_TYPE.POINT:\n                return this._viewportHelper.isPointInViewport(featureIndex);\n            case GEOMETRY_TYPE.LINE:\n            case GEOMETRY_TYPE.POLYGON:\n                return this._viewportHelper.isPolygonInViewport(featureIndex);\n            default:\n                return false;\n        }\n    }\n\n    getRenderedCentroid (featureIndex) {\n        const centroid = { ...this._centroids[featureIndex] };\n        centroid.x = centroid.x * this.scale + this.center.x;\n        centroid.y = centroid.y * this.scale + this.center.y;\n        const g = this._unprojectFromWebMercator(centroid);\n        return [g.lng, g.lat];\n    }\n\n    getPropertyTexture (propertyName) {\n        if (this.propertyTex[propertyName]) {\n            return this.propertyTex[propertyName];\n        }\n\n        this._loadPropertyValuesToTexture(propertyName);\n        return this.propertyTex[propertyName];\n    }\n\n    /**\n      * Creates a WebGL texture for that property and loads the property values,\n      * if they exist\n     */\n    _loadPropertyValuesToTexture (propertyName) {\n        const gl = this._getGL(); // Dataframe is already bound to this context, \"hot update\" it\n        const propertiesFloat32Array = this.properties[propertyName];\n\n        const { width, height } = this.getSize();\n\n        if (propertiesFloat32Array) {\n            this.propertyTex[propertyName] = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this.propertyTex[propertyName]);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA,\n                width, height, 0, gl.ALPHA, gl.FLOAT,\n                propertiesFloat32Array);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n    }\n\n    free () {\n        this._freeWebGLElements();\n\n        Object.keys(this).forEach(key => {\n            this[key] = null;\n        });\n\n        this.freed = true;\n    }\n\n    _freeWebGLElements () {\n        if (!this.propertyTex) {\n            return;\n        }\n\n        const gl = this._getGL();\n\n        this.propertyTex.map(tex => gl.deleteTexture(tex));\n\n        gl.deleteTexture(this.texColor);\n        gl.deleteTexture(this.texStrokeColor);\n        gl.deleteTexture(this.texWidth);\n        gl.deleteTexture(this.texStrokeWidth);\n        gl.deleteTexture(this.texFilter);\n\n        gl.deleteBuffer(this.vertexBuffer);\n        gl.deleteBuffer(this.featureIDBuffer);\n    }\n\n    /**\n     * Converts a point {x, y} in WebMercator to {lng, lat}\n     */\n    _unprojectFromWebMercator ({ x, y }) {\n        const DEG2RAD = Math.PI / 180;\n        const EARTH_RADIUS = 6378137;\n        return {\n            lng: x * WM_R / EARTH_RADIUS / DEG2RAD,\n            lat: (Math.atan(Math.pow(Math.E, y * WM_R / EARTH_RADIUS)) - Math.PI / 4) * 2 / DEG2RAD\n        };\n    }\n\n    /**\n     * Defines a `ViewportFeature` class dynamically, with the proper getters\n     * to access its properties, if that doesn't exist yet in the `featureClassCache`\n     */\n    _genFeatureClass () {\n        if (featureClassCache.has(this.metadata)) {\n            this._featureClass = featureClassCache.get(this.metadata);\n            return;\n        }\n\n        const cls = genViewportFeatureClass(this.metadata);\n\n        featureClassCache.set(this.metadata, cls);\n        this._featureClass = cls;\n    }\n\n    /**\n     * Builds a feature object for an index, copying all the properties.\n     */\n    getFeature (index) {\n        if (!this.cachedFeatures) {\n            this.cachedFeatures = new Array(this.numFeatures);\n        }\n\n        if (this.cachedFeatures[index] !== undefined) {\n            return this.cachedFeatures[index];\n        }\n\n        if (!this._featureClass) {\n            this._genFeatureClass();\n        }\n\n        const feature = new this._featureClass(index, this);\n        this.cachedFeatures[index] = feature;\n        return feature;\n    }\n\n    /**\n     * Adds new properties to the dataframe or overwrite previously stored ones,\n     * using metadata properties.\n     *\n     * These are all the relevant alphanumeric properties, which have been previously encoded\n     * in a form like {propertyName: Float32Array}\n     *\n     */\n    addProperties () {\n        for (let i = 0; i < this.metadata.propertyKeys.length; i++) {\n            const propertyName = this.metadata.propertyKeys[i];\n            this._addProperty(propertyName);\n        }\n\n        this._genFeatureClass();\n    }\n\n    /**\n     * If below GPU auto upload texture limit, it ensures that a WebGL texture is ready with\n     * the values for that property already loaded\n     */\n    _addProperty (propertyName) {\n        if (Object.keys(this.propertyTex).length < MAX_GPU_AUTO_UPLOAD_TEXTURE_LIMIT) {\n            this.getPropertyTexture(propertyName);\n        }\n    }\n\n    _createEmptyStyleTextures () {\n        this.texColor = this._createStyleDataframeTexture();\n        this.texWidth = this._createStyleDataframeTexture();\n        this.texStrokeColor = this._createStyleDataframeTexture();\n        this.texStrokeWidth = this._createStyleDataframeTexture();\n        this.texFilter = this._createStyleDataframeTexture();\n    }\n\n    /**\n     * Creates a new empty WebGL texture.\n     * It just reserves the space for this 'intermediate texture'\n     */\n    _createStyleDataframeTexture () {\n        // TODO we are wasting 75% of the memory for the scalar attributes (width, strokeWidth),\n        // since RGB components are discarded\n        const gl = this._getGL();\n        const { width, height } = this.getSize();\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,\n            width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n            null); // empty!\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        return texture;\n    }\n}\n","import { decodeGeom } from '../decoder';\nimport { GEOMETRY_TYPE, computeAABB, computeCentroids } from '../../utils/geometry';\n\nexport default class DummyDataframe {\n    constructor ({ active, center, properties, propertiesArrayBuffer, scale, type, geom, size, metadata }) {\n        this.active = active;\n        this.center = center;\n        this.properties = properties;\n        this.propertiesArrayBuffer = propertiesArrayBuffer;\n        this.scale = scale;\n        this.type = type;\n        this.decodedGeom = decodeGeom(type, geom);\n\n        this.numVertex = (type === GEOMETRY_TYPE.POINT) ? size * 3 : this.decodedGeom.vertices.length / 2;\n        this.numFeatures = type === GEOMETRY_TYPE.POINT ? size : this.decodedGeom.breakpoints.length || this.numVertex;\n        this.propertyTex = [];\n        this.metadata = metadata;\n        this.propertyCount = 0;\n\n        this._aabb = computeAABB(geom, type);\n        this._centroids = computeCentroids(this.decodedGeom, type);\n\n        this.t1 = [0.1, 0.1, 0.1, 0.1];\n        this.t2 = [0.1, 0.1, 0.1, 0.1];\n        this.t3 = [0.1, 0.1, 0.1, 0.1];\n        this.t4 = [0.1, 0.1, 0.1, 0.1];\n    }\n}\n","export default class FeatureIdsHelper {\n    constructor (dataframe) {\n        this.dataframe = dataframe;\n    }\n\n    // References pointing to dataframe, to be in sync with its updates\n    get decodedGeom () { return this.dataframe.decodedGeom; }\n    get numFeatures () { return this.dataframe.numFeatures; }\n\n    /**\n     * Gets the featureId per each vertice.\n     */\n    getFeatureIds () {\n        const breakpoints = this.decodedGeom.breakpoints;\n        const isPointType = !breakpoints.length;\n\n        if (isPointType) {\n            return this._getFeatureIdsForPoints();\n        } else {\n            return this._getFeatureIdsForLinesOrPolygons();\n        }\n    }\n\n    _getFeatureIdsForPoints () {\n        const numVertices = this.decodedGeom.vertices.length;\n        let { tableX, tableY } = this._createTablesXY();\n\n        const ids = new Float32Array(numVertices);\n        const inc = 1 / (1024 * 64);\n        let index = 0;\n\n        for (let i = 0; i < numVertices; i += 6) {\n            ids[i + 0] = tableX[index];\n            ids[i + 1] = tableY[index];\n\n            if (ids[i + 0] === 0) {\n                ids[i + 0] += inc;\n            }\n            if (ids[i + 1] === 0) {\n                ids[i + 1] += inc;\n            }\n\n            ids[i + 2] = -ids[i + 0];\n            ids[i + 3] = ids[i + 1];\n\n            ids[i + 4] = ids[i + 0];\n            ids[i + 5] = -ids[i + 1];\n            index++;\n        }\n\n        return ids;\n    }\n\n    _getFeatureIdsForLinesOrPolygons () {\n        const numVertices = this.decodedGeom.vertices.length;\n        let { tableX, tableY } = this._createTablesXY();\n        const breakpoints = this.decodedGeom.breakpoints;\n\n        const ids = new Float32Array(numVertices);\n        let index = 0;\n\n        for (let i = 0; i < numVertices; i += 2) {\n            while (i === breakpoints[index]) {\n                index++;\n            }\n            ids[i + 0] = tableX[index];\n            ids[i + 1] = tableY[index];\n        }\n\n        return ids;\n    }\n\n    _createTablesXY () {\n        let tableX = {};\n        let tableY = {};\n\n        const { height, width } = this.dataframe.getSize();\n\n        for (let k = 0; k < this.numFeatures; k++) {\n            // Transform integer ID into a `vec2` to overcome WebGL 1 limitations,\n            // output IDs will be in the `vec2([0,1], [0,1])` range\n            tableX[k] = (k % width) / (width - 1);\n            tableY[k] = height > 1 ? Math.floor(k / width) / (height - 1) : 0.5;\n        }\n\n        return { tableX, tableY };\n    }\n}\n","export default class ProjectionHelper {\n    constructor (dataframe) {\n        this.dataframe = dataframe;\n    }\n\n    // Reference pointing to dataframe, to be in sync with its updates\n    get matrix () { return this.dataframe.matrix; }\n\n    toNDC (x, y) {\n        const { ox, oy, ow } = this.toClipSpace(x, y);\n\n        // Normalize by W\n        return { x: ox / ow, y: oy / ow };\n    }\n\n    toClipSpace (x, y) {\n        const matrix = this.matrix;\n        const ox = matrix[0] * x + matrix[4] * y + matrix[12];\n        const oy = matrix[1] * x + matrix[5] * y + matrix[13];\n        const ow = matrix[3] * x + matrix[7] * y + matrix[15];\n\n        return { ox, oy, ow };\n    }\n}\n","import { triangleCollides } from '../../utils/collision';\nimport { pointInTriangle, pointInCircle, GEOMETRY_TYPE } from '../../utils/geometry';\nimport { FILTERING_THRESHOLD } from '../Renderer';\nimport { RESOLUTION_ZOOMLEVEL_ZERO } from '../../constants/layer';\nimport ProjectionHelper from './ProjectionHelper';\n\nconst AABBTestResults = {\n    INSIDE: 1,\n    OUTSIDE: -1,\n    INTERSECTS: 0\n};\n\nconst SIZE_SATURATION_PX = 1024;\n\nexport default class ViewportHelper {\n    constructor (dataframe) {\n        this.dataframe = dataframe;\n\n        this.getFeature = dataframe.getFeature.bind(dataframe);\n        this._getGL = dataframe._getGL.bind(dataframe);\n        this._projection = new ProjectionHelper(dataframe);\n    }\n\n    // References pointing to dataframe, to be in sync with its updates\n    get decodedGeom () { return this.dataframe.decodedGeom; }\n    get _aabb () { return this.dataframe._aabb; }\n    get numFeatures () { return this.dataframe.numFeatures; }\n    get renderer () { return this.dataframe.renderer; }\n    get matrix () { return this.dataframe.matrix; }\n    get scale () { return this.dataframe.scale; }\n\n    /**\n     * Checks if the point is inside the viewport.\n     */\n    isPointInViewport (featureIndex) {\n        const vertices = this.decodedGeom.vertices;\n        const x = vertices[6 * featureIndex + 0];\n        const y = vertices[6 * featureIndex + 1];\n\n        const { ox, oy, ow } = this._projection.toClipSpace(x, y);\n\n        // Checks in Clip Space if the point is inside the viewport\n        // See https://www.khronos.org/opengl/wiki/Vertex_Post-Processing#Clipping\n        const inside = ox > -ow && ox < ow && oy > -ow && oy < ow;\n        return inside;\n    }\n\n    /**\n     * Checks if the polygon is inside the viewport.\n     */\n    isPolygonInViewport (featureIndex) {\n        const featureAABB = this._aabb[featureIndex];\n        const aabbResult = this._compareAABBs(featureAABB);\n\n        if (aabbResult === AABBTestResults.INTERSECTS) {\n            const vertices = this.decodedGeom.vertices;\n            const normals = this.decodedGeom.normals;\n            const range = this.decodedGeom.featureIDToVertexIndex.get(featureIndex);\n            return this._isPolygonCollidingViewport(vertices, normals, range.start, range.end);\n        }\n\n        return aabbResult === AABBTestResults.INSIDE;\n    }\n\n    /**\n     * Get canvas size in pixels, in a {WIDTH, HEIGHT} object, using the devicePixelRatio\n     */\n    _getCanvasSizeInPixels () {\n        const canvas = this._getGL().canvas;\n        const WIDTH = canvas.width / window.devicePixelRatio;\n        const HEIGHT = canvas.height / window.devicePixelRatio;\n\n        return { WIDTH, HEIGHT };\n    }\n\n    _compareAABBs (featureAABB) {\n        if (featureAABB === null) {\n            return AABBTestResults.OUTSIDE;\n        }\n\n        const corners1 = this._projection.toNDC(featureAABB.minx, featureAABB.miny);\n        const corners2 = this._projection.toNDC(featureAABB.minx, featureAABB.maxy);\n        const corners3 = this._projection.toNDC(featureAABB.maxx, featureAABB.miny);\n        const corners4 = this._projection.toNDC(featureAABB.maxx, featureAABB.maxy);\n\n        const featureStrokeAABB = {\n            minx: Math.min(corners1.x, corners2.x, corners3.x, corners4.x),\n            miny: Math.min(corners1.y, corners2.y, corners3.y, corners4.y),\n            maxx: Math.max(corners1.x, corners2.x, corners3.x, corners4.x),\n            maxy: Math.max(corners1.y, corners2.y, corners3.y, corners4.y)\n        };\n\n        const viewportAABB = {\n            minx: -1,\n            miny: -1,\n            maxx: 1,\n            maxy: 1\n        };\n\n        switch (true) {\n            case this._isFeatureAABBInsideViewport(featureStrokeAABB, viewportAABB):\n                return AABBTestResults.INSIDE;\n            case this._isFeatureAABBOutsideViewport(featureStrokeAABB, viewportAABB):\n                return AABBTestResults.OUTSIDE;\n            default:\n                return AABBTestResults.INTERSECTS;\n        }\n    }\n\n    _isPolygonCollidingViewport (vertices, normals, start, end) { // NORMALS??? FIXME TODO\n        if (!this.matrix) {\n            return false;\n        }\n\n        const aabb = { minx: -1, miny: -1, maxx: 1, maxy: 1 };\n        for (let i = start; i < end; i += 6) {\n            const v1 = this._projection.toNDC(vertices[i + 0], vertices[i + 1]);\n            const v2 = this._projection.toNDC(vertices[i + 2], vertices[i + 3]);\n            const v3 = this._projection.toNDC(vertices[i + 4], vertices[i + 5]);\n\n            const triangle = [{\n                x: v1.x,\n                y: v1.y\n            }, {\n                x: v2.x,\n                y: v2.y\n            }, {\n                x: v3.x,\n                y: v3.y\n            }];\n\n            if (triangleCollides(triangle, aabb)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _isFeatureAABBInsideViewport (featureAABB, viewportAABB) {\n        return (featureAABB.minx >= viewportAABB.minx && featureAABB.maxx <= viewportAABB.maxx &&\n            featureAABB.miny >= viewportAABB.miny && featureAABB.maxy <= viewportAABB.maxy);\n    }\n\n    _isFeatureAABBOutsideViewport (featureAABB, viewportAABB) {\n        return (featureAABB.minx > viewportAABB.maxx || featureAABB.miny > viewportAABB.maxy ||\n            featureAABB.maxx < viewportAABB.minx || featureAABB.maxy < viewportAABB.miny);\n    }\n\n    getPointsAtPosition (position, viz) {\n        const points = this.decodedGeom.vertices;\n\n        // FIXME: points.length includes rejected points (out of tile)\n        // so we use numFeatures here, but should fix the points size\n        const features = [];\n        for (let i = 0; i < this.numFeatures * 6; i += 6) {\n            const featureIndex = i / 6;\n            const feature = this.getFeature(featureIndex);\n\n            if (this._isFeatureFiltered(feature, viz.filter)) {\n                continue;\n            }\n\n            const point = { x: points[i], y: points[i + 1] };\n            const { center, radius } = this._getCircleFor(point, feature, viz);\n\n            const inside = pointInCircle(position, center, radius);\n            if (inside) {\n                features.push(feature);\n            }\n        }\n\n        return features;\n    }\n\n    _isFeatureFiltered (feature, filterExpression) {\n        return filterExpression.eval(feature) < FILTERING_THRESHOLD;\n    }\n\n    /**\n     * Gets a circle for that point of the feature, considering the viz properties\n     * (symbolPlacement, transform, width and strokeWidth).\n     *\n     * It is expressed as {center, radius}, using pixel coordinates\n     */\n    _getCircleFor (point, feature, viz) {\n        const { WIDTH, HEIGHT } = this._getCanvasSizeInPixels();\n\n        const center = this._projection.toNDC(point.x, point.y);\n\n        // Project to pixel space\n        center.x *= 0.5;\n        center.y *= -0.5;\n        center.x += 0.5;\n        center.y += 0.5;\n        center.x *= WIDTH;\n        center.y *= HEIGHT;\n\n        const radius = this._computePointRadius(feature, viz);\n\n        if (!viz.symbol.default) {\n            const symbolOffset = viz.symbolPlacement.eval(feature);\n            center.x += symbolOffset[0] * radius;\n            center.y -= symbolOffset[1] * radius;\n        }\n\n        if (!viz.transform.default) {\n            const vizOffset = viz.transform.eval(feature);\n            center.x += vizOffset.x;\n            center.y -= vizOffset.y;\n        }\n\n        return { center, radius };\n    }\n\n    getFeaturesAtPositionFromTriangles (geometryType, position, viz) {\n        const vertices = this.decodedGeom.vertices;\n        const normals = this.decodedGeom.normals;\n        const breakpoints = this.decodedGeom.breakpoints;\n\n        const features = [];\n        // Linear search for all features\n        // Tests triangles since we already have the triangulated form\n        // Moreover, with an acceleration structure and triangle testing features could be subdivided easily\n        let featureIndex = -1;\n        let strokeWidthScale;\n        const offset = { x: 0, y: 0 };\n\n        const { WIDTH, HEIGHT } = this._getCanvasSizeInPixels();\n\n        for (let i = 0; i < vertices.length; i += 6) {\n            if (i === 0 || i >= breakpoints[featureIndex]) {\n                featureIndex++;\n                const feature = this.getFeature(featureIndex);\n\n                if (!viz.transform.default) {\n                    const vizOffset = viz.transform.eval(feature);\n                    offset.x = vizOffset[0];\n                    offset.y = vizOffset[1];\n                }\n\n                strokeWidthScale = geometryType === GEOMETRY_TYPE.LINE\n                    ? this._computeLineWidthScale(feature, viz)\n                    : this._computePolygonWidthScale(feature, viz);\n\n                if (this._isFeatureFiltered(feature, viz.filter) ||\n                    !this._isPointInAABB(position, offset,\n                        geometryType === GEOMETRY_TYPE.LINE\n                            ? viz.width.eval(feature)\n                            : viz.strokeWidth.eval(feature)\n                        ,\n                        featureIndex)\n                ) {\n                    i = breakpoints[featureIndex] - 6;\n                    continue;\n                }\n            }\n\n            const v1 = this._projection.toNDC(\n                vertices[i + 0] + normals[i + 0] * strokeWidthScale,\n                vertices[i + 1] + normals[i + 1] * strokeWidthScale\n            );\n\n            const v2 = this._projection.toNDC(\n                vertices[i + 2] + normals[i + 2] * strokeWidthScale,\n                vertices[i + 3] + normals[i + 3] * strokeWidthScale\n            );\n\n            const v3 = this._projection.toNDC(\n                vertices[i + 4] + normals[i + 4] * strokeWidthScale,\n                vertices[i + 5] + normals[i + 5] * strokeWidthScale\n            );\n\n            v1.x *= 0.5;\n            v1.y *= -0.5;\n            v1.x += 0.5;\n            v1.y += 0.5;\n\n            v2.x *= 0.5;\n            v2.y *= -0.5;\n            v2.x += 0.5;\n            v2.y += 0.5;\n\n            v3.x *= 0.5;\n            v3.y *= -0.5;\n            v3.x += 0.5;\n            v3.y += 0.5;\n\n            const inside = pointInTriangle(position,\n                { x: v1.x * WIDTH + offset.x, y: v1.y * HEIGHT - offset.y },\n                { x: v2.x * WIDTH + offset.x, y: v2.y * HEIGHT - offset.y },\n                { x: v3.x * WIDTH + offset.x, y: v3.y * HEIGHT - offset.y });\n\n            if (inside) {\n                features.push(this.getFeature(featureIndex));\n                // Don't repeat a feature if the point is on a shared (by two triangles) edge\n                // Also, don't waste CPU cycles\n                i = breakpoints[featureIndex] - 6;\n            }\n        }\n\n        return features;\n    }\n\n    _isPointInAABB (point, offset, widthScale, featureIndex) {\n        // Transform AABB from tile space to NDC space\n        const aabb = this._aabb[featureIndex];\n        if (aabb === null || !this.matrix) {\n            return false;\n        }\n\n        const corners1 = this._projection.toNDC(aabb.minx, aabb.miny);\n        const corners2 = this._projection.toNDC(aabb.minx, aabb.maxy);\n        const corners3 = this._projection.toNDC(aabb.maxx, aabb.miny);\n        const corners4 = this._projection.toNDC(aabb.maxx, aabb.maxy);\n\n        const ndcAABB = {\n            minx: Math.min(corners1.x, corners2.x, corners3.x, corners4.x),\n            miny: Math.min(corners1.y, corners2.y, corners3.y, corners4.y),\n            maxx: Math.max(corners1.x, corners2.x, corners3.x, corners4.x),\n            maxy: Math.max(corners1.y, corners2.y, corners3.y, corners4.y)\n        };\n\n        const { WIDTH, HEIGHT } = this._getCanvasSizeInPixels();\n\n        const ox = 2 * offset.x / WIDTH;\n        const oy = 2 * offset.y / HEIGHT;\n        const ndcPoint = {\n            x: point.x / WIDTH * 2 - 1,\n            y: -(point.y / HEIGHT * 2 - 1)\n        };\n\n        const pointAABB = {\n            minx: ndcPoint.x + ox - widthScale * 2 / WIDTH,\n            miny: ndcPoint.y - oy - widthScale * 2 / HEIGHT,\n            maxx: ndcPoint.x + ox + widthScale * 2 / WIDTH,\n            maxy: ndcPoint.y - oy + widthScale * 2 / HEIGHT\n        };\n\n        return !this._isFeatureAABBOutsideViewport(ndcAABB, pointAABB);\n    }\n\n    _computePointRadius (feature, viz) {\n        const widthPixels = Math.min(viz.width.eval(feature), SIZE_SATURATION_PX);\n        const strokeWidthPixels = Math.min(viz.strokeWidth.eval(feature), SIZE_SATURATION_PX);\n        const diameter = widthPixels + strokeWidthPixels;\n        return diameter / 2;\n    }\n\n    _computeLineWidthScale (feature, viz) {\n        const diameter = Math.min(viz.width.eval(feature), SIZE_SATURATION_PX);\n        return diameter / 2 / this.scale / this._resolutionForZoomLevel();\n    }\n\n    _computePolygonWidthScale (feature, viz) {\n        const diameter = Math.min(viz.strokeWidth.eval(feature), SIZE_SATURATION_PX);\n        return diameter / 2 / this.scale / this._resolutionForZoomLevel();\n    }\n\n    _resolutionForZoomLevel () {\n        return (Math.pow(2, this.renderer.drawMetadata.zoomLevel) * RESOLUTION_ZOOMLEVEL_ZERO);\n    }\n}\n","/**\n * Function to create dynamically a ViewportFeature class, with the proper getters\n * to access its properties, as declared in the `metadata`\n */\nexport function genViewportFeatureClass (metadata) {\n    const classTemplate = class ViewportFeature {\n        constructor (index, dataframe) {\n            this._index = index;\n            this._dataframe = dataframe;\n        }\n    };\n    Object.defineProperties(classTemplate.prototype, buildGettersFrom(metadata));\n\n    return classTemplate;\n}\n\nfunction buildGettersFrom (metadata) {\n    const getters = {};\n    metadata.propertyKeys.forEach(propertyName => {\n        const codec = metadata.codec(propertyName);\n        if (codec.isRange()) {\n            const decodedProperties = metadata.decodedProperties(propertyName);\n            getters[propertyName] = {\n                get: function () {\n                    const index = this._index;\n                    const args = decodedProperties.map(name => this._dataframe.properties[name][index]);\n                    return codec.internalToExternal(metadata, args);\n                }\n            };\n        } else {\n            getters[propertyName] = {\n                get: function () {\n                    const index = this._index;\n                    const value = this._dataframe.properties[propertyName][index];\n                    return codec.internalToExternal(metadata, value);\n                }\n            };\n        }\n    });\n    return getters;\n}\n","import { getJoinNormal, getLineNormal, neg } from '../../utils/geometry';\n\n/**\n * Create a triangulated lineString: zero-sized, vertex-shader expanded triangle list\n * with `miter` joins. For angle < 60 joins are automatically adjusted to `bevel`.\n * https://github.com/CartoDB/carto-vl/wiki/Line-rendering\n */\nexport function addLineString (lineString, geomBuffer, index, isPolygon, skipCallback) {\n    let prevPoint, currentPoint;\n    let prevNormal, nextNormal;\n    let drawLine;\n\n    // We need at least two points\n    if (lineString.length >= 4) {\n        // Initialize the first two points\n        prevPoint = [lineString[0], lineString[1]];\n        let i = 2;\n        // The second point may be the same as the first one, iterate to find the first different one\n        for (;i <= lineString.length; i += 2) {\n            currentPoint = [lineString[i], lineString[i + 1]];\n            if (prevPoint[0] !== currentPoint[0] || prevPoint[1] !== currentPoint[1]) {\n                i += 2;\n                break;\n            }\n        }\n        prevNormal = getLineNormal(prevPoint, currentPoint);\n        for (;i <= lineString.length; i += 2) {\n            drawLine = !(skipCallback && skipCallback(i));\n\n            let nextPoint;\n            // With lines, the ending point won't have a nextPoint\n            if (i <= lineString.length - 2) {\n                nextPoint = [lineString[i], lineString[i + 1]];\n            } else if (isPolygon) {\n                nextPoint = [lineString[2], lineString[3]];\n            }\n\n            if (drawLine &&\n                !(prevPoint[0] === currentPoint[0] && prevPoint[1] === currentPoint[1])) {\n                // First triangle\n                geomBuffer.vertices[index] = prevPoint[0];\n                geomBuffer.normals[index++] = -prevNormal[0];\n                geomBuffer.vertices[index] = prevPoint[1];\n                geomBuffer.normals[index++] = -prevNormal[1];\n                geomBuffer.vertices[index] = prevPoint[0];\n                geomBuffer.normals[index++] = prevNormal[0];\n                geomBuffer.vertices[index] = prevPoint[1];\n                geomBuffer.normals[index++] = prevNormal[1];\n                geomBuffer.vertices[index] = currentPoint[0];\n                geomBuffer.normals[index++] = prevNormal[0];\n                geomBuffer.vertices[index] = currentPoint[1];\n                geomBuffer.normals[index++] = prevNormal[1];\n\n                // Second triangle\n                geomBuffer.vertices[index] = prevPoint[0];\n                geomBuffer.normals[index++] = -prevNormal[0];\n                geomBuffer.vertices[index] = prevPoint[1];\n                geomBuffer.normals[index++] = -prevNormal[1];\n                geomBuffer.vertices[index] = currentPoint[0];\n                geomBuffer.normals[index++] = prevNormal[0];\n                geomBuffer.vertices[index] = currentPoint[1];\n                geomBuffer.normals[index++] = prevNormal[1];\n                geomBuffer.vertices[index] = currentPoint[0];\n                geomBuffer.normals[index++] = -prevNormal[0];\n                geomBuffer.vertices[index] = currentPoint[1];\n                geomBuffer.normals[index++] = -prevNormal[1];\n            }\n\n            if (nextPoint && !(nextPoint[0] === currentPoint[0] && nextPoint[1] === currentPoint[1])) {\n                nextNormal = getLineNormal(currentPoint, nextPoint);\n\n                if (drawLine) {\n                    // `turnLeft` indicates that the nextLine turns to the left\n                    // `joinNormal` contains the direction and size for the `miter` vertex\n                    //  If this is not defined means that the join must be `bevel`.\n                    let { turnLeft, joinNormal } = getJoinNormal(prevNormal, nextNormal);\n\n                    let leftNormal = turnLeft ? prevNormal : neg(nextNormal);\n                    let rightNormal = turnLeft ? nextNormal : neg(prevNormal);\n\n                    // Third triangle\n                    geomBuffer.vertices[index] = currentPoint[0];\n                    geomBuffer.normals[index++] = 0;\n                    geomBuffer.vertices[index] = currentPoint[1];\n                    // Mark vertex to be stroke in PolygonShader with the\n                    // non-zero value 1e-37, so it validates the expression\n                    // `normal != vec2(0.)` without affecting the vertex position.\n                    geomBuffer.normals[index++] = isPolygon ? 1e-37 : 0;\n                    geomBuffer.vertices[index] = currentPoint[0];\n                    geomBuffer.normals[index++] = leftNormal[0];\n                    geomBuffer.vertices[index] = currentPoint[1];\n                    geomBuffer.normals[index++] = leftNormal[1];\n                    geomBuffer.vertices[index] = currentPoint[0];\n                    geomBuffer.normals[index++] = rightNormal[0];\n                    geomBuffer.vertices[index] = currentPoint[1];\n                    geomBuffer.normals[index++] = rightNormal[1];\n\n                    if (joinNormal) {\n                        // Forth triangle\n                        geomBuffer.vertices[index] = currentPoint[0];\n                        geomBuffer.normals[index++] = joinNormal[0];\n                        geomBuffer.vertices[index] = currentPoint[1];\n                        geomBuffer.normals[index++] = joinNormal[1];\n                        geomBuffer.vertices[index] = currentPoint[0];\n                        geomBuffer.normals[index++] = rightNormal[0];\n                        geomBuffer.vertices[index] = currentPoint[1];\n                        geomBuffer.normals[index++] = rightNormal[1];\n                        geomBuffer.vertices[index] = currentPoint[0];\n                        geomBuffer.normals[index++] = leftNormal[0];\n                        geomBuffer.vertices[index] = currentPoint[1];\n                        geomBuffer.normals[index++] = leftNormal[1];\n                    }\n                }\n            } else {\n                nextNormal = prevNormal;\n            }\n\n            // Update the variables for the next iteration\n            prevPoint = currentPoint;\n            currentPoint = nextPoint;\n            prevNormal = nextNormal;\n        }\n    }\n    return index;\n}\n\n/**\n * Resize a Float32Array buffer in an efficient way\n */\nexport function resizeBuffer (oldBuffer, newSize) {\n    const newBuffer = new Float32Array(newSize);\n    newBuffer.set(oldBuffer);\n    return newBuffer;\n}\n","import { decodePoint } from './pointDecoder';\nimport { decodeLine } from './lineDecoder';\nimport { decodePolygon } from './polygonDecoder';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../errors/carto-runtime-error';\nimport { GEOMETRY_TYPE } from '../../utils/geometry';\n\nexport function decodeGeom (geomType, geom) {\n    switch (geomType) {\n        case GEOMETRY_TYPE.POINT:\n            return decodePoint(geom);\n        case GEOMETRY_TYPE.LINE:\n            return decodeLine(geom);\n        case GEOMETRY_TYPE.POLYGON:\n            return decodePolygon(geom);\n        default:\n            throw new CartoRuntimeError(\n                `Unimplemented geometry type: '${geomType}'.`,\n                CartoRuntimeErrorTypes.NOT_SUPPORTED\n            );\n    }\n}\n","import { addLineString, resizeBuffer } from './common';\n\n// If the geometry type is GEOMETRY_TYPE.LINE it will generate the appropriate zero-sized, vertex-shader expanded triangle list with `miter` and `bevel` joins.\n// The geom will be an array of coordinates in this case\n\nconst STATIC_INITIAL_BUFFER_SIZE = 1024 * 1024; // 4 MB\nconst MAX_VERTICES_COORDINATES_PER_SEGMENT = 24;\n\nlet index = 0;\nlet geomBuffer = {\n    vertices: new Float32Array(STATIC_INITIAL_BUFFER_SIZE),\n    normals: new Float32Array(STATIC_INITIAL_BUFFER_SIZE)\n};\n\nexport function decodeLine (geometry) {\n    let breakpoints = []; // Array of indices (to vertexArray) that separate each feature\n    let featureIDToVertexIndex = new Map();\n\n    index = 0;\n    for (let i = 0; i < geometry.length; i++) {\n        const feature = geometry[i];\n        for (let j = 0; j < feature.length; j++) {\n            // Increase buffers size if required\n            resizeBuffers(MAX_VERTICES_COORDINATES_PER_SEGMENT * feature[j].length);\n\n            // Add line string\n            index = addLineString(feature[j], geomBuffer, index);\n        }\n\n        featureIDToVertexIndex.set(breakpoints.length, breakpoints.length === 0\n            ? { start: 0, end: index }\n            : { start: featureIDToVertexIndex.get(breakpoints.length - 1).end, end: index });\n\n        breakpoints.push(index);\n    }\n\n    const verticesArrayBuffer = new ArrayBuffer(4 * index);\n    const normalsArrayBuffer = new ArrayBuffer(4 * index);\n    const vertices = new Float32Array(verticesArrayBuffer);\n    const normals = new Float32Array(normalsArrayBuffer);\n    for (let i = 0; i < index; i++) {\n        vertices[i] = geomBuffer.vertices[i];\n        normals[i] = geomBuffer.normals[i];\n    }\n    return {\n        vertices,\n        normals,\n        verticesArrayBuffer,\n        normalsArrayBuffer,\n        featureIDToVertexIndex,\n        breakpoints\n    };\n}\n\n// Resize buffers as needed if `additionalSize` floats overflow the current buffers.\nfunction resizeBuffers (additionalSize) {\n    const minimumNeededSize = index + additionalSize;\n    if (minimumNeededSize > geomBuffer.vertices.length) {\n        const newSize = 2 * minimumNeededSize;\n        geomBuffer.vertices = resizeBuffer(geomBuffer.vertices, newSize);\n        geomBuffer.normals = resizeBuffer(geomBuffer.normals, newSize);\n    }\n}\n","// If the geometry type is GEOMETRY_TYPE.POINT it will pass through the geom (the vertex array)\n\nexport function decodePoint (verticesArrayBuffer) {\n    return {\n        verticesArrayBuffer: verticesArrayBuffer,\n        vertices: new Float32Array(verticesArrayBuffer),\n        breakpoints: []\n    };\n}\n","import * as earcut from 'earcut';\nimport { addLineString, resizeBuffer } from './common';\n\n// If the geometry type is GEOMETRY_TYPE.POLYGON it will triangulate the polygon list (geom)\n// geom will be a list of polygons in which each polygon will have a flat array of vertices and a list of holes indices\n// Example:\n/*   let geom = [{\n       flat: [\n         0.,0., 1.,0., 1.,1., 0.,1., 0.,0, //A square\n         0.25,0.25, 0.75,0.25, 0.75,0.75, 0.25,0.75, 0.25,0.25//A small square\n       ]\n       holes: [5]\n     }]\n*/\n\nconst STATIC_INITIAL_BUFFER_SIZE = 1024 * 1024 * 2; // 8 MB\nconst VERTEX_COORDINATES_PER_TRIANGLE = 2;\nconst MAX_VERTICES_COORDINATES_PER_SEGMENT = 24;\n\nlet index = 0;\nlet geomBuffer = {\n    vertices: new Float32Array(STATIC_INITIAL_BUFFER_SIZE),\n    normals: new Float32Array(STATIC_INITIAL_BUFFER_SIZE)\n};\n\nexport function decodePolygon (geometry) {\n    let breakpoints = []; // Array of indices (to vertexArray) that separate each feature\n    let featureIDToVertexIndex = new Map();\n\n    index = 0;\n    for (let i = 0; i < geometry.length; i++) {\n        const feature = geometry[i];\n        for (let j = 0; j < feature.length; j++) {\n            const polygon = feature[j];\n            const triangles = earcut(polygon.flat, polygon.holes);\n\n            // Increase buffers size if required\n            resizeBuffers(VERTEX_COORDINATES_PER_TRIANGLE * triangles.length +\n                MAX_VERTICES_COORDINATES_PER_SEGMENT * polygon.flat.length);\n\n            // Add polygon\n            for (let k = 0; k < triangles.length; k++) {\n                addVertex(polygon.flat, 2 * triangles[k]);\n            }\n\n            // Add polygon stroke\n            index = addLineString(polygon.flat, geomBuffer, index, true, (pointIndex) => {\n                // Skip adding the line which connects two rings OR is clipped\n                return polygon.holes.includes((pointIndex - 2) / 2) || isClipped(polygon, pointIndex - 4, pointIndex - 2);\n            });\n        }\n\n        featureIDToVertexIndex.set(breakpoints.length, breakpoints.length === 0\n            ? { start: 0, end: index }\n            : { start: featureIDToVertexIndex.get(breakpoints.length - 1).end, end: index });\n\n        breakpoints.push(index);\n    }\n\n    const verticesArrayBuffer = new ArrayBuffer(4 * index);\n    const normalsArrayBuffer = new ArrayBuffer(4 * index);\n    const vertices = new Float32Array(verticesArrayBuffer);\n    const normals = new Float32Array(normalsArrayBuffer);\n    for (let i = 0; i < index; i++) {\n        vertices[i] = geomBuffer.vertices[i];\n        normals[i] = geomBuffer.normals[i];\n    }\n    return {\n        vertices,\n        normals,\n        verticesArrayBuffer,\n        normalsArrayBuffer,\n        featureIDToVertexIndex,\n        breakpoints\n    };\n}\n\n// Resize buffers as needed if `additionalSize` floats overflow the current buffers\nfunction resizeBuffers (additionalSize) {\n    const minimumNeededSize = index + additionalSize;\n    if (minimumNeededSize > geomBuffer.vertices.length) {\n        const newSize = 2 * minimumNeededSize;\n        geomBuffer.vertices = resizeBuffer(geomBuffer.vertices, newSize);\n        geomBuffer.normals = resizeBuffer(geomBuffer.normals, newSize);\n    }\n}\n\n// Add vertex in triangles.\nfunction addVertex (array, vertexIndex) {\n    geomBuffer.vertices[index] = array[vertexIndex];\n    geomBuffer.normals[index++] = 0;\n    geomBuffer.vertices[index] = array[vertexIndex + 1];\n    geomBuffer.normals[index++] = 0;\n}\n\nfunction isClipped (polygon, i, j) {\n    if (polygon.clipped.includes(i) && polygon.clipped.includes(j)) {\n        if (polygon.clippedType[polygon.clipped.indexOf(i)] &\n            polygon.clippedType[polygon.clipped.indexOf(j)]) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { AGG_PREFIX, DIM_PREFIX } from '../constants/metadata';\n\nexport const IDENTITY = {};\n\n/*\nconst mns = {\n    price:  [{type: 'unaggregated'}],\n    amount: [{type: 'aggregated', op: 'avg'}, {type: 'aggregated', op: 'max'}}],\n    dow:    [{type: 'dimension', dimension: { group: {units: 'dayOfWeek'}}}]\n};\n\n*/\n\nexport function union (a, b) {\n    const result = {};\n    const propertyNames = new Set(Object.keys(a).concat(Object.keys(b)));\n    propertyNames.forEach(propertyName => {\n        const aUsages = a[propertyName] || [];\n        const bUsages = b[propertyName] || [];\n        const combinedUsage = [...aUsages, ...bUsages];\n        result[propertyName] = combinedUsage;\n    });\n    return result;\n}\n\nexport function equals (a, b) {\n    if (!a || !b) {\n        return false;\n    }\n    return JSON.stringify(simplify(a)) === JSON.stringify(simplify(b));\n}\n\nexport function notEquals (a, b) {\n    return !equals(a, b);\n}\n\nfunction simplify (MNS) {\n    const result = {};\n    const propertyNames = Object.keys(MNS).sort();\n    propertyNames.forEach(propertyName => {\n        // Stringify and Set to remove duplicates\n        let usage = [...new Set(MNS[propertyName].map(u => JSON.stringify(u)))];\n        usage.sort();\n        usage = usage.map(u => JSON.parse(u));\n        result[propertyName] = usage;\n    });\n    return result;\n}\n\n// column information functions\nexport const column = {\n    aggColumn (name, aggFN) {\n        return `${AGG_PREFIX}${aggFN}_${name}`;\n    },\n    dimColumn (name, groupBy) {\n        return `${DIM_PREFIX}${groupBy}_${name}`;\n    }\n};\n\nexport default { column, equals, notEquals, union, IDENTITY, simplify };\n","/**\n * Keep a cacheTo avoid recompiling webgl programs and shaders.\n * We need a different shader per webgl context so we use a 2 level cache where at the first level\n * the webgl context is the key and at the second level the shader code is the cache key.\n */\nexport default class Cache {\n    constructor () {\n        this.caches = new WeakMap();\n    }\n\n    get (gl, shadercode) {\n        if (this.caches.has(gl)) {\n            let cache = this.caches.get(gl);\n\n            return cache[shadercode];\n        }\n    }\n\n    set (gl, shadercode, shader) {\n        if (this.caches.has(gl)) {\n            let cache = this.caches.get(gl);\n            cache[shadercode] = shader;\n        } else {\n            let cache = {};\n            cache[shadercode] = shader;\n            this.caches.set(gl, cache);\n        }\n    }\n\n    has (gl, shadercode) {\n        return this.get(gl, shadercode) !== undefined;\n    }\n}\n","import { compileProgram } from '../../utils';\nimport antialiasingFragmentShader from './antialiasingFragmentShader.glsl';\nimport antialiasingVertexShader from './antialiasingVertexShader.glsl';\n\nexport default class AntiAliasingShader {\n    constructor (gl) {\n        Object.assign(this, compileProgram(gl, antialiasingVertexShader, antialiasingFragmentShader));\n        this.vertexAttribute = gl.getAttribLocation(this.program, 'vertex');\n        this.readTU = gl.getUniformLocation(this.program, 'aaTex');\n    }\n}\n","module.exports = \"precision highp float;\\n\\nvarying  vec2 uv;\\n\\nuniform sampler2D aaTex;\\n\\nvoid main(void) {\\n    vec4 aa = texture2D(aaTex, uv);\\n    gl_FragColor = aa;\\n}\\n\"","module.exports = \"precision highp float;\\nattribute vec2 vertex;\\n\\nvarying  vec2 uv;\\n\\nvoid main(void) {\\n    uv = vertex*0.5+vec2(0.5);\\n    gl_Position = vec4(vertex, 0.5, 1.);\\n}\\n\"","module.exports = \"precision highp float;\\n\\nvarying lowp vec4 color;\\n\\nvoid main(void) {\\n    gl_FragColor = color;\\n}\\n\"","module.exports = \"// Line Vertex Shader\\nprecision highp float;\\n\\nattribute vec2 vertexPosition;\\nattribute vec2 featureID;\\nattribute vec2 normal;\\n\\nuniform float normalScale;\\nuniform vec2 resolution;\\nuniform mat4 matrix;\\n\\nuniform sampler2D colorTex;\\nuniform sampler2D widthTex;\\nuniform sampler2D filterTex;\\n\\nvarying lowp vec4 color;\\n\\nfloat decodeWidth(vec2 enc) {\\n  return enc.x*(255.*4.) + 4.*enc.y;\\n}\\n\\n$propertyPreface\\n$transform_preface\\n\\nvoid main(void) {\\n    color = texture2D(colorTex, featureID);\\n    float filtering = texture2D(filterTex, featureID).a;\\n    color.a *= filtering;\\n    color.rgb *= color.a; // premultiplied-alpha\\n    float size = decodeWidth(texture2D(widthTex, featureID).rg);\\n\\n    // 64 is computed based on RTT_WIDTH and the depth buffer precision\\n    // 64 = 2^(BUFFER_BITS)/RTT_WIDTH = 2^16/1024 = 64\\n    float z = featureID.y * 63. / 64. + featureID.x / (64.);\\n\\n    // Set z range (-1, 1)\\n    z = z * 2. - 1.;\\n\\n    vec2 n = normal*size*normalScale;\\n    vec4 p =  matrix*vec4(vertexPosition+n, 0., 1.);\\n    p/=p.w;\\n\\n    p.xy = $transform_inline(p.xy*resolution)/resolution;\\n    if (size==0. || color.a==0.){\\n        p.x=10000.;\\n    }\\n    p.z=z;\\n    gl_Position  = p;\\n}\\n\"","module.exports = \"precision highp float;\\n\\nvarying lowp vec4 color;\\nvarying lowp vec4 stroke;\\nvarying highp float dp;\\nvarying highp float fillScale;\\nvarying highp float strokeScale;\\nvarying highp vec2 pointCoord;\\n\\nfloat distanceAntialias(vec2 p){\\n    // return length(p) > 1 ? 0. : 1. ; // to disable antialias\\n    return 1. - smoothstep(1.-dp*1.4142, 1.+dp*1.4142, length(p));\\n}\\n\\nvoid main(void) {\\n    vec2 p = pointCoord;\\n    vec4 c = color;\\n\\n    vec4 s = stroke;\\n\\n    c.a *= distanceAntialias(p*fillScale);\\n    c.rgb*=c.a;\\n\\n    s.a *= distanceAntialias(p);\\n    s.a *= 1.-distanceAntialias((strokeScale)*p);\\n    s.rgb*=s.a;\\n\\n    c=s+(1.-s.a)*c;\\n\\n    gl_FragColor = c;\\n}\\n\"","module.exports = \"precision highp float;\\n\\nattribute vec2 vertexPosition;\\nattribute vec2 featureID;\\n\\nuniform float orderMinWidth;\\nuniform float orderMaxWidth;\\nuniform vec2 resolution;\\nuniform mat4 matrix;\\n\\nuniform sampler2D colorTex;\\nuniform sampler2D widthTex;\\nuniform sampler2D strokeColorTex;\\nuniform sampler2D strokeWidthTex;\\nuniform sampler2D filterTex;\\n\\nvarying highp vec4 color;\\nvarying highp vec4 stroke;\\nvarying highp float dp;\\nvarying highp float fillScale;\\nvarying highp float strokeScale;\\nvarying highp vec2 pointCoord;\\n\\nfloat decodeWidth(vec2 enc) {\\n  return enc.x*(255.*4.) + 4.*enc.y;\\n}\\n\\n$propertyPreface\\n$transform_preface\\n\\nvec2 transform(vec2 p){\\n    return $transform_inline(p*resolution*0.5)/resolution*2.;\\n}\\n\\nvoid main(void) {\\n  color = texture2D(colorTex, abs(featureID));\\n  stroke = texture2D(strokeColorTex, abs(featureID));\\n  float filtering = texture2D(filterTex, abs(featureID)).a;\\n  color.a *= filtering;\\n  stroke.a *= filtering;\\n  float size = decodeWidth(texture2D(widthTex, abs(featureID)).rg);\\n  float fillSize = size;\\n  float strokeSize = decodeWidth(texture2D(strokeWidthTex, abs(featureID)).rg);\\n  size += strokeSize;\\n  fillScale = min(size / fillSize, 1.);\\n  strokeScale = size / max(0.001, (fillSize - strokeSize));\\n  if (fillScale == strokeScale) {\\n    stroke.a = 0.;\\n  }\\n  dp = 1.0 / (size + 1.);\\n  float sizeNormalizer = (size +1.)/size;\\n\\n  vec4 p =  matrix*vec4(vertexPosition, 0., 1.);\\n  p/=p.w;\\n  vec2 size2 = (2.*size+4.)/resolution;\\n\\n    if (featureID.y<0.){\\n        pointCoord = vec2(0.866025, -0.5)*2.*sizeNormalizer;\\n        p.xy += transform(size2*vec2(0.866025, -0.5));\\n    }else if (featureID.x<0.){\\n        pointCoord = vec2(-0.866025, -0.5)*2.*sizeNormalizer;\\n        p.xy += transform(size2*vec2(-0.866025, -0.5));\\n    }else{\\n        pointCoord = vec2(0., 1.)*2.*sizeNormalizer;\\n        p.xy += transform(vec2(0.,size2.y));\\n    }\\n\\n  if (size == 0. || (stroke.a == 0. && color.a == 0.) || size < orderMinWidth || size >= orderMaxWidth) {\\n    p.z = p.w*2.;\\n  }\\n\\n  gl_Position = p;\\n}\\n\"","module.exports = \"precision lowp float;\\n\\nvarying lowp vec4 color;\\n\\nvoid main(void) {\\n    gl_FragColor = color;\\n}\\n\"","module.exports = \"precision mediump float;\\n\\nattribute vec2 vertexPosition;\\nattribute vec2 featureID;\\nattribute vec2 normal;\\n\\nuniform float normalScale;\\nuniform vec2 resolution;\\n\\nuniform sampler2D colorTex;\\nuniform sampler2D strokeColorTex;\\nuniform sampler2D strokeWidthTex;\\nuniform sampler2D filterTex;\\nuniform mat4 matrix;\\n\\nvarying lowp vec4 color;\\n\\nfloat decodeWidth(vec2 enc) {\\n  return enc.x*(255.*4.) + 4.*enc.y;\\n}\\n\\n$propertyPreface\\n$transform_preface\\n\\nvoid main(void) {\\n    // 64 is computed based on RTT_WIDTH and the depth buffer precision\\n    // 64 = 2^(BUFFER_BITS)/RTT_WIDTH = 2^16/1024 = 64\\n    float z = featureID.y * 63. / 64. + featureID.x / 64.;\\n\\n    vec4 c;\\n    if (normal == vec2(0.)){\\n        c = texture2D(colorTex, featureID);\\n    }else{\\n        z = mod(z + (z > 0.5 ? -1./64. : 1./64.), 1.);\\n        c = texture2D(strokeColorTex, featureID);\\n    }\\n    z = 2.*z - 1.;\\n    float filtering = texture2D(filterTex, featureID).a;\\n    c.a *= filtering;\\n    float size = decodeWidth(texture2D(strokeWidthTex, featureID).rg);\\n\\n    vec2 n = normal*size*normalScale;\\n    vec4 p =  matrix*vec4(vertexPosition+n, 0., 1.);\\n    p/=p.w;\\n\\n    p.xy = $transform_inline(p.xy*resolution*0.5)/resolution*2.;\\n\\n    if (c.a==0.){\\n        p.x=10000.;\\n    }\\n    p.z=z;\\n    color = vec4(c.rgb*c.a, c.a);\\n    gl_Position  = p;\\n}\\n\"","import AntiAliasingShader from './common/antialiasing/AntiAliasingShader';\nimport * as styler from './styler/stylerShaders';\nimport * as symbolizer from './symbolizer/symbolizerShaders';\n\nconst AABlender = AntiAliasingShader;\n\nexport { styler, symbolizer, AABlender };\n\nexport default {\n    styler,\n    symbolizer,\n    AABlender\n};\n","import { createShaderFromTemplate } from './utils';\n\nclass IDGenerator {\n    constructor () {\n        this._ids = new Map();\n    }\n\n    getID (expression) {\n        if (this._ids.has(expression)) {\n            return this._ids.get(expression);\n        }\n        const id = this._ids.size;\n        this._ids.set(expression, id);\n        return id;\n    }\n}\n\nexport function compileShader (gl, template, expressions) {\n    let tid = {};\n    const getPropertyAccessCode = name => {\n        if (tid[name] === undefined) {\n            tid[name] = Object.keys(tid).length;\n        }\n        return `texture2D(propertyTex${tid[name]}, abs(featureID)).a`;\n    };\n\n    let codes = {};\n\n    const idGen = new IDGenerator();\n\n    Object.keys(expressions).forEach(exprName => {\n        const expr = expressions[exprName];\n        expr._setUID(idGen);\n        const exprCodes = expr._applyToShaderSource(getPropertyAccessCode);\n        codes[exprName + '_preface'] = exprCodes.preface;\n        codes[exprName + '_inline'] = exprCodes.inline;\n    });\n\n    codes.propertyPreface = Object.keys(tid).map(name => `uniform sampler2D propertyTex${tid[name]};`).join('\\n');\n\n    const shader = createShaderFromTemplate(gl, template, codes);\n\n    Object.keys(tid).map(name => {\n        tid[name] = gl.getUniformLocation(shader.program, `propertyTex${tid[name]}`);\n    });\n\n    Object.values(expressions).forEach(expr => {\n        expr._postShaderCompile(shader.program, gl);\n    });\n\n    return {\n        shader,\n        textureIds: tid,\n        _codes: codes,\n        _template: template\n    };\n}\n","module.exports = \"vec2 encodeWidth(float x) {\\n    if (!(x<=0. || x>=0.) ){\\n        // Convert NaN widths to `0`\\n        // Do not remove this, some GPUs will convert NaN floats to 1. when\\n        // packing the shader output to a RGBA UNSIGNED BYTE textures\\n        x = 0.;\\n    }\\n    float high, low;\\n    x = clamp(x, 0., 1023.);\\n    high = floor(x/4.);\\n    low = (x-high*4.)/4.;\\n    return vec2(high/255., low);\\n}\\n\\n$width_preface\\n\"","module.exports = \"precision highp float;\\n\\nvarying vec2 uv;\\n\\nvec2 featureID;\\n\\n$propertyPreface\\n$style_preface\\n\\nvoid main(void) {\\n    featureID = abs(uv);\\n    gl_FragColor = $style_inline;\\n}\\n\"","import stylerEncodeWidth from './stylerEncodeWidth.glsl';\nimport stylerFragmentShader from './stylerFragmentShader.glsl';\nimport stylerVertexShader from './stylerVertexShader.glsl';\n\nexport const colorShaderGLSL = {\n    vertexShader: `${stylerVertexShader}`,\n    fragmentShader: `${stylerFragmentShader}`\n        .replace('$style_inline', '$color_inline')\n        .replace('$style_preface', '$color_preface')\n};\n\nexport const filterShaderGLSL = {\n    vertexShader: `${stylerVertexShader}`,\n    fragmentShader: `${stylerFragmentShader}`\n        .replace('$style_inline', 'vec4($filter_inline)')\n        .replace('$style_preface', '$filter_preface')\n};\n\nexport const widthShaderGLSL = {\n    vertexShader: `${stylerVertexShader}`,\n    fragmentShader: `${stylerFragmentShader}`\n        .replace('$style_inline', 'vec4(encodeWidth($width_inline), vec2(0.))')\n        .replace('$style_preface', `${stylerEncodeWidth}`)\n};\n","module.exports = \"precision highp float;\\nattribute vec2 vertex;\\n\\nvarying  vec2 uv;\\n\\nvoid main(void) {\\n    uv = vertex*0.5+vec2(0.5);\\n    gl_Position = vec4(vertex, 0.5, 1.);\\n}\\n\"","module.exports = \"precision highp float;\\n\\nvarying highp vec2 featureIDVar;\\nvarying highp vec4 color;\\nvarying highp vec2 pointCoord;\\nvarying highp float filtering;\\n\\n$symbol_preface\\n$propertyPreface\\n\\nvoid main(void) {\\n    vec2 featureID = abs(featureIDVar);\\n    vec2 imageUV = pointCoord;\\n    imageUV.x = imageUV.x * 0.5 + 0.5;\\n    vec4 symbolColor = $symbol_inline;\\n    vec4 noOverrideColor = vec4(1., 1., 1., 0.);\\n\\n    vec4 c;\\n    if (color != noOverrideColor){\\n        c = color * vec4(vec3(1), symbolColor.a);\\n    }else{\\n        c = symbolColor;\\n    }\\n    c.a *= filtering;\\n    if (imageUV!=clamp(imageUV, 0.,1.)){\\n        c.a = 0.;\\n    }\\n\\n    gl_FragColor = vec4(c.rgb*c.a, c.a);\\n}\\n\"","import symbolizerFragmentShader from './symbolizerFragmentShader.glsl';\nimport symbolizerVertexShader from './symbolizerVertexShader.glsl';\n\nexport const symbolShaderGLSL = {\n    vertexShader: `${symbolizerVertexShader}`,\n    fragmentShader: `${symbolizerFragmentShader}`\n};\n","module.exports = \"precision highp float;\\n\\nattribute vec2 vertexPosition;\\nattribute vec2 featureID;\\n\\nuniform float orderMinWidth;\\nuniform float orderMaxWidth;\\nuniform float devicePixelRatio;\\nuniform vec2 resolution;\\nuniform mat4 matrix;\\n\\nuniform sampler2D colorTex;\\nuniform sampler2D widthTex;\\nuniform sampler2D filterTex;\\n\\nvarying highp vec2 featureIDVar;\\nvarying highp vec4 color;\\nvarying highp vec2 pointCoord;\\nvarying highp float filtering;\\n\\nfloat decodeWidth(vec2 enc) {\\n  return enc.x*(255.*4.) + 4.*enc.y;\\n}\\n\\n$symbolPlacement_preface\\n$propertyPreface\\n$transform_preface\\n\\nvec2 transform(vec2 p){\\n    return $transform_inline(2.*p)/resolution;\\n}\\n\\n// We'll need a square inscribed in a triangle\\n// The triangle will be equilateral\\n// The square side length will be equal to 1\\n// Each triangle edge length will be equal to 1+2*A (by definition of A)\\n// The triangle height will be equal to H by definition\\n// The square inscription will generate 3 smaller triangles\\n// Each one of these will have an hypotenuse equal to Y\\n//\\n// Therefore:\\n// Y*sin(60) = 1  =>  Y = 2 / sqrt(3)\\n// A=Y*cos(60)    =>  A = 1 / sqrt(3)\\n// tan(60) = H / (0.5 + A)   =>  H = sqrt(3)*(0.5 + 1 / sqrt(3))\\n#define A (0.577350269189625)\\n#define H (1.86603)\\n\\nvoid main(void) {\\n    featureIDVar = abs(featureID);\\n    color = texture2D(colorTex, abs(featureID));\\n    filtering = texture2D(filterTex, abs(featureID)).a;\\n\\n    float size = decodeWidth(texture2D(widthTex, abs(featureID)).rg);\\n\\n    vec4 p =  matrix*vec4(vertexPosition, 0., 1.);\\n    p/=p.w;\\n\\n    if (featureID.y<0.){\\n        pointCoord = vec2((0.5+A)/(0.5), 0.);\\n        p.xy += transform(size*vec2(0.5+A, -H/2. + (H/2. - 0.5) ));\\n    }else if (featureID.x<0.){\\n        pointCoord = vec2(-(0.5+A)/(0.5), 0.);\\n        p.xy += transform(size*vec2(-(0.5+A), -H/2. + (H/2. - 0.5)));\\n    }else{\\n        pointCoord = vec2(0., H);\\n        p.xy += transform(size*vec2(0., H/2. + (H/2. - 0.5)));\\n    }\\n    pointCoord.y = 1.-pointCoord.y;\\n\\n\\n    p.xy += ($symbolPlacement_inline)*size/resolution;\\n\\n\\n    vec4 noOverrideColor = vec4(1., 1., 1., 0.);\\n    bool alphaButNotOverrideColor = (color.a==0. && color != noOverrideColor);\\n\\n    if (size==0. || alphaButNotOverrideColor || size<orderMinWidth || size>=orderMaxWidth){\\n        p.x=10000.;\\n    }\\n\\n    gl_Position  = p;\\n}\\n\"","import Cache from './Cache';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../errors/carto-runtime-error';\n\nlet programID = 1;\nconst shaderCache = new Cache();\nconst programCache = new Cache();\n\n/**\n * Compile a webgl program.\n * Use a cache to improve speed.\n *\n * @param {WebGLRenderingContext} gl - The context where the program will be executed\n * @param {String} glslvertexShader - vertex shader code\n * @param {String} glslfragmentShader - fragment shader code\n */\nexport function compileProgram (gl, glslvertexShader, glslfragmentShader) {\n    const code = glslvertexShader + glslfragmentShader;\n\n    if (programCache.has(gl, code)) {\n        return programCache.get(gl, code);\n    }\n\n    const shader = {};\n    const vertexShader = _compileShader(gl, glslvertexShader, gl.VERTEX_SHADER);\n    const fragmentShader = _compileShader(gl, glslfragmentShader, gl.FRAGMENT_SHADER);\n\n    shader.program = gl.createProgram();\n\n    gl.attachShader(shader.program, vertexShader);\n    gl.attachShader(shader.program, fragmentShader);\n    gl.linkProgram(shader.program);\n    gl.deleteShader(vertexShader);\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getProgramParameter(shader.program, gl.LINK_STATUS)) {\n        throw new CartoRuntimeError(`Unable to link the shader program: ${gl.getProgramInfoLog(shader.program)}.`, CartoRuntimeErrorTypes.WEB_GL);\n    }\n\n    shader.programID = programID++;\n    programCache.set(gl, code, shader);\n\n    return shader;\n}\n\nfunction _compileShader (gl, sourceCode, type) {\n    if (shaderCache.has(gl, sourceCode)) {\n        return shaderCache.get(gl, sourceCode);\n    }\n\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, sourceCode);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        const log = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new CartoRuntimeError(`An error occurred compiling the shaders: ${log}\\nSource:\\n${sourceCode}`, CartoRuntimeErrorTypes.WEB_GL);\n    }\n\n    shaderCache.set(gl, sourceCode, shader);\n\n    return shader;\n}\n\nexport function createShaderFromTemplate (gl, glslTemplate, codes) {\n    let vertexShader = glslTemplate.vertexShader;\n    let fragmentShader = glslTemplate.fragmentShader;\n\n    Object.keys(codes).forEach(codeName => {\n        vertexShader = vertexShader.replace('$' + codeName, codes[codeName]);\n        fragmentShader = fragmentShader.replace('$' + codeName, codes[codeName]);\n    });\n\n    const shader = compileProgram(gl, vertexShader, fragmentShader);\n\n    shader.vertexPositionAttribute = gl.getAttribLocation(shader.program, 'vertexPosition');\n    shader.featureIdAttr = gl.getAttribLocation(shader.program, 'featureID');\n    shader.normalAttr = gl.getAttribLocation(shader.program, 'normal');\n\n    shader.colorTexture = gl.getUniformLocation(shader.program, 'colorTex');\n    shader.strokeColorTexture = gl.getUniformLocation(shader.program, 'strokeColorTex');\n    shader.strokeWidthTexture = gl.getUniformLocation(shader.program, 'strokeWidthTex');\n    shader.widthTexture = gl.getUniformLocation(shader.program, 'widthTex');\n    shader.orderMinWidth = gl.getUniformLocation(shader.program, 'orderMinWidth');\n    shader.orderMaxWidth = gl.getUniformLocation(shader.program, 'orderMaxWidth');\n    shader.filterTexture = gl.getUniformLocation(shader.program, 'filterTex');\n    shader.normalScale = gl.getUniformLocation(shader.program, 'normalScale');\n    shader.resolution = gl.getUniformLocation(shader.program, 'resolution');\n    shader.matrix = gl.getUniformLocation(shader.program, 'matrix');\n\n    return shader;\n}\n","import { clamp } from './expressions/utils';\n\nexport function sRGBToCielab (srgb) {\n    return XYZToCieLab(sRGBToXYZ(srgb));\n}\nexport function cielabToSRGB (cielab) {\n    return XYZToSRGB(cielabToXYZ(cielab));\n}\n\nexport function interpolateRGBAinCieLAB (rgbColorA, rgbColorB, m) {\n    const cielabColorA = sRGBToCielab({\n        r: rgbColorA.r / 255,\n        g: rgbColorA.g / 255,\n        b: rgbColorA.b / 255,\n        a: rgbColorA.a\n    });\n\n    const cielabColorB = sRGBToCielab({\n        r: rgbColorB.r / 255,\n        g: rgbColorB.g / 255,\n        b: rgbColorB.b / 255,\n        a: rgbColorB.a\n    });\n\n    const cielabInterpolated = {\n        l: (1 - m) * cielabColorA.l + m * cielabColorB.l,\n        a: (1 - m) * cielabColorA.a + m * cielabColorB.a,\n        b: (1 - m) * cielabColorA.b + m * cielabColorB.b,\n        alpha: (1 - m) * cielabColorA.alpha + m * cielabColorB.alpha\n    };\n\n    const rgbaColor = cielabToSRGB(cielabInterpolated);\n\n    return {\n        r: Math.round(rgbaColor.r * 255),\n        g: Math.round(rgbaColor.g * 255),\n        b: Math.round(rgbaColor.b * 255),\n        a: rgbaColor.a\n    };\n}\n\n// Following functionality has been inspired by http://www.getreuer.info/home/colorspace\n// License:\n/*\nLicense (BSD)\nCopyright © 2005–2010, Pascal Getreuer\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U\n*/\n\n// Convert sRGB to CIE XYZ with the D65 white point\nfunction sRGBToXYZ (srgb) {\n    // Poynton, \"Frequently Asked Questions About Color,\" page 10\n    // Wikipedia: http://en.wikipedia.org/wiki/SRGB\n    // Wikipedia: http://en.wikipedia.org/wiki/CIE_1931_color_space\n    const { r, g, b, a } = sRGBToLinearRGB(srgb);\n    return {\n        x: (0.4123955889674142161 * r + 0.3575834307637148171 * g + 0.1804926473817015735 * b),\n        y: (0.2125862307855955516 * r + 0.7151703037034108499 * g + 0.07220049864333622685 * b),\n        z: (0.01929721549174694484 * r + 0.1191838645808485318 * g + 0.9504971251315797660 * b),\n        a\n    };\n}\n\nfunction sRGBToLinearRGB ({ r, g, b, a }) {\n    // http://en.wikipedia.org/wiki/SRGB\n    const inverseGammaCorrection = t =>\n        t <= 0.0404482362771076 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4);\n    return {\n        r: inverseGammaCorrection(r),\n        g: inverseGammaCorrection(g),\n        b: inverseGammaCorrection(b),\n        a\n    };\n}\nfunction linearRGBToSRGB ({ r, g, b, a }) {\n    // http://en.wikipedia.org/wiki/SRGB\n    const gammaCorrection = t =>\n        t <= 0.0031306684425005883 ? 12.92 * t : 1.055 * Math.pow(t, 0.416666666666666667) - 0.055;\n    return {\n        r: gammaCorrection(r),\n        g: gammaCorrection(g),\n        b: gammaCorrection(b),\n        a\n    };\n}\n\nconst WHITEPOINT_D65_X = 0.950456;\nconst WHITEPOINT_D65_Y = 1.0;\nconst WHITEPOINT_D65_Z = 1.088754;\n\n// Convert CIE XYZ to CIE L*a*b* (CIELAB) with the D65 white point\nfunction XYZToCieLab ({ x, y, z, a }) {\n    // Wikipedia: http://en.wikipedia.org/wiki/Lab_color_space\n\n    const xn = WHITEPOINT_D65_X;\n    const yn = WHITEPOINT_D65_Y;\n    const zn = WHITEPOINT_D65_Z;\n\n    const f = t =>\n        t >= 8.85645167903563082e-3\n            ? Math.pow(t, 0.333333333333333) : (841.0 / 108.0) * t + 4.0 / 29.0;\n\n    return {\n        l: 116 * f(y / yn) - 16,\n        a: 500 * (f(x / xn) - f(y / yn)),\n        b: 200 * (f(y / yn) - f(z / zn)),\n        alpha: a\n    };\n}\n\n// Convert CIE XYZ to sRGB with the D65 white point\nfunction XYZToSRGB ({ x, y, z, a }) {\n    // Poynton, \"Frequently Asked Questions About Color,\" page 10\n    // Wikipedia: http://en.wikipedia.org/wiki/SRGB\n    // Wikipedia: http://en.wikipedia.org/wiki/CIE_1931_color_space\n\n    // Convert XYZ to linear RGB\n    const r = clamp(3.2406 * x - 1.5372 * y - 0.4986 * z, 0, 1);\n    const g = clamp(-0.9689 * x + 1.8758 * y + 0.0415 * z, 0, 1);\n    const b = clamp(0.0557 * x - 0.2040 * y + 1.0570 * z, 0, 1);\n\n    return linearRGBToSRGB({ r, g, b, a });\n}\n\n// Convert CIE L*a*b* (CIELAB) to CIE XYZ with the D65 white point\nfunction cielabToXYZ ({ l, a, b, alpha }) {\n    // Wikipedia: http://en.wikipedia.org/wiki/Lab_color_space\n\n    const f = t =>\n        ((t >= 0.206896551724137931)\n            ? ((t) * (t) * (t)) : (108.0 / 841.0) * ((t) - (4.0 / 29.0)));\n\n    return {\n        x: WHITEPOINT_D65_X * f((l + 16) / 116 + a / 500),\n        y: WHITEPOINT_D65_Y * f((l + 16) / 116),\n        z: WHITEPOINT_D65_Z * f((l + 16) / 116 - b / 200),\n        a: alpha\n    };\n}\n","const DEFAULT_SYMBOLS_URL = 'https://libs.cartocdn.com/carto-vl/assets/symbols';\n\nconst bicycle = `${DEFAULT_SYMBOLS_URL}/bicycle.svg`;\nconst building = `${DEFAULT_SYMBOLS_URL}/building.svg`;\nconst bus = `${DEFAULT_SYMBOLS_URL}/bus.svg`;\nconst car = `${DEFAULT_SYMBOLS_URL}/car.svg`;\nconst circle = `${DEFAULT_SYMBOLS_URL}/circle.svg`;\nconst circleOutline = `${DEFAULT_SYMBOLS_URL}/circleOutline.svg`;\nconst cross = `${DEFAULT_SYMBOLS_URL}/cross.svg`;\nconst house = `${DEFAULT_SYMBOLS_URL}/house.svg`;\nconst flag = `${DEFAULT_SYMBOLS_URL}/flag.svg`;\nconst marker = `${DEFAULT_SYMBOLS_URL}/marker.svg`;\nconst markerOutline = `${DEFAULT_SYMBOLS_URL}/markerOutline.svg`;\nconst plus = `${DEFAULT_SYMBOLS_URL}/plus.svg`;\nconst square = `${DEFAULT_SYMBOLS_URL}/square.svg`;\nconst squareOutline = `${DEFAULT_SYMBOLS_URL}/squareOutline.svg`;\nconst star = `${DEFAULT_SYMBOLS_URL}/star.svg`;\nconst starOutline = `${DEFAULT_SYMBOLS_URL}/starOutline.svg`;\nconst triangle = `${DEFAULT_SYMBOLS_URL}/triangle.svg`;\nconst triangleOutline = `${DEFAULT_SYMBOLS_URL}/triangleOutline.svg`;\n\nexport default {\n    bicycle,\n    building,\n    bus,\n    car,\n    circle,\n    circleOutline,\n    cross,\n    house,\n    flag,\n    marker,\n    markerOutline,\n    plus,\n    square,\n    squareOutline,\n    star,\n    starOutline,\n    triangle,\n    triangleOutline\n};\n","/**\n *  Expressions are used to define visualizations, a visualization (viz) is a set named properties and variables and its corresponding values: expressions.\n *  A viz has the following properties:\n *\n *  - **color**: fill color of points and polygons and color of lines\n *  - **strokeColor**: stroke/border color of points and polygons, not applicable to lines\n *  - **width**: fill diameter of points, thickness of lines, not applicable to polygons\n *  - **strokeWidth**: stroke width of points and polygons, not applicable to lines\n *  - **filter**: filter features by removing from rendering and interactivity all the features that don't pass the test.\n *  - **symbol** - show an image instead in the place of points\n *  - **symbolPlacement** - when using `symbol`, offset to apply to the image\n *  - **order**: - rendering order of the features, only applicable to points. See {@link carto.expressions.asc}, {@link carto.expressions.desc} and {@link carto.expressions.noOrder}\n *  - **resolution**: - resolution of the property-aggregation functions, only applicable to points. Default resolution is 1. Custom values must be greater than 0 and lower than 256. A resolution of N means points are aggregated to grid cells NxN pixels. Unlinke {@link https://carto.com/developers/torque-js/guides/how-spatial-aggregation-works/|Torque resolution}, the aggregated points are placed in the centroid of the cluster, not in the center of the grid cell.\n *\n * For example the point diameter could be using the `add` expression:\n *\n * ```javascript\n * const viz = new carto.Viz({\n *   width: carto.expressions.add(5, 5)  // Equivalent to `width: 10`\n * });\n * ```\n *\n * You can use dataset properties inside expressions. Imagine we are representing cities in a map,\n * we can make the point width proportional to the population using the `property`/`prop` expression.\n *\n * ```javascript\n * const viz = new carto.Viz({\n *   width: carto.expressions.prop('population')\n * });\n * ```\n *\n * Multiple expressions can be combined to form more powerful ones,\n * for example lets divide the population between a number using the `div` expression to make points smaller:\n *\n * ```javascript\n * const s = carto.expressions; // We use this alias along documentation.\n * const viz = new carto.Viz({\n *   width: s.div(\n *     s.prop('population'),\n *     10000\n *  )\n * });\n * ```\n *\n * All these expressions can be used also in a String API form. This API is a more compact way to create and use expressions.\n * It has shortcut notation to access your feature properties using the `$` symbol. It also allows inline comments using the JavaScript syntax.\n *\n * ```javascript\n * const viz = new carto.Viz(`\n *   width: $population / 10000  // Size proportional to the population for each feature\n * `);\n * ```\n *\n * Although the combination of expressions is very powerful, you must be aware of the different types to produce valid combinations.\n * For example, the previous example is valid since we assumed that 'population' is a numeric property, it won't be valid if\n * it was a categorical property. Each expression defines some restrictions regarding their parameters, particularly, the\n * type of their parameters.\n *\n * The most important types are:\n *  - **Number** expression. Expressions that contains numbers, both integers and floating point numbers. Boolean types are emulated by this type, being 0 false, and 1 true.\n *  - **Category** expression. Expressions that contains categories. Categories can have a limited set of values, like the country or the region of a feature.\n *  - **Color** expression. Expressions that contains colors. An alpha or transparency channel is included in this type.\n *\n * @namespace carto.expressions\n * @api\n */\n\n/**\n * Depending on the output, each expression has a different type\n *\n * @namespace Types\n * @api\n */\n\n/**\n * Type of Numeric Expressions.\n *\n * Associated to expressions that return is an integer or float. When these expressions are evaluated it should return a JavaScript number.\n *\n * JavaScript numbers are automatically converted to Numeric Expressions.\n *\n * @typedef {} Number\n * @name Number\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Category Expressions.\n *\n * Associated to expressions that return is a category string. When these expressions are evaluated it should return a JavaScript string.\n *\n * JavaScript strings are automatically converted to Category Expressions.\n *\n * @typedef {} Category\n * @name Category\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Color Expressions.\n *\n * Associated to expressions that return a color. When these expressions are evaluated it should return a RGBA object like:\n *\n * ```\n * { r: 255, g: 255, b: 255, a: 1.0 }\n * ```\n *\n * @typedef {} Color\n * @name Color\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Date Expressions.\n *\n * @typedef {} Date\n * @name Date\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Fade Expressions.\n *\n * @typedef {} Fade\n * @name Fade\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Palette Expressions.\n *\n * More information in {@link carto.expressions.palettes|carto.expressions.palettes}.\n *\n * @typedef {} Palette\n * @name Palette\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Image Expressions.\n *\n * More information in {@link carto.expressions.image|carto.expressions.image}.\n *\n * @typedef {} Image\n * @name Image\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Transformation expressions.\n *\n * More information in {@link carto.expressions.rotate|carto.expressions.rotate} and {@link carto.expressions.translate|carto.expressions.translate} expressions.\n *\n * @typedef {} Transformation\n * @name Transformation\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Placement expressions.\n *\n * More information in {@link carto.expressions.placement|carto.expressions.placement} expression.\n *\n * @typedef {} Placement\n * @name Placement\n * @memberof Types\n * @api\n */\n\n/**\n * Type of Ordered Expressions.\n *\n * Order expressions are {@link carto.expressions.asc|carto.expressions.asc}, {@link carto.expressions.desc|carto.expressions.desc} and {@link carto.expressions.noOrder|carto.expressions.noOrder}.\n *\n * @typedef {} Order\n * @name Order\n * @memberof Types\n * @api\n */\n\n/**\n * @namespace Constants\n * @api\n *\n*/\n\n/**\n * Constant FALSE value. Equivalent to `carto.expressions.constant(0)`\n *\n * @name FALSE\n * @memberof Constants\n * @api\n*/\n\n/**\n * Constant TRUE value. Equivalent to `carto.expressions.constant(1)`\n *\n * @name TRUE\n * @memberof Constants\n * @api\n*/\n\n/**\n * Constant ALIGN_CENTER translation. Equivalent to `carto.expressions.translate(0, 0)`.\n * Read more about translation in {@link carto.expressions.translate|carto.expressions.translate}\n *\n * @name ALIGN_CENTER\n * @memberof Constants\n * @api\n*/\n\n/**\n * Constant ALIGN_BOTTOM translation. Equivalent to `carto.expressions.translate(0, 1)`.\n * Read more about translation in {@link carto.expressions.translate|carto.expressions.translate}\n *\n * @name ALIGN_BOTTOM\n * @memberof Constants\n * @api\n*/\n\n/**\n * Constant PI number.\n *\n * @name PI\n * @memberof Constants\n * @api\n*/\n\n/**\n * Constant E number.\n *\n * @name E\n * @memberof Constants\n * @api\n*/\n\n/**\n * Constant HOLD number. Max Safe Integer number to be used to \"hold\" the Fade expression.\n * Read more about fading in {@link carto.expressions.fade|carto.expressions.fade}\n *\n * @name HOLD\n * @memberof Constants\n * @api\n*/\n\n/**\n * @namespace Icons\n * @api\n *\n*/\n\n/**\n * Constant BICYCLE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name BICYCLE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant BUILDING icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name BUILDING\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant BUS icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name BUS\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant CAR icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name CAR\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant CIRCLE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name CIRCLE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant CIRCLE_OUTLINE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name CIRCLE_OUTLINE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant CROSS icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name CROSS\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant FLAG icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name FLAG\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant HOUSE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name HOUSE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant MARKER icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name MARKER\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant MARKER_OUTLINE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name MARKER_OUTLINE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant SQUARE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name SQUARE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant SQUARE_OUTLINE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name SQUARE_OUTLINE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant STAR icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name STAR\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant STAR_OUTLINE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name STAR_OUTLINE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant TRIANGLE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name TRIANGLE\n * @memberof Icons\n * @api\n*/\n\n/**\n * Constant TRIANGLE_OUTLINE icon.\n * Read more about how to use constant icons in {@link carto.expressions.image|carto.expressions.image}.\n * They can also be used in an array, as it is shown in {@link carto.expressions.ramp|carto.expressions.ramp}.\n * There is a list with all the default {@link icons.showcase|icons} available.\n *\n * @name TRIANGLE_OUTLINE\n * @memberof Icons\n * @api\n*/\n\nimport Transition from './expressions/transition';\n\nimport { In } from './expressions/belongs';\nimport { Nin } from './expressions/belongs';\n\nimport Between from './expressions/between';\n\n// Binary Operations\nimport Add from './expressions/binary/Add';\nimport And from './expressions/binary/And';\nimport Div from './expressions/binary/Div';\nimport Equals from './expressions/binary/Equals';\nimport GreaterThan from './expressions/binary/GreaterThan';\nimport GreaterThanOrEqualTo from './expressions/binary/GreaterThanOrEqualTo';\nimport LessThan from './expressions/binary/LessThan';\nimport LessThanOrEqualTo from './expressions/binary/LessThanOrEqualTo';\nimport Mod from './expressions/binary/Mod';\nimport Mul from './expressions/binary/Mul';\nimport NotEquals from './expressions/binary/NotEquals';\nimport Or from './expressions/binary/Or';\nimport Pow from './expressions/binary/Pow';\nimport Sub from './expressions/binary/Sub';\n\nimport Blend from './expressions/blend';\n\nimport Buckets from './expressions/buckets';\n\nimport BaseCategory from './expressions/basic/category';\n\nimport CIELab from './expressions/color/CIELab';\n\nimport ClusterAvg from './expressions/aggregation/cluster/ClusterAvg';\nimport ClusterMax from './expressions/aggregation/cluster/ClusterMax';\nimport ClusterMin from './expressions/aggregation/cluster/ClusterMin';\nimport ClusterMode from './expressions/aggregation/cluster/ClusterMode';\nimport ClusterSum from './expressions/aggregation/cluster/ClusterSum';\nimport ClusterCount from './expressions/aggregation/cluster/ClusterCount';\n\nimport ClusterTime from './expressions/aggregation/cluster/ClusterTime';\n\nimport Constant from './expressions/basic/constant';\n\nimport Hex from './expressions/color/hex';\n\nimport { HSL } from './expressions/color/hsl';\nimport { HSLA } from './expressions/color/hsl';\n\nimport { HSV } from './expressions/color/hsv';\nimport { HSVA } from './expressions/color/hsv';\n\nimport { Cubic } from './expressions/interpolators';\nimport { ILinear } from './expressions/interpolators';\n\nimport Linear from './expressions/linear';\n\nimport NamedColor from './expressions/color/NamedColor';\n\nimport Now from './expressions/now';\n\nimport BaseNumber from './expressions/basic/number';\n\nimport Opacity from './expressions/color/Opacity';\n\nimport { Asc } from './expressions/ordering';\nimport { Desc } from './expressions/ordering';\nimport { NoOrder } from './expressions/ordering';\nimport { Width } from './expressions/ordering';\n\nimport palettes from './expressions/color/palettes';\nimport Reverse from './expressions/reverse/Reverse';\n\nimport Property from './expressions/basic/property';\n\nimport GlobalEqIntervals from './expressions/classification/GlobalEqIntervals';\nimport GlobalQuantiles from './expressions/classification/GlobalQuantiles';\nimport GlobalStandardDev from './expressions/classification/GlobalStandardDev';\n\nimport ViewportEqIntervals from './expressions/classification/ViewportEqIntervals';\nimport ViewportQuantiles from './expressions/classification/ViewportQuantiles';\nimport ViewportStandardDev from './expressions/classification/ViewportStandardDev';\n\nimport Ramp from './expressions/Ramp';\nimport List from './expressions/basic/List';\n\nimport { RGB } from './expressions/color/rgb';\nimport { RGBA } from './expressions/color/rgb';\n\nimport Time from './expressions/time';\nimport TimeRangeExpr from './expressions/timeRange';\n\nimport Top from './expressions/top';\n\nimport { Fade } from './expressions/Fade';\nimport { Animation } from './expressions/Animation';\n\nimport { Log } from './expressions/unary';\nimport { Sqrt } from './expressions/unary';\nimport { Sin } from './expressions/unary';\nimport { Cos } from './expressions/unary';\nimport { Tan } from './expressions/unary';\nimport { Sign } from './expressions/unary';\nimport { Abs, IsNull } from './expressions/unary';\nimport { Not } from './expressions/unary';\nimport { Floor } from './expressions/unary';\nimport { Ceil } from './expressions/unary';\n\nimport variableFn from './expressions/basic/variable';\n\nimport ViewportAvg from './expressions/aggregation/viewport/ViewportAvg';\nimport ViewportMax from './expressions/aggregation/viewport/ViewportMax';\nimport ViewportMin from './expressions/aggregation/viewport/ViewportMin';\nimport ViewportSum from './expressions/aggregation/viewport/ViewportSum';\nimport ViewportCount from './expressions/aggregation/viewport/ViewportCount';\nimport ViewportPercentile from './expressions/aggregation/viewport/ViewportPercentile';\nimport ViewportHistogram from './expressions/histogram/ViewportHistogram';\nimport GlobalHistogram from './expressions/histogram/GlobalHistogram';\nimport ViewportFeatures from './expressions/viewportFeatures';\n\nimport GlobalAvg from './expressions/aggregation/global/GlobalAvg';\nimport GlobalCount from './expressions/aggregation/global/GlobalCount';\nimport GlobalMax from './expressions/aggregation/global/GlobalMax';\nimport GlobalMin from './expressions/aggregation/global/GlobalMin';\nimport GlobalSum from './expressions/aggregation/global/GlobalSum';\nimport GlobalPercentile from './expressions/aggregation/global/GlobalPercentile';\n\nimport Zoom from './expressions/zoom';\n\nimport Placement from './expressions/Placement';\nimport Image from './expressions/Image';\nimport SVG from './expressions/SVG';\nimport svgs from './defaultSVGs';\nimport Zoomrange from './expressions/Zoomrange';\nimport Scaled from './expressions/Scaled';\nimport AlphaNormalize from './expressions/AlphaNormalize';\nimport Translate from './expressions/transformation/Translate';\nimport Rotate from './expressions/transformation/Rotate';\n\n/* Expose classes as constructor functions */\n\nexport const number = (...args) => new BaseNumber(...args);\nexport const category = (...args) => new BaseCategory(...args);\nexport const list = (...args) => new List(...args);\nexport const rgb = (...args) => new RGB(...args);\nexport const rgba = (...args) => new RGBA(...args);\nexport const transition = (...args) => new Transition(...args);\n\nconst in_ = (...args) => new In(...args);\nexport const nin = (...args) => new Nin(...args);\nexport { in_ as in };\n\nexport const between = (...args) => new Between(...args);\n\nexport const mul = (...args) => new Mul(...args);\nexport const div = (...args) => new Div(...args);\nexport const add = (...args) => new Add(...args);\nexport const sub = (...args) => new Sub(...args);\nexport const pow = (...args) => new Pow(...args);\nexport const mod = (...args) => new Mod(...args);\nexport const greaterThan = (...args) => new GreaterThan(...args);\nexport const greaterThanOrEqualTo = (...args) => new GreaterThanOrEqualTo(...args);\nexport const lessThan = (...args) => new LessThan(...args);\nexport const lessThanOrEqualTo = (...args) => new LessThanOrEqualTo(...args);\nexport const equals = (...args) => new Equals(...args);\nexport const notEquals = (...args) => new NotEquals(...args);\nexport const and = (...args) => new And(...args);\nexport const or = (...args) => new Or(...args);\nexport const gt = greaterThan;\nexport const gte = greaterThanOrEqualTo;\nexport const lt = lessThan;\nexport const lte = lessThanOrEqualTo;\nexport const eq = equals;\nexport const neq = notEquals;\n\nexport const blend = (...args) => new Blend(...args);\n\nexport const buckets = (...args) => new Buckets(...args);\n\nexport const cielab = (...args) => new CIELab(...args);\n\nexport const clusterAvg = (...args) => new ClusterAvg(...args);\nexport const clusterMax = (...args) => new ClusterMax(...args);\nexport const clusterMin = (...args) => new ClusterMin(...args);\nexport const clusterMode = (...args) => new ClusterMode(...args);\nexport const clusterSum = (...args) => new ClusterSum(...args);\nexport const clusterCount = (...args) => new ClusterCount(...args);\n\nexport const clusterTime = (...args) => new ClusterTime(...args);\n\nexport const constant = (...args) => new Constant(...args);\n\nexport const image = (...args) => new Image(...args);\n\nexport const svg = (...args) => new SVG(...args);\n\nexport const hex = (...args) => new Hex(...args);\n\nexport const hsl = (...args) => new HSL(...args);\nexport const hsla = (...args) => new HSLA(...args);\n\nexport const hsv = (...args) => new HSV(...args);\nexport const hsva = (...args) => new HSVA(...args);\n\nexport const cubic = (...args) => new Cubic(...args);\nexport const ilinear = (...args) => new ILinear(...args);\n\nexport const linear = (...args) => new Linear(...args);\n\nexport const namedColor = (...args) => new NamedColor(...args);\n\nexport const now = (...args) => new Now(...args);\n\nexport const opacity = (...args) => new Opacity(...args);\n\nexport const asc = (...args) => new Asc(...args);\nexport const desc = (...args) => new Desc(...args);\nexport const noOrder = (...args) => new NoOrder(...args);\nexport const width = (...args) => new Width(...args);\n\nexport const reverse = (...args) => new Reverse(...args);\n\nexport const property = (...args) => new Property(...args);\nexport { property as prop };\n\nexport const globalQuantiles = (...args) => new GlobalQuantiles(...args);\nexport const viewportQuantiles = (...args) => new ViewportQuantiles(...args);\n\nexport const globalEqIntervals = (...args) => new GlobalEqIntervals(...args);\nexport const viewportEqIntervals = (...args) => new ViewportEqIntervals(...args);\n\nexport const globalStandardDev = (...args) => new GlobalStandardDev(...args);\nexport const viewportStandardDev = (...args) => new ViewportStandardDev(...args);\n\nexport const ramp = (...args) => new Ramp(...args);\n\nexport const time = (...args) => new Time(...args);\nexport { time as date };\n\nexport const timeRange = (...args) => new TimeRangeExpr(...args);\n\nexport const top = (...args) => new Top(...args);\n\nexport const fade = (...args) => new Fade(...args);\nexport const animation = (...args) => new Animation(...args);\n\nexport const log = (...args) => new Log(...args);\nexport const sqrt = (...args) => new Sqrt(...args);\nexport const sin = (...args) => new Sin(...args);\nexport const cos = (...args) => new Cos(...args);\nexport const tan = (...args) => new Tan(...args);\nexport const sign = (...args) => new Sign(...args);\nexport const abs = (...args) => new Abs(...args);\nexport const isNull = (...args) => new IsNull(...args);\nexport const not = (...args) => new Not(...args);\nexport const floor = (...args) => new Floor(...args);\nexport const ceil = (...args) => new Ceil(...args);\n\nexport const variable = (...args) => variableFn(...args);\nexport { variable as var };\n\nexport const viewportAvg = (...args) => new ViewportAvg(...args);\nexport const viewportMax = (...args) => new ViewportMax(...args);\nexport const viewportMin = (...args) => new ViewportMin(...args);\nexport const viewportSum = (...args) => new ViewportSum(...args);\nexport const viewportCount = (...args) => new ViewportCount(...args);\nexport const viewportPercentile = (...args) => new ViewportPercentile(...args);\nexport const viewportHistogram = (...args) => new ViewportHistogram(...args);\nexport const viewportFeatures = (...args) => new ViewportFeatures(...args);\nexport const globalAvg = (...args) => new GlobalAvg(...args);\nexport const globalMax = (...args) => new GlobalMax(...args);\nexport const globalMin = (...args) => new GlobalMin(...args);\nexport const globalSum = (...args) => new GlobalSum(...args);\nexport const globalCount = (...args) => new GlobalCount(...args);\nexport const globalPercentile = (...args) => new GlobalPercentile(...args);\nexport const globalHistogram = (...args) => new GlobalHistogram(...args);\n\nexport const zoom = (...args) => new Zoom(...args);\nexport const scaled = (...args) => new Scaled(...args);\nexport const zoomrange = (...args) => new Zoomrange(...args);\n\nexport const placement = (...args) => new Placement(...args);\nexport const translate = (...args) => new Translate(...args);\nexport const rotate = (...args) => new Rotate(...args);\nexport const alphaNormalize = (...args) => new AlphaNormalize(...args);\n\nexport const HOLD = new Constant(Number.MAX_SAFE_INTEGER);\nexport const TRUE = new Constant(1);\nexport const FALSE = new Constant(0);\nexport const PI = new Constant(Math.PI);\nexport const E = new Constant(Math.E);\n\nexport const BICYCLE = new Image(svgs.bicycle);\nexport const BUILDING = new Image(svgs.building);\nexport const BUS = new Image(svgs.bus);\nexport const CAR = new Image(svgs.car);\nexport const CIRCLE = new Image(svgs.circle);\nexport const CIRCLE_OUTLINE = new Image(svgs.circleOutline);\nexport const CROSS = new Image(svgs.cross);\nexport const FLAG = new Image(svgs.flag);\nexport const HOUSE = new Image(svgs.house);\nexport const MARKER = new Image(svgs.marker);\nexport const MARKER_OUTLINE = new Image(svgs.markerOutline);\nexport const PLUS = new Image(svgs.plus);\nexport const SQUARE = new Image(svgs.square);\nexport const SQUARE_OUTLINE = new Image(svgs.squareOutline);\nexport const STAR = new Image(svgs.star);\nexport const STAR_OUTLINE = new Image(svgs.starOutline);\nexport const TRIANGLE = new Image(svgs.triangle);\nexport const TRIANGLE_OUTLINE = new Image(svgs.triangleOutline);\n\nexport const ALIGN_CENTER = new Placement(constant(0), constant(0));\nexport const ALIGN_BOTTOM = new Placement(constant(0), constant(1));\n\nexport { palettes, Asc, Desc };\n","import BaseExpression from './base';\nimport { div, globalMax, opacity } from '../expressions';\nimport { checkMaxArguments, checkType, checkInstance, checkExpression } from './utils';\nimport Property from './basic/property';\n\n/**\n * Override the opacity (alpha channel) of a color to normalize the input color by a normalizer property.\n *\n * This is implemented as `opacity(input, normalizer/globalMax(normalizer))\n *\n * @param {Color} input - input color to normalize\n * @param {Number} normalizer - numeric property that will be used to normalize the input color\n * @return {Color}\n *\n * @example <caption>Normalize an input property ($winner_party) by a second property ($voters).</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.alphaNormalize(\n *              s.ramp(s.prop('winner_party'), [red, blue]),\n *              s.prop('voters')\n *          )\n * });\n *\n * @example <caption>Normalize an input property ($winner_party) by a second property ($voters). (String)</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: alphaNormalize(\n *              ramp($winner_party, [red, blue]),\n *              $voters\n *          )\n * });\n *\n * @memberof carto.expressions\n * @name alphaNormalize\n * @function\n * @api\n */\nexport default class AlphaNormalize extends BaseExpression {\n    constructor (input, normalizer) {\n        checkMaxArguments(arguments, 2, 'alphaNormalize');\n        checkExpression('alphaNormalize', 'input', 0, input);\n        checkExpression('alphaNormalize', 'normalizer', 1, normalizer);\n\n        super({ _impostor: opacity(input, div(normalizer, globalMax(normalizer))) });\n        this._input = input;\n        this._normalizer = normalizer;\n        this.type = 'color';\n        this.inlineMaker = inline => inline._impostor;\n    }\n\n    _bindMetadata (meta) {\n        this._input._bindMetadata(meta);\n        this._normalizer._bindMetadata(meta);\n        checkType('alphaNormalize', 'input', 0, 'color', this._input);\n        checkType('alphaNormalize', 'normalizer', 1, 'number', this._normalizer);\n        checkInstance('alphaNormalize', 'normalizer', 1, Property, this._normalizer);\n        super._bindMetadata(meta);\n    }\n\n    get value () {\n        return this._impostor.value;\n    }\n\n    eval (feature) {\n        return this._impostor.eval(feature);\n    }\n}\n","import { implicitCast, checkMaxArguments } from './utils';\nimport AnimationGeneral from './AnimationGeneral';\nimport AnimationRange from './AnimationRange';\nimport Base from './base';\nimport { Fade } from './Fade';\n\n/**\n * Create an animated temporal filter (animation). Read more about the {@link expression.Animation|Animation Class}\n *\n * @param {Number} input input to base the temporal filter,\n * if input is a property, the beginning and end of the animation will be determined by the minimum and maximum timestamps of the property on the dataset,\n * this can be problematic if outliers are present. Otherwise input must be a number expression in which 0 means beginning of the animation and 1 means end.\n * If `input` is NULL or NaN the filter won't be passed at any moment of the animation.\n *\n * It can be combined with linear and time expressions.\n * @param {Number} duration duration of the animation in seconds, optional, defaults to 10 seconds\n * @param {Fade} fade fadeIn/fadeOut configuration, optional, defaults to 0.15 seconds of fadeIn and 0.15 seconds of fadeOut\n * @return {Number}\n *\n * @example <caption>Temporal map by $day (of numeric type), with a duration of 40 seconds, fadeIn of 0.1 seconds and fadeOut of 0.3 seconds.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: 2,\n *   color: s.ramp(s.linear(s.clusterAvg(s.prop('temp'), 0, 30)), s.palettes.TEALROSE),\n *   filter: s.animation(s.prop('day'), 40, s.fade(0.1, 0.3))\n * });\n *\n * @example <caption>Temporal map by $day (of numeric type), with a duration of 40 seconds, fadeIn of 0.1 seconds and fadeOut of 0.3 seconds. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 2\n *   color: ramp(linear(clusterAvg($temp), 0,30), tealrose)\n *   filter: animation($day, 40, fade(0.1, 0.3))\n * `);\n *\n * @example <caption>Temporal map by $date (of date type), with a duration of 40 seconds, fadeIn of 0.1 seconds and fadeOut of 0.3 seconds.</caption>\n * const viz = new carto.Viz({\n *   width: 2,\n *   color: s.ramp(s.linear(s.clusterAvg(s.prop('temp'), 0, 30)), s.palettes.TEALROSE),\n *   filter: s.animation(s.linear(s.prop('date'), s.time('2022-03-09T00:00:00Z'), s.time('2033-08-12T00:00:00Z')), 40, s.fade(0.1, 0.3))\n * });\n *\n * @example <caption>Temporal map by $date (of date type), with a duration of 40 seconds, fadeIn of 0.1 seconds and fadeOut of 0.3 seconds. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 2\n *   color: ramp(linear(clusterAvg($temp), 0,30), tealrose)\n *   filter: animation(linear($date, time('2022-03-09T00:00:00Z'), time('2033-08-12T00:00:00Z')), 40, fade(0.1, 0.3))\n * `);\n * Animation class\n *\n * This class is instanced automatically by using the `animation` function. It is documented for its methods.\n *\n * @memberof carto.expressions\n * @name animation\n * @function\n * @api\n*/\n\n/**\n * Animation class\n *\n * This class is instanced automatically by using the `animation` function. It is documented for its methods.\n *\n * @name expressions.Animation\n * @abstract\n * @hideconstructor\n * @class\n * @api\n */\n\nexport class Animation extends Base {\n    constructor (input, duration = 10, fade = new Fade()) {\n        checkMaxArguments(arguments, 3, 'animation');\n        duration = implicitCast(duration);\n        input = implicitCast(input);\n        super({ input, duration, fade });\n    }\n    _resolveAliases (aliases) {\n        this._getChildren().map(child => child._resolveAliases(aliases));\n        if (this.input.type === 'timerange') {\n            Object.setPrototypeOf(this, AnimationRange.prototype);\n        } else {\n            Object.setPrototypeOf(this, AnimationGeneral.prototype);\n        }\n        this._init();\n    }\n    _bindMetadata (metadata) {\n        this._resolveAliases({});\n        this._bindMetadata(metadata);\n    }\n}\n","import BaseExpression from './base';\nimport Property from './basic/property';\nimport { castDate } from '../../../utils/util';\nimport ClusterTime from './aggregation/cluster/ClusterTime';\nimport { linear, globalMin, globalMax, number } from '../expressions';\nimport { checkType, checkFeatureIndependent, clamp, checkMaxArguments, implicitCast } from './utils';\nimport { Fade } from './Fade';\n\nlet waitingForLayer = new Set();\nlet waitingForOthers = new Set();\n\nexport default class AnimationGeneral extends BaseExpression {\n    constructor (input, duration = 10, fade = new Fade()) {\n        checkMaxArguments(arguments, 3, 'animation');\n        duration = implicitCast(duration);\n        input = implicitCast(input);\n        super({ input, duration, fade });\n        this._init();\n    }\n    _init () {\n        const input = this.input;\n        const originalInput = input;\n\n        if (input.isA(Property) || (input.isA(ClusterTime) && input.type === 'timerange')) {\n            this._input = linear(input, globalMin(input), globalMax(input), 'start');\n        } else {\n            this._input = this.input;\n        }\n        this.childrenNames = this.childrenNames.filter(x => x === '_input');\n        this.childrenNames.push('_input');\n        this.childrenNames.push('fade');\n        this.childrenNames.push('duration');\n\n        this.type = 'number';\n        this._originalInput = originalInput;\n        this._paused = false;\n        this.progress = number(0);\n        this.childrenNames.push('progress');\n\n        this.expressionName = 'animation';\n\n        this.preface = `\n        #ifndef ANIMATION\n        #define ANIMATION\n\n        float animation(float _input, float progress, float duration, float fadeIn, float fadeOut){\n            float x = 0.;\n\n            // Check for NaN\n            if (_input <= 0.0 || 0.0 <= _input){\n                x = 1. - clamp(abs(_input - progress) * duration / (_input > progress ? fadeIn: fadeOut), 0., 1.);\n            }\n\n            return x;\n        }\n\n        #endif\n    `;\n\n        this.inlineMaker = inline => `animation(${inline._input}, ${inline.progress}, ${inline.duration}, ${inline.fade.in}, ${inline.fade.out})`;\n\n        waitingForLayer.add(this);\n        if (!this._paused) {\n            this._paused = 'default';\n        }\n    }\n\n    toString () {\n        return `${this.expressionName}(${this._input.toString()}, ${this.duration.toString()}, ${this.fade.toString()})`;\n    }\n\n    _bindMetadata (metadata) {\n        this._input._bindMetadata(metadata);\n        this.progress._bindMetadata(metadata);\n        this.fade._bindMetadata(metadata);\n        this.duration._bindMetadata(metadata);\n\n        checkType('animation', 'input', 0, ['number', 'date', 'timerange'], this._originalInput);\n        checkType('animation', 'duration', 1, 'number', this.duration);\n\n        checkType('animation', 'fade', 2, 'fade', this.fade);\n        checkFeatureIndependent('animation', 'duration', 1, this.duration);\n    }\n\n    isAnimated () {\n        return true;\n    }\n\n    _dataReady () {\n        if (waitingForLayer.has(this)) {\n            waitingForLayer.delete(this);\n            waitingForOthers.add(this);\n        }\n        // setTimeout is needed to avoid the possibility of a de-synchronization of 1 frame\n        // if the last layer to be loaded is not the first one on the painting loop\n        setTimeout(() => {\n            if (waitingForOthers.has(this)) {\n                waitingForLayer = new Set([...waitingForLayer].filter(expr => {\n                    while (expr.parent) {\n                        expr = expr.parent;\n                    }\n                    if (expr._getRootExpressions) {\n                        // The animation hasn't been removed from the viz\n                        return true;\n                    }\n                    return false;\n                }));\n                if (waitingForLayer.size > 0) {\n                    return;\n                }\n                [...waitingForOthers.values()].map(anim => {\n                    if (anim._paused === 'default') {\n                        anim.play();\n                    }\n                });\n                waitingForOthers.clear();\n            }\n        }, 0);\n    }\n\n    _postShaderCompile (program, gl) {\n        super._postShaderCompile(program, gl);\n    }\n\n    _setTimestamp (timestamp) {\n        super._setTimestamp(timestamp);\n\n        if (this._paused && this._lastTime === undefined) {\n            return;\n        }\n\n        let deltaTime = 0;\n        const speed = 1 / this.duration.value;\n\n        if (this._lastTime !== undefined) {\n            deltaTime = timestamp - this._lastTime;\n        }\n\n        this._lastTime = timestamp;\n\n        if (this._paused) {\n            return;\n        }\n\n        this.progress.value = (this.progress.value + speed * deltaTime) % 1;\n    }\n\n    eval (feature) {\n        const input = this._input.eval(feature);\n\n        if (input === null) {\n            return 0;\n        }\n\n        const progress = this.progress.value;\n        const duration = this.duration.value;\n        const fadeIn = this.fade.fadeIn.eval(feature);\n        const fadeOut = this.fade.fadeOut.eval(feature);\n\n        const output = 1 - clamp(Math.abs(input - progress) * duration / (input > progress ? fadeIn : fadeOut), 0, 1);\n\n        return output;\n    }\n\n    /**\n     * Get the current time stamp of the animation\n     *\n     * @returns {Number|Date} Current time stamp of the animation. If the animation is based on a numeric expression this will output a number, if it is based on a date expression it will output a date\n     *\n     * @example <caption>Using the `getProgressValue` method to get the animation current value.</caption>\n     * const s = carto.expressions;\n     * let animationExpr = s.animation(s.linear(s.prop('saledate'), 1991, 2017), 20, s.fade(0.7, 0.4));\n     * const animationStyle = {\n     *   color: s.ramp(s.linear(s.prop('priceperunit'), 2000, 1010000), [s.rgb(0, 255, 0), s.rgb(255, 0, 0)]),\n     *   width: s.mul(s.sqrt(s.prop('priceperunit')), 0.05),\n     *   filter: animationExpr\n     * };\n     * layer.on('updated', () => {\n     *   let currTime = Math.floor(animationExpr.getProgressValue());\n     *   document.getElementById('timestamp').innerHTML = currTime;\n     * });\n     *\n     * @memberof expressions.Animation\n     * @name getProgressValue\n     * @instance\n     * @api\n     */\n    getProgressValue () {\n        const progress = this.progress.value;\n        return this._input.converse(progress);\n    }\n\n    /**\n     * Set the time stamp of the animation\n     * @api\n     * @memberof expressions.Animation\n     * @instance\n     * @name setCurrent\n     * @param {Date|number} value - A JavaScript Date object with the new animation time\n     */\n    setTimestamp (timestamp) {\n        const date = castDate(timestamp);\n        const [tmin, tmax] = this._input.limits();\n\n        if (date.getTime() < tmin) {\n            throw new RangeError('animation.setTimestamp requires the date parameter to be higher than the lower limit');\n        }\n        if (date.getTime() > tmax) {\n            throw new RangeError('animation.setTimestamp requires the date parameter to be lower than the higher limit');\n        }\n\n        this.progress.value = (date.getTime() - tmin) / (tmax - tmin);\n    }\n\n    /**\n     * Get the animation progress.\n     *\n     * @returns {Number} A number representing the progress. 0 when the animation just started and 1 at the end of the cycle.\n     * @api\n     * @instance\n     * @memberof expressions.Animation\n     * @name getProgressPct\n     */\n    getProgressPct () {\n        return this.progress.value;\n    }\n\n    /**\n     * Set the animation progress from 0 to 1.\n     * @param {number} progress - A number in the [0-1] range setting the animation progress.\n     * @api\n     * @instance\n     * @memberof expressions.Animation\n     * @name setProgressPct\n     */\n    setProgressPct (progress) {\n        progress = Number.parseFloat(progress);\n\n        if (progress < 0 || progress > 1) {\n            throw new TypeError(`animation.setProgressPct requires a number between 0 and 1 as parameter but got: ${progress}`);\n        }\n\n        this.progress.value = progress;\n    }\n\n    /**\n     * Returns whether the animation is playing or not\n     *\n     * @api\n     * @memberof expressions.Animation\n     * @instance\n     * @name isPlaying\n     */\n    isPlaying () {\n        return this._paused === false;\n    }\n\n    /**\n     * Pause the animation\n     *\n     * @api\n     * @memberof expressions.Animation\n     * @instance\n     * @name pause\n     */\n    pause () {\n        this._paused = true;\n    }\n\n    /**\n     * Play/resume the animation\n     *\n     * @api\n     * @memberof expressions.Animation\n     * @instance\n     * @name play\n     */\n    play () {\n        this._paused = false;\n        this.notify();\n    }\n\n    /**\n     * Stops the animation\n     *\n     * @api\n     * @memberof expressions.Animation\n     * @instance\n     * @name stop\n     */\n    stop () {\n        this.progress.value = 0;\n        this._paused = true;\n    }\n}\n","import BaseExpression from './base';\nimport { Fade } from './Fade';\nimport { linear, globalMin, globalMax, HOLD, mul } from '../expressions';\nimport AnimationGeneral from './AnimationGeneral';\n\nexport default class AnimationRange extends BaseExpression {\n    _init () {\n        const input = this.input;\n        const duration = this.duration;\n        const fade = this.fade;\n\n        const start = linear(input, globalMin(input), globalMax(input), 'start');\n\n        const input2 = {};\n        Object.keys(input).forEach(key => { input2[key] = input[key]; });\n\n        Object.setPrototypeOf(input2, input);\n\n        const end = linear(input2, globalMin(input2), globalMax(input2), 'end');\n        const startAnim = new AnimationGeneral(start, duration, new Fade(fade.fadeIn, HOLD));\n        const endAnim = new AnimationGeneral(end, duration, new Fade(HOLD, fade.fadeOut));\n        const combinedAnimation = mul(startAnim, endAnim);\n\n        this.combinedAnimation = combinedAnimation;\n        this.childrenNames.push('combinedAnimation');\n        combinedAnimation.parent = this;\n\n        this.type = 'number';\n\n        this._startAnim = startAnim;\n        this._endAnim = endAnim;\n\n        this.expressionName = 'animation';\n        this.inlineMaker = inline => inline.combinedAnimation;\n    }\n    _bindMetadata (metadata) {\n        this.combinedAnimation._bindMetadata(metadata);\n    }\n\n    eval (feature) {\n        return this.combinedAnimation.eval(feature);\n    }\n\n    isAnimated () {\n        return true;\n    }\n\n    isPlaying () {\n        return this._startAnim.isPlaying();\n    }\n\n    getProgressValue () {\n        return this._startAnim.getProgressValue();\n    }\n\n    getProgressPct () {\n        return this._startAnim.getProgressPct();\n    }\n\n    setProgressPct (progress) {\n        this._startAnim.setProgressPct(progress);\n        this._endAnim.setProgressPct(progress);\n    }\n\n    pause () {\n        this._startAnim.pause();\n        this._endAnim.pause();\n    }\n\n    play () {\n        this._startAnim.play();\n        this._endAnim.play();\n        this._endAnim.setProgressPct(this._startAnim.getProgressPct());\n    }\n\n    stop () {\n        this._startAnim.stop();\n        this._endAnim.stop();\n    }\n\n    toString () {\n        return `${this.expressionName}(${this._input.toString()}, ${this.duration.toString()}, ${this.fade.toString()})`;\n    }\n}\n","import { OTHERS_GLSL_VALUE } from './constants';\n\n/*\n    Once the number of buckets exceed 27, 'memory exhausted' problems are common at glsl compile time.\n    Here we set a little lower value to keep comparisons in just one if-else-if expression.\n    Beyond that value, N independent if expressions will be created.\n    That's a bit more inefficient but it consumes less memory, allowing for example a bigger\n    number of different icons in a viz\n*/\nconst SAFE_NUMBER_ELSE_IF_COMPARISONS = 20;\n\nexport default class BucketsGLSLHelper {\n    constructor (buckets) {\n        this.buckets = buckets;\n    }\n\n    applyToShaderSource (getGLSLforProperty) {\n        // Get children sources\n        const childSourcesArray = this.buckets.childrenNames.map(name => this.buckets[name]._applyToShaderSource(getGLSLforProperty));\n        let childSources = {};\n        childSourcesArray.map((source, index) => {\n            childSources[this.buckets.childrenNames[index]] = source;\n        });\n\n        // Get coode for buckets comparisons\n        const funcName = `buckets${this.buckets._uid}`;\n        const elif = this._getComparisons(childSources);\n        const funcBody = this.buckets.list.elems.map(elif).join('');\n\n        const preface = `float ${funcName}(float x){\n            ${funcBody}\n            return ${this.buckets.input.type === 'category' ? OTHERS_GLSL_VALUE : (this.buckets.numCategories - 1).toFixed(20)};\n        }`;\n\n        return {\n            preface: this.buckets._prefaceCode(childSources.input.preface + childSources.list.preface + preface),\n            inline: `${funcName}(${childSources.input.inline})`\n        };\n    }\n\n    /**\n     * Get if-expressions to compare each value with the corresponding buckets\n     */\n    _getComparisons (childSources) {\n        const cmp = this.buckets.input.type === 'category' ? '==' : '<';\n\n        // When there is \"OTHERS\" we don't need to take it into account\n        const divisor = this.buckets.numCategoriesWithoutOthers - 1 || 1;\n\n        let elif;\n        if (divisor <= SAFE_NUMBER_ELSE_IF_COMPARISONS) {\n            // just one expression, with one 'if' & several 'else if'\n            elif = (_, index) =>\n                `${index > 0 ? 'else' : ''} if (x${cmp}(${childSources.list.inline[index]})){\n                return ${index}./${divisor.toFixed(20)};\n            }`;\n        } else {\n            // multiple, independent, 'if' expressions (order is assumed)\n            elif = (_, index) =>\n                `if (x${cmp}(${childSources.list.inline[index]})){\n                return ${index}./${divisor.toFixed(20)};\n            }`;\n        }\n        return elif;\n    }\n}\n","import BaseExpression from './base';\nimport { checkExpression, implicitCast, checkType, checkMaxArguments } from './utils';\n\nconst SQRT_MAX_CATEGORIES_PER_PROPERTY = 256;\n\n/**\n* Transform a categorical property into a per-property category index. The evaluated result returns a value between 0 and 1.\n* The dataset must contain less than 65536 (256 * 256) different categories.\n*\n* @param {Category} property - The property to be evaluated, must be categorical\n* @return {Category}\n*\n* @example <caption> Color by $city using the CARTOColor Prism by assigning different color in Prism to each category.</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz({\n*   color: s.ramp(s.categoryIndex(s.prop('city')), s.palettes.PRISM)\n* });\n*\n* @example <caption> Color by $city using the CARTOColor Prism by assigning different color in Prism to each category. (String)</caption>\n* const viz = new carto.Viz(`\n*   color: ramp(categoryIndex($city), PRISM)\n* `);\n*\n* @memberof carto.expressions\n* @name categoryIndex\n* @function\n* @api\n*/\nexport default class CategoryIndex extends BaseExpression {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'categoryIndex');\n\n        property = implicitCast(property);\n\n        checkExpression('categoryIndex', 'property', 0, property);\n        super({ property });\n        this._numTranslatedCategories = null;\n        this.type = 'category';\n\n        this._translatePixels = new Float32Array(SQRT_MAX_CATEGORIES_PER_PROPERTY * SQRT_MAX_CATEGORIES_PER_PROPERTY);\n        this._translateArray = [];\n        this._numTranslatedCategories = 0;\n        this._numTranslatedCategoriesGL = 0;\n    }\n\n    get numCategories () {\n        return this.metaColumn.categories.length;\n    }\n\n    get metaColumn () {\n        const propertyName = this.property.propertyName;\n        return this._metadata.properties[propertyName]\n            ? this._metadata.properties[propertyName]\n            : this._metadata.properties[this.property.name];\n    }\n\n    get numCategoriesWithoutOthers () {\n        return this.numCategories;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkType('categoryIndex', 'property', 0, 'category', this.property);\n        this._metadata = metadata;\n        this._calcTranslated();\n    }\n\n    get value () {\n        return this.eval();\n    }\n\n    eval (feature) {\n        const name = this.property.eval(feature);\n        const id = this._metadata.categoryToID.get(name);\n\n        return this._translateArray[id];\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        gl.activeTexture(gl.TEXTURE0 + drawMetadata.freeTexUnit);\n\n        if (this._numTranslatedCategoriesGL !== this.numCategories) {\n            this._numTranslatedCategoriesGL = this.numCategories;\n            this._calcTranslated();\n            this._translateTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._translateTexture);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, SQRT_MAX_CATEGORIES_PER_PROPERTY, SQRT_MAX_CATEGORIES_PER_PROPERTY, 0, gl.ALPHA, gl.FLOAT, this._translatePixels);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._translateTexture);\n        }\n\n        gl.uniform1i(this._getBinding(program).texRampTranslateLoc, drawMetadata.freeTexUnit);\n        drawMetadata.freeTexUnit++;\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const max = SQRT_MAX_CATEGORIES_PER_PROPERTY.toFixed(20);\n        const property = this.property._applyToShaderSource(getGLSLforProperty);\n        return {\n            inline: `ramp_translate${this._uid}(${property.inline})`,\n            preface: `\n                    uniform sampler2D texRampTranslate${this._uid};\n                    float ramp_translate${this._uid}(float s){\n                        vec2 v = vec2(mod(s, ${max}), floor(s / ${max}));\n                        return texture2D(texRampTranslate${this._uid}, v/${max}).a;\n                    }`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._getBinding(program).texRampTranslateLoc = gl.getUniformLocation(program, `texRampTranslate${this._uid}`);\n    }\n\n    _calcTranslated () {\n        const numCategories = this.numCategories;\n\n        if (this._numTranslatedCategories !== numCategories) {\n            this._numTranslatedCategories = numCategories;\n\n            for (let i = 0; i < numCategories; i++) {\n                const id = this._metadata.categoryToID.get(this.metaColumn.categories[i].name);\n                const value = i / (numCategories - 1);\n                const vec2Id = {\n                    x: id % SQRT_MAX_CATEGORIES_PER_PROPERTY,\n                    y: Math.floor(id / SQRT_MAX_CATEGORIES_PER_PROPERTY)\n                };\n\n                this._translatePixels[SQRT_MAX_CATEGORIES_PER_PROPERTY * vec2Id.y + vec2Id.x] = value;\n                this._translateArray.push(value);\n            }\n        }\n    }\n\n    getLegendData () {\n        const categories = this._metadata.properties[this.property.propertyName].categories;\n        const categoriesLength = categories.length;\n        const divisor = categoriesLength - 1;\n        const data = [];\n\n        for (let i = 0; i < categoriesLength; i++) {\n            const category = categories[i];\n            const key = category.name;\n            const value = i / divisor;\n\n            data.push({ key, value });\n        }\n\n        return { data };\n    }\n}\n","import BaseExpression from './base';\nimport { implicitCast, checkMaxArguments, checkExpression, checkType } from './utils';\n\n/**\n * Create a FadeIn/FadeOut configuration. See `animation` for more details.\n *\n * @param {Number} param1 - Expression of type number or Number\n * @param {Number} param2 - Expression of type number or Number\n * @return {Fade}\n *\n * @example <caption>Fade in of 0.1 seconds, fade out of 0.3 seconds.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.animation(s.prop('day'), 40, s.fade(0.1, 0.3))\n * });\n *\n * @example <caption>Fade in of 0.1 seconds, fade out of 0.3 seconds. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: animation($day, 40, fade(0.1, 0.3))\n * `);\n *\n * @example<caption>Fade in and fade out of 0.5 seconds.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.animation(s.prop('day'), 40, s.fade(0.5))\n * });\n *\n * @example<caption>Fade in and fade out of 0.5 seconds. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: animation($day, 40, fade(0.5))\n * `);\n *\n * @example<caption>Fade in of 0.3 seconds without fading out.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.animation(s.prop('day'), 40, s.fade(0.1, s.HOLD))\n * });\n *\n * @example<caption>Fade in of 0.3 seconds without fading out. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: animation($day, 40, fade(0.3, HOLD))\n * `);\n *\n * @memberof carto.expressions\n * @name fade\n * @function\n * @api\n*/\n\nconst DEFAULT_FADE = 0.15;\nconst DEFAULT_PARAM = undefined;\n\nexport class Fade extends BaseExpression {\n    constructor (param1 = DEFAULT_PARAM, param2 = DEFAULT_PARAM) {\n        checkMaxArguments(arguments, 2, 'fade');\n\n        let fadeIn = param1 === DEFAULT_PARAM\n            ? implicitCast(DEFAULT_FADE)\n            : implicitCast(param1);\n\n        let fadeOut = param2 === DEFAULT_PARAM\n            ? fadeIn\n            : implicitCast(param2);\n\n        checkExpression('fade', 'param1', 0, fadeIn);\n        checkExpression('fade', 'param2', 1, fadeOut);\n\n        super({ fadeIn, fadeOut });\n\n        this.type = 'fade';\n\n        this.inlineMaker = (inline) => ({\n            in: inline.fadeIn,\n            out: inline.fadeOut\n        });\n    }\n\n    get value () {\n        return {\n            fadeIn: this.fadeIn.value,\n            fadeOut: this.fadeOut.value\n        };\n    }\n\n    eval (feature) {\n        return {\n            fadeIn: this.fadeIn.eval(feature),\n            fadeOut: this.fadeOut.eval(feature)\n        };\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        checkType('fade', 'param1', 0, 'number', this.fadeIn);\n        checkType('fade', 'param2', 1, 'number', this.fadeOut);\n    }\n}\n","import Base from './base';\nimport { checkString, checkMaxArguments, noOverrideColor } from './utils';\n\n/**\n * Image. Load an image and use it as a symbol.\n *\n * Note: image RGB color will be overridden if the viz `color` property is set.\n *\n * @param {String} url - Image path\n *\n * @example <caption>Load a svg image.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   symbol: s.image('./marker.svg')\n * });\n *\n * @example <caption>Load a svg image. (String)</caption>\n * const viz = new carto.Viz(`\n *    symbol: image('./marker.svg')\n * `);\n * @memberof carto.expressions\n * @name image\n * @function\n * @api\n*/\n\nexport default class Image extends Base {\n    constructor (url) {\n        checkMaxArguments(arguments, 1, 'image');\n        checkString('image', 'url', 0, url);\n        super({});\n        this.type = 'image';\n        this.canvas = null;\n        this.url = url;\n        this._promise = new Promise((resolve, reject) => {\n            this.image = new window.Image();\n            this.image.onload = () => {\n                this.canvas = _getCanvasFromImage(this.image);\n                this.image = null;\n                resolve();\n            };\n            this.image.onerror = reject;\n            this.image.crossOrigin = 'anonymous';\n            this.image.src = this.url;\n        });\n    }\n\n    loadImages () {\n        this.count = this.count + 1 || 1;\n        return this._promise;\n    }\n\n    keepDefaultsOnBlend () {\n        // Keep default image color if setting a symbol after viz initialization with defaults\n        if (this.default && this.parent.color.default) {\n            this.parent.color = noOverrideColor();\n        }\n    }\n\n    get value () {\n        return this.url;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    getLegendData (options) {\n        return {\n            name: 'image',\n            data: [{\n                key: 'url',\n                value: this.url\n            }]\n        };\n    }\n\n    _free (gl) {\n        if (this.texture) {\n            gl.deleteTexture(this.texture);\n        }\n    }\n\n    _applyToShaderSource () {\n        return {\n            preface: this._prefaceCode(`uniform sampler2D texSprite${this._uid};`),\n            inline: `texture2D(texSprite${this._uid}, imageUV).rgba`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._getBinding(program)._texLoc = gl.getUniformLocation(program, `texSprite${this._uid}`);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        if (!this.init && this.canvas) {\n            this.init = true;\n            gl.activeTexture(gl.TEXTURE0 + drawMetadata.freeTexUnit);\n            this.texture = gl.createTexture();\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.canvas);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.generateMipmap(gl.TEXTURE_2D);\n            this.canvas = null;\n        }\n\n        if (this.texture) {\n            gl.activeTexture(gl.TEXTURE0 + drawMetadata.freeTexUnit);\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            gl.uniform1i(this._getBinding(program)._texLoc, drawMetadata.freeTexUnit);\n            drawMetadata.freeTexUnit++;\n        }\n    }\n}\n\nfunction _getCanvasFromImage (img) {\n    const CANVAS_SIZE = 256;\n    const canvas = document.createElement('canvas');\n    canvas.width = CANVAS_SIZE;\n    canvas.height = CANVAS_SIZE;\n\n    const ctx = canvas.getContext('2d');\n\n    const max = Math.max(img.width, img.height);\n    const width = img.width / max * CANVAS_SIZE;\n    const height = img.height / max * CANVAS_SIZE;\n\n    ctx.drawImage(img, (CANVAS_SIZE - width) / 2, (CANVAS_SIZE - height) / 2, width, height);\n\n    return canvas;\n}\n","import Base from './base';\nimport { checkType } from './utils';\n\n/**\n * ImageList. Load an array of images and use them as a symbols.\n *\n * Note: images RGB color will be overridden if the viz `color` property is set.\n *\n * @internal\n */\nexport default class ListImage extends Base {\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        this.numImages = this.elems.length;\n        this._getChildren().forEach((image, i) => checkType('imageArray', `imageArray[${i}]`, 0, 'image', image));\n    }\n\n    eval (feature) {\n        return this.elems.map(elem => elem.eval(feature));\n    }\n\n    _applyToShaderSource () {\n        return {\n            preface: this._prefaceCode(`\n                uniform sampler2D atlas${this._uid};\n\n                vec4 atlas${this._uid}Fn(vec2 imageUV, float category) {\n                    return texture2D(atlas${this._uid}, imageUV/16. + vec2(mod(category, 16.), floor(category/16.))/16. ).rgba;\n                }\n            `),\n            inline: `atlas${this._uid}Fn`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._getBinding(program).texLoc = gl.getUniformLocation(program, `atlas${this._uid}`);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        this.init = true;\n        for (let i = 0; i < this.numImages; i++) {\n            const image = this[`image-${i}`];\n            this.init = this.init && image.canvas;\n        }\n\n        if (this.init && !this.texture) {\n            const textureAtlasSize = 4096;\n            const imageSize = 256;\n\n            gl.activeTexture(gl.TEXTURE0 + drawMetadata.freeTexUnit);\n            this.texture = gl.createTexture();\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, textureAtlasSize, textureAtlasSize, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n            let offsetX = 0;\n            let offsetY = 0;\n            for (let i = 0; i < this.numImages; i++) {\n                const image = this[`image-${i}`];\n                // get image, push image to texture atlas\n                gl.texSubImage2D(gl.TEXTURE_2D, 0, offsetX, offsetY, gl.RGBA, gl.UNSIGNED_BYTE, image.canvas);\n                offsetX += imageSize;\n\n                if (offsetX + imageSize > textureAtlasSize) {\n                    offsetX = 0;\n                    offsetY += imageSize;\n                }\n            }\n\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n\n        if (this.texture) {\n            gl.activeTexture(gl.TEXTURE0 + drawMetadata.freeTexUnit);\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            gl.uniform1i(this._getBinding(program).texLoc, drawMetadata.freeTexUnit);\n            drawMetadata.freeTexUnit++;\n        }\n    }\n}\n","import Base from './base';\nimport { checkType } from './utils';\n\nexport default class ListTransform extends Base {\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        this._getChildren().forEach((transform, i) => checkType('ListTransformation', `ListTransformation[${i}]`, 0, 'transformation', transform));\n        this.type = 'transformation';\n    }\n\n    eval (feature) {\n        return this.elems.map(elem => elem.eval(feature));\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const childGLSL = this.elems.map(elem => elem._applyToShaderSource(getGLSLforProperty));\n        return {\n            preface: this._prefaceCode(`\n                ${childGLSL.map(c => c.preface).join('\\n')}\n\n                vec2 listTransform${this._uid}(vec2 p) {\n                    ${childGLSL.map(c => `p = ${c.inline}(p);`).join('\\n')}\n                    return p;\n                }\n            `),\n            inline: `listTransform${this._uid}`\n        };\n    }\n}\n","import BaseExpression from './base';\nimport { checkType, implicitCast, checkMaxArguments } from './utils';\n\n/**\n * Placement. Define an image offset relative to its size. Where:\n * - `symbolPlacement: placement(1,1)` means to align the bottom left corner of the image with the point center.\n * - `symbolPlacement: placement(0,0)` means to align the center of the image with the point center.\n * - `symbolPlacement: placement(-1,-1)` means to align the top right corner of the image with the point center.\n *\n * ```\n *           |1\n *           |\n *           |\n * -1 -------+------- 1\n *           |\n *           |\n *         -1|\n * ```\n *\n * You can also use `align_center` and `align_bottom` to set the simbol placement as follows:\n * - `symbolPlacement: align_bottom` is equivalent to `symbolPlacement: placement(0, 1)`\n * - `symbolPlacement: align_center` is equivalent to `symbolPlacement: placement(0, 0)`\n *\n * @param {number} x - first numeric expression that indicates the image offset in the X direction.\n * @param {number} y - second numeric expression that indicates the image offset in the Y direction.\n * @return {Placement} Numeric expression\n *\n * @example <caption>Setting the aligment to the top corner of the image.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   symbol: s.image('./marker.svg').\n *   symbolPlacement: s.placement(1, 0)\n * });\n *\n * @example <caption>Setting the aligment to the top corner of the image. (String)</caption>\n * const viz = new carto.Viz(`\n *   symbol: image('./marker.svg')\n *   symbolPlacement: placement(1, 0)\n * `);\n *\n * @memberof carto.expressions\n * @name placement\n * @function\n * @api\n */\n\nexport default class Placement extends BaseExpression {\n    constructor (x, y) {\n        checkMaxArguments(arguments, 2, 'placement');\n\n        x = implicitCast(x);\n        y = implicitCast(y);\n        super({ x, y });\n        this.inlineMaker = inline => `vec2(${inline.x}, ${inline.y})`;\n        this.type = 'placement';\n    }\n\n    get value () {\n        return [this.x.value, this.y.value];\n    }\n\n    eval (feature) {\n        return [this.x.eval(feature), this.y.eval(feature)];\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        checkType('placement', 'x', 0, 'number', this.x);\n        checkType('placement', 'y', 1, 'number', this.y);\n    }\n}\n","import BaseExpression from './base';\nimport { implicitCast, checkExpression, checkMaxArguments } from './utils';\n\nimport RampImage from './RampImage';\nimport RampGeneric from './RampGeneric';\nimport { DEFAULT_RAMP_OTHERS } from './constants';\n\n/**\n* Create a ramp: a mapping between an input (numeric or categorical) and an output (number, colors and/or images)\n*\n* When the input has the same number of categories (without taking the \"others\" category into account).\n* Then, each input category will have a one to one match with an output value.\n*\n* Some case examples:\n* `ramp(buckets($product, ['A, 'B', 'C']), [house, car, bus])`\n* `ramp(buckets($price, [20, 50, 120]), [1, 10, 4, 12])`\n* `ramp(top($product, 3), [blue, yellow, green])`\n* `ramp(globalQuantiles($price, 3), [red, yellow, green])`\n*\n* When the input has different number of categories or the input is a linear expression.\n* Then it will interpolate the output values (Note: this is not supported if output values are images)\n*\n* Some case examples:\n* `ramp(linear($price, 1, 10) [green, yellow, red])`\n* `ramp(buckets($product, ['A, 'B', 'C'], [red, blue]))\n* - When the input is a categorical property, we wrap it automatically in a CategoryIndex expression\n* `ramp($product, Prism)` (equivalent to `ramp($categoryIndex($product)), Prism)`\n* - When the input is a numeric property, we wrap it automatically in a Linear expression.\n* `ramp($price, Prism)` (equivalent to `ramp($linear($price)), Prism)`\n*\n* The \"others\" value is setted by default, depending on the output type:\n* - If it is \"Number\", the \"others\" value is 1.\n* - If it is \"Color\" from a color array (i.e: [red, yellow, green]), the \"others\" value is the gray color.\n* - If it is \"Color\" from a cartocolor palette (i.e: Prism), the \"others\" value is the last color of the palette.\n* - If it is \"Image\", the \"others\" value is a circle.\n*\n* If we add a third parameter, the \"others\" default value will be overridden by this one\n*\n* @param {Number|Category} input - The input expression to give a color\n* @param {Palette|Color[]|Number[]} palette - The color palette that is going to be used\n* @param {Number|Color|Image} [others] - Value that overrides the default value for \"others\"\n* @return {Number|Color|Image}\n*\n* @example <caption>Mapping categories to numbers, colors and images.</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz({\n*   width: s.ramp(s.buckets(s.prop('product'), ['A, 'B', 'C']), [1, 2, 3])\n*   color: s.ramp(s.buckets(s.prop('product'), ['A, 'B', 'C']), s.palettes.PRISM)\n*   strokeColor: s.ramp(s.buckets(s.prop('product'), ['A, 'B', 'C']), [s.namedColor('red'), s.namedColor('yellow'), s.namedColor('green')])\n*   symbol: s.ramp(s.buckets(s.prop('product'), ['A, 'B', 'C']), [s.HOUSE, s.CAR, s.BUS])\n* });\n*\n* @example <caption>Mapping categories to numbers, colors and images. (String)</caption>\n* const viz = new carto.Viz(`\n*   width: ramp(buckets($product), ['A, 'B', 'C']), [1, 2, 3])\n*   color: ramp(buckets($product), ['A, 'B', 'C']), Prism)\n*   strokeColor: ramp(buckets($product), ['A, 'B', 'C']), [red, yellow, green])\n*   symbol: ramp(buckets($product), ['A, 'B', 'C']), [house, car, bus])\n* `);\n*\n* @example <caption>Mapping classified numeric properties to numbers, colors and images.</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz({\n*   width: s.ramp(s.buckets(s.prop('price'), [40, 100]), [1, 2, 3])\n*   color: s.ramp(s.buckets(s.prop('price'), [40, 100]), s.palettes.PRISM)\n*   strokeColor: s.ramp(s.buckets(s.prop('price'), [40, 100]), [s.namedColor('red'), s.namedColor('yellow'), s.namedColor(green)])\n*   symbol: s.ramp(s.buckets(s.prop('price'), [40, 100]), [s.HOUSE), s.CAR, s.BUS])\n* });\n*\n* @example <caption>Mapping classified numeric properties to numbers, colors and images. (String)</caption>\n* const viz = new carto.Viz(`\n*   width: ramp(buckets($price, [40, 100]), [1, 2, 3])\n*   color: ramp(buckets($price, [40, 100]), Prism)\n*   strokeColor: ramp(buckets($price, [40, 100]), [red, yellow, green])\n*   symbol: ramp(buckets($price, [40, 100]), [house, car, bus])\n* `);\n*\n* @example <caption>Override default values.</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz({\n*   width: s.ramp(s.top(s.prop('price'), 3), [1, 2, 3], 0)\n*   strokeColor: s.ramp(s.top(s.prop('price'), 3), Prism, s.namedColor('red'))\n*   color: s.ramp(s.top(s.prop('price'), 3), [s.namedColor('blue'), s.namedColor('red'), s.namedColor('yellow')], s.namedColor(black))\n*   symbol: s.ramp(s.top(s.prop('price'), 3), [s.HOUSE, s.CAR, s.BUS], s.CROSS)\n* });\n*\n* @example <caption>Override default values. (String)</caption>\n* const viz = new carto.Viz(`\n*   width: ramp(top($price, 3), [1, 2, 3], 0)\n*   strokeColor: ramp(top($price, 3), Prism, red)\n*   color: ramp(top($price, 3), [blue, red, yellow], black)\n*   symbol: ramp(top($price, 3), [house, car, bus], cross)\n* `);\n*\n* @memberof carto.expressions\n* @name ramp\n* @function\n* @api\n*/\n\n/**\n * Ramp Class\n *\n * A mapping between an input (numeric or categorical) and an output (number, colors and/or images)\n * This class is instanced automatically by using the `ramp` function. It is documented for its methods.\n * Read more about ramp expression at {@link carto.expressions.ramp}.\n *\n * @name expressions.Ramp\n * @abstract\n * @hideconstructor\n * @class\n * @api\n */\nexport default class Ramp extends BaseExpression {\n    constructor (input, palette, others = DEFAULT_RAMP_OTHERS) {\n        checkMaxArguments(arguments, 3, 'ramp');\n\n        input = implicitCast(input);\n        palette = implicitCast(palette);\n\n        checkExpression('ramp', 'input', 0, input);\n        checkExpression('ramp', 'palette', 1, palette);\n\n        if (others !== DEFAULT_RAMP_OTHERS) {\n            others = implicitCast(others);\n            checkExpression('ramp', 'others', 2, others);\n        }\n\n        super({ input, palette });\n        this.palette = palette;\n        this.others = others;\n        this.type = palette.type;\n        this._defaultOthers = others === DEFAULT_RAMP_OTHERS;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        switch (this.palette.type) {\n            case 'image-list':\n                Object.setPrototypeOf(this, RampImage.prototype);\n                break;\n            default:\n                Object.setPrototypeOf(this, RampGeneric.prototype);\n                break;\n        }\n\n        return this._bindMetadata(metadata);\n    }\n\n    /**\n     * Get a legend for the ramp.\n     *\n     * Note: This method works only for feature property independent outputs.\n     * Example:\n     * - This works: `ramp($price, [5, 15])`\n     * - This does not work: `ramp($price, [5, $amount])`\n     *\n     * @param {Object} config - Optional configuration\n     * @param {String} config.othersLabel - Name for other category values. Defaults to 'CARTO_VL_OTHERS'.\n     * @param {Number} config.samples - Number of samples for numeric values to be returned. Defaults to 10. The maximum number of samples is 100.\n     * @return {Object} - `{ type, data }`. 'type' could be category or number. Data is an array of { key, value } objects. 'key' depends on the expression type. 'value' is the result evaluated by the ramp. There is more information in the examples.\n     * @api\n     * @example <caption>Get legend for a color ramp of a categorical property.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   color: s.ramp(s.prop('vehicles'), s.palettes.PRISM)\n     * });\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData();\n     *   // legend = {\n     *   //    type: 'category',\n     *   //    name: '$vehicles',\n     *   //    data: [\n     *   //       { key: 'Bicycle', value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: 'Car', value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: 'Bus', value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: 'CARTO_VL_OTHERS', value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a color ramp of a categorical property. (String)</caption>\n     * const viz = new carto.Viz(`\n     *   color: ramp($vehicles, PRISM)\n     * ´);\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData();\n     *   // legend = {\n     *   //    type: 'category',\n     *   //    name: '$vehicles',\n     *   //    data: [\n     *   //       { key: 'Bicycle', value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: 'Car', value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: 'Bus', value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: 'CARTO_VL_OTHERS', value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for an image ramp of a categorical property.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   symbol: s.ramp(s.prop('vehicles'), [s.BICYCLE, s.CAR, s.BUS])\n     * });\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.symbol.getLegendData();\n     *   // legend = {\n     *   //    type: 'category',\n     *   //    name: '$vehicles',\n     *   //    data: [\n     *   //       { key: 'Bicycle', value: bicycleImageUrl },\n     *   //       { key: 'Car', value: carImageUrl },\n     *   //       { key: 'Bus', value: busImageUrl },\n     *   //       { key: 'CARTO_VL_OTHERS', value: circleImageUrl }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for an image ramp of a categorical property. (String)</caption>\n     * const viz = new carto.Viz(`\n     *   symbol: ramp('$vehicles'), [BICYCLE, CAR, BUS])\n     * `);\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.symbol.getLegendData();\n     *   // legend = {\n     *   //    type: 'category',\n     *   //    name: '$vehicles',\n     *   //    data: [\n     *   //       { key: 'Bicycle', value: bicycleImageUrl },\n     *   //       { key: 'Car', value: carImageUrl },\n     *   //       { key: 'Bus', value: busImageUrl },\n     *   //       { key: 'CARTO_VL_OTHERS', value: circleImageUrl }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend of a ramp top expression and set \"others\" label.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   color: s.ramp(s.top(s.prop('vehicles')), s.palettes.PRISM)\n     * });\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData({\n     *      othersLabel: 'Other Vehicles'\n     *   });\n     *\n     *   // legend = {\n     *   //    type: 'category',\n     *   //    name: 'top($vehicles)',\n     *   //    data: [\n     *   //       { key: 'Bicycle', value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: 'Car', value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: 'Bus', value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: 'Other Vehicles', value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend of a ramp top expression and set \"others\" label. (String)</caption>\n     * const viz = new carto.Viz(`\n     *   color: ramp(top($vehicles, 5), PRISM)\n     * `);\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData({\n     *      othersLabel: 'Other Vehicles'\n     *   });\n     *\n     *   // legend = {\n     *   //    type: 'category',\n     *   //    name: 'top($vehicles)',\n     *   //    data: [\n     *   //       { key: 'Bicycle', value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: 'Car', value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: 'Bus', value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: 'Other Vehicles', value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a linear ramp expression and set number of samples.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   color: s.ramp(s.linear(s.prop('numvehicles'), 1, 100), s.palettes.PRISM)\n     * });\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData({\n     *       samples: 4\n     *   });\n     *\n     *   // legend = {\n     *   //    type: 'number',\n     *   //    name: 'linear($numvehicles, 1, 100)',\n     *   //    data: [\n     *   //       { key: 25, value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: 50, value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: 75, value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: 100, value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a linear ramp expression and set number of samples. (String)</caption>\n     * const viz = new carto.Viz(`\n     *   color: ramp(linear($numvehicles, 1, 100), PRISM)\n     * `);\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData({\n     *       samples: 4\n     *   });\n     *\n     *   // legend = {\n     *   //    type: 'number',\n     *   //    name: 'linear($numvehicles, 1, 100)',\n     *   //    data: [\n     *   //       { key: 25, value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: 50, value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: 75, value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: 100, value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a buckets ramp expression.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   color: s.ramp(s.buckets((s.prop('numvehicles'), [1, 2, 3]), s.palettes.PRISM))\n     * });\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData();\n     *\n     *   // legend = {\n     *   //    type: 'number',\n     *   //    name: 'buckets($numvehicles, [1, 2, 3])',\n     *   //    data: [\n     *   //       { key: [-Infinity, 1], value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: [1, 2], value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: [2, 3], value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: [3, +Infinity], value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a buckets ramp expression. (String)</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   color: ramp(buckets($numvehicles', [1, 2, 3]), Prism))\n     * `);\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData();\n     *\n     *   // legend = {\n     *   //    type: 'number',\n     *   //    name: 'buckets($numvehicles, [1, 2, 3])',\n     *   //    data: [\n     *   //       { key: [-Infinity, 1], value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: [1, 2], value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: [2, 3], value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: [3, +Infinity], value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a classifier ramp expression.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   color: s.ramp(s.globalEqIntervals(s.prop('numvehicles'), 4), s.palettes.PRISM)\n     * });\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData();\n     *\n     *   // legend = {\n     *   //    type: 'number',\n     *   //    name: 'globalEqIntervals($numvehicles, 4)',\n     *   //    data: [\n     *   //       { key: [-Infinity, 25], value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: [25, 50], value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: [50, 75], value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: [100, +Infinity], value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @example <caption>Get legend for a classifier ramp expression. (String)</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   color: ramp(globalEqIntervals($numvehicles, 4), Prism)\n     * `);\n     *\n     * layer.on('loaded', () => {\n     *   const legend = layer.viz.color.getLegendData();\n     *\n     *   // legend = {\n     *   //    type: 'number',\n     *   //    name: 'globalEqIntervals($numvehicles, 4)',\n     *   //    data: [\n     *   //       { key: [-Infinity, 25], value: { r: 95, g: 70, b: 144, a: 1 } },\n     *   //       { key: [25, 50], value: { r: 29, g: 105, b: 150, a: 1 } },\n     *   //       { key: [50, 75], value: { r: 56, g: 166, b: 165, a: 1 } },\n     *   //       { key: [100, +Infinity], value: { r: 15, g: 133, b: 84, a: 1 } }\n     *   //     ]\n     *   // }\n     * });\n     *\n     * @memberof expressions.Ramp\n     * @name getLegendData\n     * @instance\n     * @api\n     */\n}\n","import { checkType, mix, fract, clamp } from './utils';\n\nimport Property from './basic/property';\nimport Linear from './linear';\nimport CIELabGLSL from './color/CIELab.glsl';\nimport CategoryIndex from './CategoryIndex';\nimport { OTHERS_GLSL_VALUE, OTHERS_INDEX, DEFAULT_OPTIONS, DEFAULT_RAMP_OTHERS } from './constants';\nimport Palette from './color/palettes/Palette';\nimport Base from './base';\nimport Constant from './basic/constant';\nimport NamedColor from './color/NamedColor';\nimport ClusterAggregation from './aggregation/cluster/ClusterAggregation';\n\nexport default class RampGeneric extends Base {\n    _bindMetadata (metadata) {\n        const DEFAULT_RAMP_OTHERS_NUMBER = new Constant(1);\n        const DEFAULT_RAMP_OTHERS_COLOR = new NamedColor('gray');\n\n        super._bindMetadata(metadata);\n\n        this.type = this.palette.childType;\n        if (this.others === DEFAULT_RAMP_OTHERS) {\n            this.others = this.palette.type === 'number-list'\n                ? DEFAULT_RAMP_OTHERS_NUMBER\n                : DEFAULT_RAMP_OTHERS_COLOR;\n            this.others._bindMetadata(metadata);\n        } else {\n            this.others._bindMetadata(metadata);\n            checkType('ramp', 'others', 2, this.palette.childType, this.others);\n        }\n\n        if (this.input.isA(Property) || this.input.isA(ClusterAggregation)) {\n            this.input = this.input.type === 'number'\n                ? new Linear(this.input)\n                : new CategoryIndex(this.input);\n\n            this.input._bindMetadata(metadata);\n        }\n\n        checkType('ramp', 'input', 0, ['number', 'category'], this.input);\n\n        this.childrenNames.push('others');\n        this._metadata = metadata;\n    }\n\n    eval (feature) {\n        const input = this.input.eval(feature);\n        return this._calcEval(input, feature);\n    }\n\n    _calcEval (input, feature) {\n        const { palette, others } = this._getPalette();\n        const paletteValues = this.palette.isA(Palette)\n            ? palette.map((color) => color.eval(feature))\n            : this.palette.eval(feature);\n\n        if (input === OTHERS_INDEX) {\n            return others.eval(feature);\n        }\n\n        const maxValues = paletteValues.length - 1;\n        const min = Math.floor(input * maxValues);\n        const max = Math.ceil(input * maxValues);\n\n        const clampMin = clamp(min, 0, maxValues);\n        const clampMax = clamp(max, 0, maxValues);\n        const m = fract(input * maxValues);\n\n        return mix(paletteValues[clampMin], paletteValues[clampMax], m);\n    }\n\n    get value () {\n        return this.eval();\n    }\n\n    getLegendData (options) {\n        const config = Object.assign({}, DEFAULT_OPTIONS, options);\n        const type = this.input.type;\n        const legendData = this.input.getLegendData(config);\n        const data = legendData.data.map(({ key, value }) => {\n            value = this._calcEval(value, undefined);\n            return { key, value };\n        });\n\n        return { type, ...legendData, data };\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const input = this.input._applyToShaderSource(getGLSLforProperty);\n        const { palette, others } = this._getPalette();\n        const GLSLPalette = palette.map(color => color._applyToShaderSource(getGLSLforProperty));\n        const GLSLOthers = others._applyToShaderSource(getGLSLforProperty);\n        const GLSLBlend = this.palette.type === 'number-list'\n            ? _getInlineGLSLBlend(GLSLPalette)\n            : _getInlineColorGLSLBlend(GLSLPalette);\n\n        const rampFnReturnType = this.palette.type === 'number-list' ? 'float' : 'vec4';\n        const inline = `ramp_color${this._uid}(${input.inline})`;\n\n        const preface = this._prefaceCode(`\n            ${input.preface}\n            ${CIELabGLSL}\n            ${GLSLPalette.map(elem => elem.preface).join('\\n')}\n            ${GLSLOthers.preface}\n\n            ${rampFnReturnType} ramp_color${this._uid}(float x){\n                return x==${OTHERS_GLSL_VALUE}\n                    ? ${GLSLOthers.inline}\n                    : ${GLSLBlend};\n            }`\n        );\n\n        return { preface, inline };\n    }\n\n    _getPalette () {\n        return this.palette.isA(Palette)\n            ? this._getColorPalette()\n            : { palette: this.palette.elems, others: this.others };\n    }\n\n    _getColorPalette () {\n        const subPalette = this.palette.getColors(this.input.numCategoriesWithoutOthers);\n\n        return {\n            palette: subPalette.colors,\n            others: this._defaultOthers && subPalette.othersColor ? subPalette.othersColor : this.others\n        };\n    }\n}\n\nfunction _getInlineGLSLBlend (GLSLPalette) {\n    return _generateGLSLBlend(GLSLPalette.map(elem => elem.inline));\n}\n\nfunction _getInlineColorGLSLBlend (GLSLPalette) {\n    return `cielabToSRGBA(${_generateGLSLBlend(GLSLPalette.map(elem => `sRGBAToCieLAB(${elem.inline})`))})`;\n}\n\nfunction _generateGLSLBlend (list, index = 0) {\n    const currentValue = list[index];\n\n    if (index === list.length - 1) {\n        return currentValue;\n    }\n\n    const nextBlend = _generateGLSLBlend(list, index + 1);\n\n    return _mixClampGLSL(currentValue, nextBlend, index, list.length);\n}\n\nfunction _mixClampGLSL (currentValue, nextBlend, index, listLength) {\n    const min = (index / (listLength - 1)).toFixed(20);\n    const max = (1 / (listLength - 1)).toFixed(20);\n    const clamp = `clamp((x - ${min})/${max}, 0., 1.)`;\n\n    return `mix(${currentValue}, ${nextBlend}, ${clamp})`;\n}\n","import defaultSVGs from '../defaultSVGs';\nimport { checkType, checkInstance } from './utils';\nimport Property from './basic/property';\nimport CategoryIndex from './CategoryIndex';\nimport ListImage from './ListImage';\nimport Image from './Image';\nimport Base from './base';\nimport { OTHERS_GLSL_VALUE, DEFAULT_RAMP_OTHERS } from './constants';\n\nconst DEFAULT_RAMP_OTHERS_IMAGE = new Image(defaultSVGs.circle);\nexport default class RampImage extends Base {\n    _bindMetadata (metadata) {\n        Base.prototype._bindMetadata.call(this, metadata);\n        this.type = this.palette.childType;\n\n        checkType('ramp', 'input', 0, 'category', this.input);\n        checkInstance('ramp', 'palette', 1, ListImage, this.palette);\n\n        if (this.others === DEFAULT_RAMP_OTHERS) {\n            this.others = DEFAULT_RAMP_OTHERS_IMAGE;\n        } else {\n            checkType('ramp', 'others', 2, 'image', this.others);\n        }\n\n        if (this.input.isA(Property)) {\n            this.input = new CategoryIndex(this.input);\n            this.input._bindMetadata(metadata);\n        }\n\n        this.others._bindMetadata(metadata);\n        this.childrenNames.push('others');\n    }\n\n    get value () {\n        return this.eval();\n    }\n\n    eval (feature) {\n        const index = this.input.eval(feature);\n        return this._calcEval(index);\n    }\n\n    _calcEval (input) {\n        const index = Math.round(input * (this.input.numCategoriesWithoutOthers - 1));\n        const paletteValues = this.palette.eval();\n        return paletteValues[index] || this.others.eval();\n    }\n\n    getLegendData (options) {\n        const type = this.input.type;\n        const legendData = this.input.getLegendData(options);\n        const data = legendData.data.map(({ key, value }) => {\n            value = this._calcEval(value);\n            return { key, value };\n        });\n\n        return { type, ...legendData, data };\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const input = this.input._applyToShaderSource(getGLSLforProperty);\n        const images = this.palette._applyToShaderSource(getGLSLforProperty);\n        const others = this.others._applyToShaderSource(getGLSLforProperty);\n        return {\n            preface: this._prefaceCode(`\n                uniform float rampImageMultiplier${this._uid};\n\n                ${input.preface}\n                ${images.preface}\n                ${others.preface}\n\n                vec4 rampImage${this._uid}(vec2 imageUV, float index){\n                    if (index == ${OTHERS_GLSL_VALUE}){\n                        return ${others.inline};\n                    }\n                    return ${images.inline}(imageUV, rampImageMultiplier${this._uid}*index);\n                }\n            `),\n            inline: `rampImage${this._uid}(imageUV, ${input.inline})`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        super._postShaderCompile(program, gl);\n        this._getBinding(program)._multiplierLoc = gl.getUniformLocation(program, `rampImageMultiplier${this._uid}`);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        super._preDraw(program, drawMetadata, gl);\n        gl.uniform1f(this._getBinding(program)._multiplierLoc, this.input.numCategoriesWithoutOthers - 1);\n    }\n}\n","import Image from './Image';\nimport { checkMaxArguments } from './utils';\n\nexport default class SVG extends Image {\n    constructor (svg) {\n        checkMaxArguments(arguments, 1, 'svg');\n        // This doesn't work in Firefox for local SVG images\n        super(`data:image/svg+xml,${encodeURIComponent(svg)}`);\n    }\n}\n","import BaseExpression from './base';\nimport { mul, pow, div } from '../expressions';\nimport { implicitCast, checkType } from './utils';\n\n/**\n * Scale a width value to keep feature width constant in real space (meters).\n * This will change the width in pixels at different zoom levels to enforce the previous condition.\n *\n * @param {Number} width - pixel width at zoom level `zoomlevel`\n * @param {Number} [zoomlevel=0] - zoomlevel at which `width` is relative to\n * @return {Number}\n *\n * @example <caption>Keep feature width in meters constant with 25 pixels at zoom level 7.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.scaled(25, 7)\n * });\n *\n * @example <caption>Keep feature width in meters constant with 25 pixels at zoom level 7. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: s.scaled(25, 7)\n * `);\n *\n * @memberof carto.expressions\n * @name scaled\n * @function\n * @api\n */\nexport default class Scaled extends BaseExpression {\n    constructor (width, zoomlevel = 0) {\n        width = implicitCast(width);\n        zoomlevel = implicitCast(zoomlevel);\n\n        super({\n            scale: div(mul(width, 0), pow(2, zoomlevel))\n        });\n\n        this.type = 'number';\n        this.inlineMaker = inline => inline.scale;\n    }\n\n    get value () {\n        return this.scale.value;\n    }\n\n    eval (feature) {\n        return this.scale.eval(feature);\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkType('scaled', 'width', 0, 'number', this.scale.a.a);\n        checkType('scaled', 'zoomlevel', 1, 'number', this.scale.b);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        this.scale.a.b.value = Math.pow(2, drawMetadata.zoomLevel);\n        super._preDraw(program, drawMetadata, gl);\n    }\n}\n","import BaseExpression from './base';\nimport { pow, blend, linear, zoom } from '../expressions';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\nimport { implicitCast, checkType, checkExpression } from './utils';\n\n/**\n * Define a list of interpolated zoom ranges based on an input breakpoint list. Useful in combination with ramp (see examples).\n *\n * @param {Number[]} _zoomBreakpointList - list of zoom breakpoints with at least two elements\n * @return {Number}\n *\n * @example <caption>Set the width to 1 at zoom levels < 7, set the width at 20 at zoom levels > 10, interpolate between 1 and 20 at zoom levels in the [7,10] range.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.ramp(s.zoomrange([7, 10]), [1, 20])\n * });\n *\n * @example <caption>Set the width to 1 at zoom levels < 7, set the width at 20 at zoom levels > 10, interpolate between 1 and 20 at zoom levels in the [7,10] range. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: width: ramp(zoomrange([7, 10]), [1, 20])\n * `);\n *\n * @memberof carto.expressions\n * @name zoomrange\n * @function\n * @api\n */\nexport default class Zoomrange extends BaseExpression {\n    constructor (zoomBreakpointList) {\n        zoomBreakpointList = implicitCast(zoomBreakpointList);\n\n        super({});\n        checkExpression('zoomrange', 'zoomBreakpointList', 0, zoomBreakpointList);\n        this.type = 'number';\n        this._zoomBreakpointList = zoomBreakpointList;\n        this.inlineMaker = inline => inline._impostor;\n    }\n\n    _bindMetadata (metadata) {\n        this._zoomBreakpointList._bindMetadata(metadata);\n\n        checkType('zoomrange', 'zoomBreakpointList', 0, 'number-list', this._zoomBreakpointList);\n        if (this._zoomBreakpointList.elems.length < 2) {\n            throw new CartoValidationError('zoomrange() function must receive a list with at least two elements.', CartoValidationErrorTypes.INCORRECT_VALUE);\n        }\n\n        const breakpointListCopy = [...this._zoomBreakpointList.elems];\n\n        this._impostor = _genImpostor(breakpointListCopy, 0, breakpointListCopy.length - 1);\n        this.childrenNames.push('_impostor');\n        super._bindMetadata(metadata);\n    }\n\n    eval (feature) {\n        return this._impostor.eval(feature);\n    }\n\n    /**\n     * Get the zoomrange value\n     *\n     * @api\n     * @memberof expressions.Zoomrange\n     * @name value\n     * @return {Array} - Zoom range breakpoint list\n     */\n    get value () {\n        return this._zoomBreakpointList.elems.map(elem => elem.value);\n    }\n}\n\nfunction _genImpostor (list, numerator, denominator) {\n    if (list.length === 1) {\n        return 1;\n    }\n\n    const a = list[0];\n    const b = list[1];\n    list.shift();\n\n    return blend(numerator / denominator,\n        _genImpostor(list, numerator + 1, denominator),\n        linear(pow(2, zoom()), pow(2, a), pow(2, b))\n    );\n}\n","import BaseExpression from '../../base';\nimport PropertyExpression from '../../basic/property';\nimport { checkType, checkInstance, checkExpression } from '../../utils';\nimport * as schema from '../../../../schema';\nimport { aggregationTypes } from '../../../../../constants/metadata';\nexport default class ClusterAggregation extends BaseExpression {\n    constructor ({ property, expressionName, aggName, aggType }) {\n        checkExpression(expressionName, 'property', 0, property);\n\n        super({ property });\n        this._aggName = aggName;\n        this._expressionName = expressionName;\n        this.type = aggType;\n    }\n\n    get name () {\n        return this.property.name;\n    }\n\n    get propertyName () {\n        return schema.column.aggColumn(this.property.name, this._aggName);\n    }\n\n    get aggName () {\n        return this._aggName;\n    }\n\n    get numCategories () {\n        return this.property.numCategories;\n    }\n\n    get categories () {\n        return this.property.categories;\n    }\n\n    get value () {\n        return this.propertyName;\n    }\n\n    eval (feature) {\n        return feature[this.propertyName];\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this._metadata = metadata;\n        checkInstance(this._expressionName, 'property', 0, PropertyExpression, this.property);\n        checkType(this._expressionName, 'property', 0, this.type, this.property);\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        return {\n            preface: '',\n            inline: `${getGLSLforProperty(this.propertyName)}`\n        };\n    }\n\n    _postShaderCompile () {}\n\n    _getMinimumNeededSchema () {\n        return {\n            [this.property.name]: [{\n                type: aggregationTypes.AGGREGATED,\n                op: this._aggName\n            }]\n        };\n    }\n}\n","import ClusterAggregation from './ClusterAggregation';\nimport { checkMaxArguments } from '../../utils';\n/**\n * Aggregate using the average. This operation disables the access to the property\n * except within other cluster aggregate functions.\n *\n * Note: `clusterAvg` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number} property - Column of the table to be aggregated\n * @return {Number} Aggregated column\n *\n * @example <caption>Use cluster average of the population as width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.clusterAvg(s.prop('population'))\n * });\n *\n * @example <caption>Use cluster average of the population as width. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: clusterAvg($population)\n * `);\n *\n * @memberof carto.expressions\n * @name clusterAvg\n * @function\n * @api\n */\nexport default class ClusterAvg extends ClusterAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'clusterAvg');\n        super({ property, expressionName: 'clusterAvg', aggName: 'avg', aggType: 'number' });\n    }\n}\n","import BaseExpression from '../../base';\nimport { checkMaxArguments } from '../../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../../constants/metadata';\n\n/**\n * Count of features per cluster.\n *\n * The `clusterCount` expression has no input parameters and if data is not aggregated, it always returns 1.\n * It is not possible to use it as an input in global aggregations such as `globalMin` or `globalQuantiles`.\n *\n * @return {Number} Cluster feature count\n *\n * @example <caption>Use cluster count for width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.clusterCount() / 50\n * });\n *\n * @example <caption>Use cluster count for width. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: clusterCount() / 50\n * `);\n *\n * @example <caption>Use cluster count with viewportQuantiles in a ramp for width and color.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.viewportQuantiles(s.clusterCount(), 5), [1, 20])\n *   width: s.ramp(s.viewportQuantiles(s.clusterCount(), 5), s.palettes.PINKYL))\n * });\n * // Note: this is not possible with globalQuantiles\n *\n * @example <caption>Use cluster count with viewportQuantiles in a ramp for width and color. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: ramp(viewportQuantiles(clusterCount(), 5), [1, 20])\n *   color: ramp(viewportQuantiles(clusterCount(), 5), Pinkyl)\n * `);\n * // Note: this is not possible with globalQuantiles\n *\n * @memberof carto.expressions\n * @name clusterCount\n * @function\n * @api\n */\nexport default class ClusterCount extends BaseExpression {\n    constructor () {\n        checkMaxArguments(arguments, 0, 'clusterCount');\n        super({});\n        this.type = 'number';\n        this._hasClusterFeatureCount = false;\n    }\n\n    get propertyName () {\n        return CLUSTER_FEATURE_COUNT;\n    }\n\n    isFeatureDependent () {\n        return true;\n    }\n\n    eval (feature) {\n        return Number(feature[CLUSTER_FEATURE_COUNT]) || 1;\n    }\n\n    getLegendData () {\n        return {\n            data: this._hasClusterFeatureCount\n                ? this._metadata.properties[CLUSTER_FEATURE_COUNT]\n                : []\n        };\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this._metadata = metadata;\n        this._hasClusterFeatureCount = metadata.properties[CLUSTER_FEATURE_COUNT] !== undefined;\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        return {\n            preface: '',\n            inline: this._hasClusterFeatureCount ? getGLSLforProperty(CLUSTER_FEATURE_COUNT) : '1.'\n        };\n    }\n}\n","import ClusterAggregation from './ClusterAggregation';\nimport { checkMaxArguments } from '../../utils';\n\n/**\n * Aggregate using the maximum. This operation disables the access to the property\n * except within other cluster aggregate functions.\n *\n * Note: `clusterMax` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number} property - Column of the table to be aggregated\n * @return {Number} Aggregated column\n *\n * @example <caption>Use cluster maximum of the population as width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.clusterMax(s.prop('population'))\n * });\n *\n * @example <caption>Use cluster maximum of the population as width. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: clusterMax($population)\n * `);\n *\n * @memberof carto.expressions\n * @name clusterMax\n * @function\n * @api\n */\nexport default class ClusterMax extends ClusterAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'clusterMax');\n        super({ property, expressionName: 'clusterMax', aggName: 'max', aggType: 'number' });\n    }\n}\n","import ClusterAggregation from './ClusterAggregation';\nimport { checkMaxArguments } from '../../utils';\n/**\n * Aggregate using the minimum. This operation disables the access to the property\n * except within other cluster aggregate functions.\n *\n * Note: `clusterMin` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number} property - Column of the table to be aggregated\n * @return {Number} Aggregated column\n *\n * @example <caption>Use cluster minimum of the population as width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.clusterMin(s.prop('population'))\n * });\n *\n * @example <caption>Use cluster minimum of the population as width. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: clusterMin($population)\n * `);\n *\n * @memberof carto.expressions\n * @name clusterMin\n * @function\n * @api\n */\nexport default class ClusterMin extends ClusterAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'clusterMin');\n        super({ property, expressionName: 'clusterMin', aggName: 'min', aggType: 'number' });\n    }\n}\n","import ClusterAggregation from './ClusterAggregation';\nimport { checkMaxArguments } from '../../utils';\n/**\n * Aggregate using the mode. This operation disables the access to the property\n * except within other cluster aggregate functions.\n *\n * Note: `clusterMode` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Category} property - Column of the table to be aggregated\n * @return {Category} Aggregated column\n *\n * @example <caption>Use cluster mode of the population in a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.clusterMode(s.prop('category')), s.palettes.PRISM)\n * });\n *\n * @example <caption>Use cluster mode of the population in a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(clusterMode($category), PRISM)\n * `);\n *\n * @memberof carto.expressions\n * @name clusterMode\n * @function\n * @api\n */\nexport default class ClusterMode extends ClusterAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'clusterMode');\n        super({ property, expressionName: 'clusterMode', aggName: 'mode', aggType: 'category' });\n    }\n}\n","import ClusterAggregation from './ClusterAggregation';\nimport { checkMaxArguments } from '../../utils';\n/**\n * Aggregate using the sum. This operation disables the access to the property\n * except within other cluster aggregate functions.\n *\n * Note: `clusterSum` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number} property - Column of the table to be aggregated\n * @return {Number} Aggregated column\n *\n * @example <caption>Use cluster sum of the population as width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.clusterSum(s.prop('population'))\n * });\n *\n * @example <caption>Use cluster sum of the population as width. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: clusterSum($population)\n * `);\n *\n * @memberof carto.expressions\n * @name clusterSum\n * @function\n * @api\n */\nexport default class ClusterSum extends ClusterAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'clusterSum');\n        super({ property, expressionName: 'clusterSum', aggName: 'sum', aggType: 'number' });\n    }\n}\n","import ClusterTimeDimension from './ClusterTimeDimension';\nimport { checkExpression, checkMaxArguments, checkStringValue } from '../../utils';\n\n/**\n * Use discretised property as aggregate dimension. This operation disables the access to the property\n * except within `clusterTime` expressions with the same parameters.\n *\n * Note: `clusterTime` can only be created with a {@link carto.expressions.prop|carto.expressions.prop},\n * as the first parameter, not other expressions.\n *\n * When the units of resolution are cyclic periods such as 'dayOfWeek' (day of the week) or 'monthOfYear' (month of the year),\n * the resulting expression takes a numeric value to represent the period, e.g. 1 for Monday or January.\n *\n * When the units are not cyclic (e.g. 'week' or 'month'), the resulting expression is a `TimeRange` that\n * encompass each individual calendar period, for example week 2018-W03 (third week of 2018 from 2018-01-15 to 2018-01-21)\n * or 2018-03 (March 2018, from 2018-03-01 to 2018-04-01).\n *\n * Accepted values for cyclic resolution periods are:\n * - `semesterOfYear` (6-month term) takes values from 1 to 2\n * - `trimesterOfYear` (4-month term) takes values from 1 to 3\n * - `quarterOfYear` (3-month term) takes values from 1 to 4\n * - `monthOfYear` takes values from 1 (January) to 12 (December)\n * - `weekOfYear` follows [ISO 8601 numbering](https://en.wikipedia.org/wiki/ISO_week_date) taking values from 1 up to 53\n * - `dayOfWeek` (as per ISO 8601, 1 = Monday, to 7 = Sunday\n * - `dayOfMonth` takes values from 1 to 31\n * - `dayOfYear` takes values from 1 to 366\n * - `hourOfDay` takes values from 0 to 23\n * - `minuteOfHour` takes values from 0 to 59\n *\n * Accepted values for serial resolution units are:\n *\n * - `year`, e.g. '2017'\n * - `month`, e.g. '2017-03'\n * - `day`, e.g. '2017-03-01'\n * - `hour`, e.g. '2017-03-01T13'\n * - `minute`, e.g. '2017-03-01T13:22'\n * - `second`, e.g. '2017-03-01T13:22:31'\n * - `week` represented as '2018-W03' (third week of 2018:, 2018-01-15 to 2018-01-21)\n * - `quarter` as '2018-Q2' (second quarter of 2018, i.e. 2018-04 to 2018-06)\n * - `semester` as '2018S2' (second semester of 2018, i.e. 2018-07 to 2018-12)\n * - `trimester` as '2018t2' (second trimester of 2018, i.e. 2018-05 to 2018-08)\n * - `decade` as 'D201' (decade 201, i.e. 2010 to 2019)\n * - `century` as 'C21' (21st century, ie. 2001 to 2100)\n * - `millennium` as 'M3' (3rd millennium: 2001 to 3000)\n *\n * The time zone is optional. By default UTC time will be used.\n * It admits a fixed offset from UTC as a signed number of seconds,\n * or [IANA](https://www.iana.org/time-zones) timezone [names](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n * such as `America/New_York` or `Europe/Madrid`, which not only define a time offset,\n * but also rules for DST (daylight savings time).\n *\n * @param {Date} property - Column of the table to be discretised as dimension\n * @param {String} units - Units of resolution for the discretization\n * @param {String} timezone - Time zone in which the dates are discretised. UTC by default.\n * @return {TimeRange|Number} Dimension column; takes time range values (intervals) for serial units of resolutions and numbers for recurrent units.\n *\n * @example <caption>Use months as a dimension of the cluster aggregations as `month`.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   month: s.clusterTime(s.prop('date', 'month', 'America/New_York'))\n * });\n *\n * @example <caption>Use months as a dimension of the cluster aggregations as `month`. (String)</caption>\n * const viz = new carto.Viz(`\n *   month: clusterTime($date, 'month', 'America/New_York')\n * `);\n *\n * @memberof carto.expressions\n * @name clusterTime\n * @function\n * @api\n */\nexport default class ClusterTime extends ClusterTimeDimension {\n    constructor (property, units, timezone) {\n        const expressionName = 'clusterTime';\n        const isCyclic = ClusterTimeDimension.cyclicUnits.includes(units);\n        checkMaxArguments(arguments, 3, expressionName);\n        checkExpression(expressionName, 'property', 0, property);\n        const validUnits = isCyclic ? ClusterTimeDimension.cyclicUnits : ClusterTimeDimension.serialUnits;\n        checkStringValue(expressionName, 'units', 1, units, validUnits);\n        super({\n            property,\n            expressionName,\n            dimension: {\n                group: {\n                    units: units,\n                    timezone\n                },\n                format: isCyclic ? 'number' : 'iso'\n            },\n            type: isCyclic ? 'number' : 'timerange',\n            range: isCyclic ? undefined : []\n        });\n    }\n    converse (v) {\n        return v;\n    }\n}\n","import BaseExpression from '../../base';\nimport PropertyExpression from '../../basic/property';\nimport { checkType, checkInstance, checkExpression } from '../../utils';\nimport * as schema from '../../../../schema';\n\nconst SERIAL_UNITS = [\n    'second', 'minute', 'hour',\n    'day', 'month', 'year',\n    'week', 'quarter', 'trimester', 'semester',\n    'decade', 'century', 'millennium'\n];\n\nconst CYCLIC_UNITS = [\n    'dayOfYear', 'weekOfYear', 'monthOfYear', 'quarterOfYear',\n    'dayOfMonth', 'dayOfWeek',\n    'hourOfDay', 'minuteOfHour'\n];\n\n// TODO: generalize with base clusterDimension\nexport default class clusterTimeDimension extends BaseExpression {\n    constructor ({ property, expressionName, dimension, type, range }) {\n        checkExpression(expressionName, 'property', 0, property);\n        super({ property });\n        this._dimension = dimension;\n        this._dimension.propertyName = schema.column.dimColumn(this.property.propertyName, this._dimension.group.units);\n        this._expressionName = expressionName;\n        this.type = type;\n        this._range = range;\n    }\n\n    static get serialUnits () {\n        return SERIAL_UNITS;\n    }\n\n    static get cyclicUnits () {\n        return CYCLIC_UNITS;\n    }\n\n    get name () {\n        return this.property.propertyName;\n    }\n\n    get propertyName () {\n        return this._dimension.propertyName;\n    }\n\n    get value () {\n        return {\n            name: this.propertyName,\n            range: this._range,\n            dimension: this._dimension\n        };\n    }\n\n    eval (feature) {\n        return feature[this.propertyName];\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkInstance(this._expressionName, 'property', 0, PropertyExpression, this.property);\n        checkType(this._expressionName, 'property', 0, 'date', this.property);\n        this._range = metadata.properties[metadata.baseName(this.propertyName)].dimension.range;\n    }\n\n    _resolveAliases () {}\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const inline = this._range\n            ? this._range.map(propertyName => [\n                `${getGLSLforProperty(propertyName)}`\n            ])\n            : `${getGLSLforProperty(this.propertyName)}`;\n\n        return {\n            preface: '',\n            inline\n        };\n    }\n\n    _postShaderCompile () {}\n\n    _getMinimumNeededSchema () {\n        return {\n            [this.name]: [{\n                type: 'dimension',\n                dimension: this._dimension,\n                range: !!this._range\n            }]\n        };\n    }\n}\n","import BaseExpression from '../../base';\nimport { number } from '../../../expressions';\nimport { implicitCast } from '../../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../../errors/carto-validation-error';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../../constants/metadata';\n\n/**\n * Global aggregation expressions compute summary stats of properties for the whole dataset.\n * As such, they rely on data provided by the backend, and not on the possibly incomplete\n * set of features transferred to the client.\n *\n * In addition, the properties used in the visualization may have been aggregated into\n * clusters, if *cluster* aggregation expressions have been used.\n *\n * Since cluster aggregation is zoom-level-dependant (because the cluster size varies with\n * the zoom level), global aggregates cannot be assigned definite values for\n * cluster-aggregated properties in general.\n *\n * In some specific cases it possible to assign a defined value to the combination of a\n * global aggregation and a cluster aggregation. Such is the case with\n * `globalMin(clusterMin($p))`, `globalMax(clusterMax($p))`,\n * `globalSum(clusterCount($column))` and `globalSum(clusterSum($column))`.\n *\n * In the interest of allowing the use of `linear` without explicit limits in as many cases\n * as possible, we should make `globalMin()` and `globalMax()`, which are used\n * to compute the automatic linear limits, work with as many cluster expressions as possible,\n * to allow the convenient use of cluster aggregations in simple linear expressions.\n *\n * For that reason we'll allow global aggregations to work not only with those cluster\n * aggregations that yield definite values, but also for other cases in which we can\n * efficiently compute (with the available backend stats) the limit value for high zoom\n * level; and only in cases with fast monotonic convergence (which is not the case for example\n * for `globalSum(clusterMin($p)))` or `globalMin(clusterSum($p))`).\n *\n * Here's a table of global-cluster aggregation combinations showing which cases\n * have been implemented (the rest produce invalid input errors). Columns are cluster\n * aggregations and rows are global aggregations. Each cell shows the metadata stat\n * used to compute the combinations. For the cases varying per zoom level a tilde prefixes\n * the stat, two tildes for the more questionable cases.\n *\n * |         | c-Avg   | c-Count | c-Max   | c-Min   | c-Mode | c-Sum |\n * |---------|---------|---------|---------|---------|--------|-------|\n * | g-Avg   |   ~avg  |   ERR   |   ERR   |   ERR   |   ERR  |   ERR |\n * | g-Max   |   ~max  |   ERR   |   max   |  ~~max  |   ERR  |   ERR |\n * | g-Min   |   ~min  |   ERR   |  ~~min  |   min   |   ERR  |   ERR |\n * | g-Sum   |   ERR   |   count |   ERR   |   ERR   |   ERR  |   sum |\n *\n */\n\nexport default class GlobalAggregation extends BaseExpression {\n    /**\n     * @param {*} property\n     * @param {*} name\n     */\n    constructor ({ property, name, type, baseStats = false }) {\n        super({ _value: number(0) });\n        this.property = implicitCast(property);\n        this._name = name;\n        this.type = type;\n        this.baseStats = baseStats;\n        super.inlineMaker = inline => inline._value;\n    }\n\n    toString () {\n        return `${this.expressionName}(${this.property.toString()})`;\n    }\n\n    isFeatureDependent () {\n        return false;\n    }\n\n    get value () {\n        return this._value.value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    _resolveAliases (aliases) {\n        if (this.property) {\n            this.property._resolveAliases(aliases);\n        }\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this.property._bindMetadata(metadata);\n        const propertyName = this.property.name || this.property.propertyName;\n        const value = this._getValueFromStats(metadata, propertyName);\n        this._value.value = metadata.codec(propertyName).sourceToExternal(metadata, value);\n    }\n\n    _getValueFromStats (metadata, propertyName) {\n        let value;\n\n        if (this.baseStats) {\n            if (this.baseStats === '_count') {\n                value = metadata.featureCount;\n            } else {\n                const stats = metadata.stats(this.property.name);\n                value = stats && stats[this.baseStats];\n            }\n        } else {\n            if (propertyName === CLUSTER_FEATURE_COUNT) {\n                throw new CartoValidationError(CartoValidationErrorTypes.INCORRECT_TYPE, `'clusterCount' can not be used in ${this.expressionName}.`);\n            }\n            const stats = metadata.stats(propertyName);\n            value = stats && stats[this._name];\n        }\n\n        if (value === undefined) {\n            throw new CartoValidationError(\n                `Metadata ${this._name} for property ${propertyName} is not defined`,\n                CartoValidationErrorTypes.MISSING_REQUIRED\n            );\n        }\n\n        return value;\n    }\n\n    _getMinimumNeededSchema () {\n        return this.property._getMinimumNeededSchema();\n    }\n}\n","import GlobalAggregation from './GlobalAggregation';\nimport { checkMaxArguments, checkType } from '../../utils';\n\nimport ClusterAggregation from '../cluster/ClusterAggregation';\nimport ClusterAvg from '../cluster/ClusterAvg';\n\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../../errors/carto-validation-error';\n\n/**\n * Return the average of the feature property for the entire source data.\n *\n * Note: `globalAvg` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number} property - property expression of number type\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the global average of the `amount` property to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      g_avg: s.globalAvg(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the global average of the `amount` property to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@g_avg: globalAvg($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name globalAvg\n * @function\n * @api\n */\nexport default class GlobalAvg extends GlobalAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'globalAvg');\n        let baseStats = false;\n        if (property && property.isA(ClusterAggregation)) {\n            if (property.isA(ClusterAvg)) {\n                // This is not strictly correct (the average of cluster averages is not the average of data)\n                // but we'll allow it\n                baseStats = 'avg';\n            } else {\n                throw new CartoValidationError(\n                    'Invalid globlalAvg input',\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n        }\n\n        super({ property, name: 'avg', type: 'number', baseStats });\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkType(this.expressionName, 'property', 0, 'number', this.property);\n    }\n}\n","import GlobalAggregation from './GlobalAggregation';\nimport { checkMaxArguments } from '../../utils';\n\n/**\n * Return the feature count for the entire source data.\n *\n * @return {Number} feature count\n *\n * @example <caption>Assign the global count of features to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      g_count: s.globalCount()\n *   }\n * });\n *\n * @example <caption>Assign the global count of features. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@g_count: globalCount()\n * `);\n *\n * @memberof carto.expressions\n * @name globalCount\n * @function\n * @api\n */\nexport default class GlobalCount extends GlobalAggregation {\n    constructor () {\n        checkMaxArguments(arguments, 0, 'globalCount');\n        super({ name: 'count', type: 'number' });\n    }\n\n    toString () {\n        return `${this.expressionName}()`;\n    }\n\n    _bindMetadata (metadata) {\n        this._value.value = metadata.featureCount;\n    }\n\n    _getMinimumNeededSchema () {\n        return {};\n    }\n}\n","import GlobalAggregation from './GlobalAggregation';\nimport { checkMaxArguments } from '../../utils';\n\nimport ClusterAggregation from '../cluster/ClusterAggregation';\nimport ClusterAvg from '../cluster/ClusterAvg';\nimport ClusterMax from '../cluster/ClusterMax';\nimport ClusterMin from '../cluster/ClusterMin';\n\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../../errors/carto-validation-error';\n\n/**\n * Return the maximum of the feature property for the entire source data.\n *\n * Note: `globalMax` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number|Date} property - property expression of date or number type\n * @return {Number|Date} Result of the aggregation\n *\n * @example <caption>Assign the global maximum of the `amount` property to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      g_max: s.globalMax(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the global maximum of the `amount` property to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@g_max: globalMax($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name globalMax\n * @function\n * @api\n */\nexport default class GlobalMax extends GlobalAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'globalMax');\n\n        let baseStats = false;\n        if (property && property.isA(ClusterAggregation)) {\n            if (property.isA(ClusterAvg) || property.isA(ClusterMin) || property.isA(ClusterMax)) {\n                // This is not correct for ClusterAvg, and specially not for clusterMin...\n                // but we allow for it\n                baseStats = 'max';\n            } else {\n                throw new CartoValidationError(\n                    'Invalid globlalAvg input',\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n        }\n\n        super({ property, name: 'max', type: 'number', baseStats });\n    }\n}\n","import GlobalAggregation from './GlobalAggregation';\nimport { checkMaxArguments } from '../../utils';\n\nimport ClusterAggregation from '../cluster/ClusterAggregation';\nimport ClusterAvg from '../cluster/ClusterAvg';\nimport ClusterMax from '../cluster/ClusterMax';\nimport ClusterMin from '../cluster/ClusterMin';\n\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../../errors/carto-validation-error';\n\n/**\n * Return the minimum of the feature property for the entire source data.\n *\n * Note: `globalMin` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number|Date} property - property expression of date or number type\n * @return {Number|Date} Result of the aggregation\n *\n * @example <caption>Assign the global minimum of the `amount` property to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      g_min: s.globalMin(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the global minimum of the `amount` property to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@g_min: globalMin($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name globalMin\n * @function\n * @api\n */\nexport default class GlobalMin extends GlobalAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'globalMin');\n\n        // FIXME: type should actually be the property type (number/date)\n        // but if a variable it's too soon to know here\n\n        let baseStats = false;\n        if (property && property.isA(ClusterAggregation)) {\n            if (property.isA(ClusterAvg) || property.isA(ClusterMin) || property.isA(ClusterMax)) {\n                // This is not correct for ClusterAvg, and specially not for clusterMax...\n                // but we allow for it\n                baseStats = 'min';\n            } else {\n                throw new CartoValidationError(\n                    'Invalid globlalAvg input',\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n        }\n\n        super({ property, name: 'min', type: 'number', baseStats });\n    }\n}\n","import BaseExpression from '../../base';\nimport { number } from '../../../expressions';\nimport { checkMaxArguments, checkExpression, implicitCast, checkType, checkInstance, checkFeatureIndependent } from '../../utils';\nimport Property from '../../basic/property';\n/**\n * Return the Nth percentile of an numeric property for the entire source data.\n *\n * @param {Number} property - numeric property\n * @param {Number} percentile - Numeric expression in the [0, 100] range, must be feature independent\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the 90th percentile of the `amount` property for the entire dataset to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_percentile: s.globalPercentile(s.prop('amount'), 90)\n *   }\n * });\n *\n * @example <caption>Assign the 90th percentile of the `amount` property for the entire dataset to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_percentile: globalPercentile($amount, 90)\n * `);\n *\n * @memberof carto.expressions\n * @name globalPercentile\n * @function\n * @api\n */\nexport default class GlobalPercentile extends BaseExpression {\n    constructor (property, percentile) {\n        checkMaxArguments(arguments, 2, 'globalPercentile');\n        property = implicitCast(property);\n        percentile = implicitCast(percentile);\n        checkExpression('globalPercentile', 'property', 0, property);\n        checkExpression('globalPercentile', 'percentile', 1, percentile);\n\n        super({ _value: number(0), property, percentile });\n        this.type = 'number';\n        super.inlineMaker = inline => inline._value;\n    }\n\n    isFeatureDependent () {\n        return false;\n    }\n\n    get value () {\n        const p = this.percentile.value / 100;\n        return this._copySample[Math.floor(p * this._copySample.length)];\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkType('globalPercentile', 'property', 0, 'number', this.property);\n        checkType('globalPercentile', 'percentile', 0, 'number', this.percentile);\n        checkInstance('globalPercentile', 'property', 0, Property, this.property);\n        checkFeatureIndependent('globalPercentile', 'percentile', 1, this.percentile);\n\n        this._copySample = metadata.sample.map(s => s[this.property.propertyName]);\n        this._copySample.sort((x, y) => x - y);\n    }\n\n    _preDraw (...args) {\n        this._value.value = this.value;\n        super._preDraw(...args);\n    }\n\n    _getMinimumNeededSchema () {\n        return this.property._getMinimumNeededSchema();\n    }\n}\n","import GlobalAggregation from './GlobalAggregation';\nimport { checkMaxArguments } from '../../utils';\n\nimport ClusterAggregation from '../cluster/ClusterAggregation';\nimport ClusterCount from '../cluster/ClusterCount';\nimport ClusterSum from '../cluster/ClusterSum';\n\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../../errors/carto-validation-error';\n\n/**\n * Return the sum of the feature property for the entire source data.\n *\n * Note: `globalSum` can only be created by {@link carto.expressions.prop|carto.expressions.prop}, not other expressions.\n *\n * @param {Number} property - property expression of number type\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the global sum of the `amount` property to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      g_sum: s.globalSum(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the global sum of the `amount` property to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@g_sum: globalSum($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name globalSum\n * @function\n * @api\n */\nexport default class GlobalSum extends GlobalAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'globalSum');\n        const type = property.type;\n        let baseStats = false;\n        if (property && (property.isA(ClusterAggregation) || property.isA(ClusterCount))) {\n            if (property.isA(ClusterSum)) {\n                baseStats = 'sum';\n            } else if (property.isA(ClusterCount)) {\n                baseStats = '_count';\n            } else {\n                throw new CartoValidationError(\n                    'Invalid globlalAvg input',\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n        }\n\n        super({ property, name: 'sum', baseStats, type });\n    }\n}\n","\nimport { FILTERING_THRESHOLD } from '../../../../Renderer';\nimport ViewportFeatures from '../../viewportFeatures';\nimport { GEOMETRY_TYPE } from '../../../../../utils/geometry';\n\n/**\n * Run all viewport aggregation functions over the visible features in the renderLayer\n */\nexport function runViewportAggregations (renderLayer) {\n    const viewportExpressions = _getViewportExpressions(renderLayer.viz._getRootExpressions());\n    if (!viewportExpressions.length) {\n        return;\n    }\n\n    _reset(viewportExpressions, renderLayer);\n    _runInActiveDataframes(viewportExpressions, renderLayer);\n}\n\n/**\n * Perform a DFS (Depth First Search) through the expression tree collecting all viewport expressions.\n * This is a performance optimization to avoid doing DFS at each feature iteration\n */\nfunction _getViewportExpressions (rootExpressions) {\n    const viewportExpressions = [];\n\n    function dfs (expr) {\n        if (expr._isViewport) {\n            viewportExpressions.push(expr);\n        } else {\n            expr._getChildren().map(dfs);\n        }\n    }\n\n    rootExpressions.map(dfs);\n\n    return viewportExpressions;\n}\n\n/**\n * Reset previous viewport aggregation function values.\n * It assumes that all dataframes of the renderLayer share the same metadata\n */\nfunction _reset (viewportExpressions, renderLayer) {\n    const metadata = renderLayer.viz.metadata;\n    viewportExpressions.forEach(expr => expr._resetViewportAgg(metadata, renderLayer));\n}\n\n/**\n * Run all viewport aggregations in the active dataframes\n */\nfunction _runInActiveDataframes (viewportExpressions, renderLayer) {\n    const dataframes = renderLayer.getActiveDataframes();\n    const inViewportFeaturesIDs = _runInDataframes(viewportExpressions, renderLayer, dataframes);\n\n    _runImprovedForPartialFeatures(viewportExpressions, renderLayer, inViewportFeaturesIDs);\n}\n\n/**\n * Run all viewport aggregations in the dataframes, and returns a list of featureIDs inside the\n * viewport & not filtered out. That's a list of the features effectively included in the viewportExpressions run\n */\nfunction _runInDataframes (viewportExpressions, renderLayer, dataframes) {\n    const processedFeaturesIDs = new Set(); // same feature can belong to multiple dataframes\n    const viz = renderLayer.viz;\n\n    const inViewportFeaturesIDs = new Set();\n    dataframes.forEach(dataframe => {\n        _runInDataframe(viz, viewportExpressions, dataframe, processedFeaturesIDs, inViewportFeaturesIDs);\n    });\n    return inViewportFeaturesIDs;\n}\n\n/**\n * Run an improved viewportFeatures just for lines or polygons (considering the existence of partial Features)\n */\nfunction _runImprovedForPartialFeatures (viewportExpressions, renderLayer, inViewportFeaturesIDs) {\n    const noFeatures = (inViewportFeaturesIDs.size === 0);\n    if (noFeatures) {\n        return;\n    }\n\n    const noPossiblePartialFeatures = (renderLayer.viz.geometryType === GEOMETRY_TYPE.POINT);\n    if (noPossiblePartialFeatures) {\n        return;\n    }\n\n    const viewportFeaturesExpressions = viewportExpressions.filter(exp => exp.isA(ViewportFeatures));\n    if (viewportFeaturesExpressions.length > 0) {\n        _runForPartialViewportFeatures(viewportFeaturesExpressions, renderLayer, inViewportFeaturesIDs);\n    }\n}\n\n/**\n * Run viewport aggregations in the dataframe. It excludes features:\n *    - already accumulated in other dataframes\n *    - outside the viewport\n *    - filtered out\n */\nfunction _runInDataframe (viz, viewportExpressions, dataframe, processedFeaturesIDs, inViewportFeaturesIDs) {\n    for (let i = 0; i < dataframe.numFeatures; i++) {\n        const idProperty = viz.metadata.idProperty;\n        const featureId = dataframe.properties[idProperty][i];\n\n        const featureAlreadyAccumulated = processedFeaturesIDs.has(featureId);\n        if (featureAlreadyAccumulated) {\n            continue; // This is correct for viewportExpressions related to 'alphanumeric' properties (not geometry-related)\n        }\n\n        const featureOutsideViewport = !dataframe.inViewport(i);\n        if (featureOutsideViewport) {\n            continue;\n        }\n\n        // a new feature, inside the viewport\n        processedFeaturesIDs.add(featureId);\n        const feature = dataframe.getFeature(i);\n\n        const featureIsFilteredOut = viz.filter.eval(feature) < FILTERING_THRESHOLD;\n        if (featureIsFilteredOut) {\n            continue;\n        }\n\n        inViewportFeaturesIDs.add(feature[idProperty]); // inViewport & in filter\n\n        // not a filtered feature, so pass the rawFeature to viewport expressions\n        viewportExpressions.forEach(expr => expr.accumViewportAgg(feature));\n    }\n}\n\n/**\n * Rerun viewportFeatures to improve its results, including all feature pieces in dataframes\n */\nfunction _runForPartialViewportFeatures (viewportFeaturesExpressions, renderLayer, featuresIDs) {\n    // Reset previous expressions with (possibly 1 partial) features\n    viewportFeaturesExpressions.forEach(expr => expr._resetViewportAgg(null, renderLayer));\n\n    // Gather all pieces per feature\n    const piecesPerFeature = renderLayer.getAllPiecesPerFeature(featuresIDs);\n\n    // Run viewportFeatures with the whole set of feature pieces\n    viewportFeaturesExpressions.forEach(expr => {\n        for (const featureId in piecesPerFeature) {\n            expr.accumViewportAgg(piecesPerFeature[featureId]);\n        }\n    });\n}\n","import BaseExpression from '../../base';\nimport { implicitCast } from '../../utils';\nimport { number } from '../../../expressions';\n\nexport default class ViewportAggregation extends BaseExpression {\n    /**\n     * @param {*} property\n     */\n    constructor ({ property }) {\n        property = implicitCast(property);\n        super({ property, _impostor: number(0) });\n        this._isViewport = true;\n        this.type = 'number';\n        this.inlineMaker = inline => inline._impostor;\n    }\n\n    _bindMetadata (metadata) {\n        // TODO improve type check\n        super._bindMetadata(metadata);\n    }\n\n    _getMinimumNeededSchema () {\n        return this.property._getMinimumNeededSchema();\n    }\n\n    _preDraw (...args) {\n        this._impostor.value = this.value;\n        super._preDraw(...args);\n    }\n}\n","import ViewportAggregation from './ViewportAggregation';\nimport { checkMaxArguments } from '../../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../../constants/metadata';\n\n/**\n * Return the average value of an expression for the features showed in the viewport (features outside the viewport and features that don't pass the filter will be excluded).\n *\n * @param {Number} input - numeric expression\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the average of the `amount` property in the viewport to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_avg: s.viewportAvg(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the average of the `amount` property in the viewport to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_avg: viewportAvg($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportAvg\n * @function\n * @api\n */\nexport default class ViewportAvg extends ViewportAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'viewportAvg');\n\n        super({ property });\n        this._sum = 0;\n        this._count = 0;\n    }\n\n    get value () {\n        return this._sum / this._count;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    accumViewportAgg (feature) {\n        const propertyValue = this.property.eval(feature);\n\n        if (propertyValue !== null) {\n            const clusterCount = feature[CLUSTER_FEATURE_COUNT] || 1;\n            this._count += clusterCount;\n            this._sum += clusterCount * propertyValue;\n        }\n    }\n\n    _resetViewportAgg () {\n        this._sum = 0;\n        this._count = 0;\n    }\n}\n","import ViewportAggregation from './ViewportAggregation';\nimport { number } from '../../../expressions';\nimport { checkMaxArguments } from '../../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../../constants/metadata';\n\n/**\n * Return the feature count of the features showed in the viewport (features outside the viewport and features that don't pass the filter will be excluded).\n *\n * @return {Number} feature count in the viewport\n *\n * @example <caption>Assign the feature count in the viewport to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_count: s.viewportCount()\n *   }\n * });\n *\n * @example <caption>Assign the feature count in the viewport to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_count: viewportCount()\n * `);\n *\n * @memberof carto.expressions\n * @name viewportCount\n * @function\n * @api\n */\nexport default class ViewportCount extends ViewportAggregation {\n    constructor () {\n        checkMaxArguments(arguments, 0, 'viewportCount');\n        super({ property: number(0) });\n        this._value = 0;\n    }\n\n    toString () {\n        return `${this.expressionName}()`;\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    accumViewportAgg (feature) {\n        const clusterCount = feature[CLUSTER_FEATURE_COUNT] || 1;\n        this._value += clusterCount;\n    }\n\n    _resetViewportAgg () {\n        this._value = 0;\n    }\n\n    _getMinimumNeededSchema () {\n        return {};\n    }\n}\n","import ViewportAggregation from './ViewportAggregation';\nimport { checkMaxArguments } from '../../utils';\n/**\n * Return the maximum value of an expression for the features showed in the viewport (features outside the viewport and features that don't pass the filter will be excluded).\n *\n * @param {Number} input - numeric expression\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the maximum of the `amount` property in the viewport to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_max: s.viewportMax(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the maximum of the `amount` property in the viewport to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_max: viewportMax($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportMax\n * @function\n * @api\n */\nexport default class ViewportMax extends ViewportAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'viewportMax');\n        super({ property });\n        this._value = Number.NEGATIVE_INFINITY;\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    accumViewportAgg (feature) {\n        const propertyValue = this.property.eval(feature);\n\n        if (propertyValue !== null) {\n            this._value = Math.max(this._value, propertyValue);\n        }\n    }\n\n    _resetViewportAgg () {\n        this._value = Number.NEGATIVE_INFINITY;\n    }\n}\n","import ViewportAggregation from './ViewportAggregation';\nimport { checkMaxArguments } from '../../utils';\n\n/**\n * Return the minimum value of an expression for the features showed in the viewport (features outside the viewport and features that don't pass the filter will be excluded).\n *\n * @param {Number} input - numeric expression\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the minimum of the `amount` property in the viewport to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_min: s.viewportMin(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the minimum of the `amount` property in the viewport to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_min: viewportMin($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportMin\n * @function\n * @api\n */\nexport default class ViewportMin extends ViewportAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'viewportMin');\n\n        super({ property });\n        this._value = Number.POSITIVE_INFINITY;\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    accumViewportAgg (feature) {\n        const propertyValue = this.property.eval(feature);\n\n        if (propertyValue !== null) {\n            this._value = Math.min(this._value, propertyValue);\n        }\n    }\n\n    _resetViewportAgg () {\n        this._value = Number.POSITIVE_INFINITY;\n    }\n}\n","import ViewportAggregation from './ViewportAggregation';\nimport { implicitCast, clamp, checkMaxArguments, checkType, checkExpression } from '../../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../../constants/metadata';\n/**\n * Return the Nth percentile of an expression for the features showed in the viewport (features outside the viewport and features that don't pass the filter will be excluded).\n *\n * @param {Number} input - Numeric expression\n * @param {Number} percentile - Numeric expression [0, 100]\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the percentile of the `amount` property in the viewport to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_percentile: s.viewportPercentile(s.prop('amount'), 90)\n *   }\n * });\n *\n * @example <caption>Assign the percentile of the `amount` property in the viewport to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_percentile: viewportPercentile($amount, 90)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportPercentile\n * @function\n * @api\n */\nexport default class ViewportPercentile extends ViewportAggregation {\n    /**\n     * @param {*} property\n     * @param {*} percentile\n     */\n    constructor (property, percentile) {\n        property = implicitCast(property);\n        percentile = implicitCast(percentile);\n\n        checkExpression('viewportPercentile', 'property', 0, property);\n        checkExpression('viewportPercentile', 'percentile', 0, percentile);\n        checkMaxArguments(arguments, 2, 'viewportPercentile');\n\n        super({ property });\n        this.percentile = percentile;\n        this.childrenNames.push('percentile');\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkType('viewportPercentile', 'property', 0, 'number', this.property);\n        checkType('viewportPercentile', 'percentile', 1, 'number', this.percentile);\n    }\n\n    get value () {\n        return _nearestRankMethod(this.percentile.value, this._total, this._values);\n    }\n\n    eval (feature) {\n        if (this._value === null) {\n            this._value = _nearestRankMethod(this.percentile.eval(feature), this._total, this._values);\n        }\n\n        return this._value;\n    }\n\n    get _values () {\n        return [...this._map.entries()];\n    }\n\n    _resetViewportAgg () {\n        this._value = null;\n        this._map = new Map();\n        this._total = 0;\n    }\n\n    accumViewportAgg (feature) {\n        const v = this.property.eval(feature);\n        const clusterCount = feature[CLUSTER_FEATURE_COUNT] || 1;\n        this._map.set(v, (this._map.get(v) || 0) + clusterCount);\n        this._total += clusterCount;\n    }\n}\n\nfunction _nearestRankMethod (value, total, values) {\n    const unclampedIndex = Math.ceil(value / 100 * total) - 1;\n    const index = clamp(unclampedIndex, 0, total - 1);\n\n    values.sort((a, b) => a[0] - b[0]);\n\n    let accum = 0;\n    for (let i = 0; i < values.length; i++) {\n        accum += values[i][1];\n        values[i][1] = accum;\n    }\n\n    return binarySearch(values, index, 0, values.length - 1);\n}\n\nfunction binarySearch (array, index, begin, end) {\n    const m = Math.round((begin + end) / 2);\n    const upper = array[m][1];\n    const lower = (array[m - 1] || [array[m][0] - 1, 0])[1];\n    if (index >= lower && index < upper) {\n        return array[m][0];\n    } else if (index < lower) {\n        return binarySearch(array, index, begin, m - 1);\n    } else {\n        return binarySearch(array, index, m + 1, end);\n    }\n}\n","import ViewportAggregation from './ViewportAggregation';\nimport { checkMaxArguments } from '../../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../../constants/metadata';\n\n/**\n * Return the sum of an expression for the features showed in the viewport (features outside the viewport and features that don't pass the filter will be excluded).\n *\n * @param {Number} input - numeric expression\n * @return {Number} Result of the aggregation\n *\n * @example <caption>Assign the sum of the `amount` property in the viewport to a variable.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *      v_sum: s.viewportSum(s.prop('amount'))\n *   }\n * });\n *\n * @example <caption>Assign the sum of the `amount` property in the viewport to a variable. (String)</caption>\n * const viz = new carto.Viz(`\n *   \\@v_sum: viewportSum($amount)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportSum\n * @function\n * @api\n */\nexport default class ViewportSum extends ViewportAggregation {\n    constructor (property) {\n        checkMaxArguments(arguments, 1, 'viewportSum');\n\n        super({ property });\n        this._value = 0;\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    accumViewportAgg (feature) {\n        const propertyValue = this.property.eval(feature);\n\n        if (propertyValue !== null) {\n            const clusterCount = feature[CLUSTER_FEATURE_COUNT] || 1;\n            this._value = this._value + clusterCount * propertyValue;\n        }\n    }\n\n    _resetViewportAgg () {\n        this._value = 0;\n    }\n}\n","import { implicitCast } from './utils';\nimport { blend, transition } from '../expressions';\nimport * as schema from '../../schema';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\nimport CartoRuntimeError from '../../../errors/carto-runtime-error';\n\n/**\n * CARTO VL Expression\n *\n * An expression is a function that is used to modify the visualization. All expressions are listed in  {@link carto.expressions}.\n *\n * Any expression can be used where an expression is required as long as the types match. This means that you can't use a numeric expression where a color expression is expected.\n *\n * @name Expression\n * @abstract\n * @hideconstructor\n * @class\n * @api\n */\nexport default class Base {\n    /**\n     * @hideconstructor\n     * @param {*} children\n     * @param {*} inlineMaker\n     * @param {*} preface\n     */\n    constructor (children) {\n        this._initializeChildren(children);\n        this.preface = '';\n        this._shaderBindings = new Map();\n        this.expressionName = _toCamelCase(this.constructor.name);\n        this._variableName = null;\n    }\n\n    /**\n     * Evaluate the expression providing a feature.\n     * This is particularly useful for making legends.\n     *\n     * @memberof Expression\n     * @param {Object} feature\n     * @returns {} result - result of evaluating the expression for the input feature\n     * @name eval\n     * @api\n     * @example\n     * const viz = new carto.Viz(`\n     *      color: red\n     *      width: sqrt($amount)\n     * `);\n     *\n     * const r = viz.width.eval({\n     *      amount: 16\n     * });\n     *\n     * // `r` value is `4`\n     *\n     * @example\n     * const viz = new carto.Viz(`\n     *      color: ramp(linear($amount), Emrld)\n     * `);\n     *\n     * const color = viz.color.eval({\n     *      amount: 123\n     * });\n     *\n     * // `color` will have the same color as the features with an amount of 123\n     *\n     */\n    eval () {\n        return this.value;\n    }\n\n    /**\n     * Get the expression value. It gets the data from the `getLegendData` method.\n     *\n     * @api\n     * @memberof Expression\n     * @name value\n    */\n    get value () {\n        throw new CartoRuntimeError('Must evaluate a feature using .eval(feature)');\n    }\n\n    /**\n     * Get the expression values\n     *\n     * @api\n     * @memberof Expression\n     * @name values\n     */\n    get values () {\n        return this.getLegendData().data;\n    }\n\n    /**\n     * Get the expression stringified\n     *\n     * @api\n     * @returns {String} Stringified expression\n     * @memberof Expression\n     * @instance\n     * @name toString\n     *\n     * @example <caption>Get the stringified expression of the viz color property.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   color: s.ramp(s.linear('amount'), s.palettes.PRISM)\n     * });\n     * console.log(viz.color.toString());\n     * // logs: \"ramp(linear($amount), Prism)\"\n     *\n     * @example <caption>Get the stringified expression of the viz color property. (String)</caption>\n     * const viz = new carto.Viz(`\n     *   color: ramp(linear($amount), Prism)\n     * `);\n     *\n     * console.log(viz.color.toString());\n     * // logs: \"ramp(linear($amount), Prism)\"\n     *\n     */\n    toString () {\n        return `${this.expressionName}(${this._getChildren().map(child => child.toString()).join(', ')})`;\n    }\n\n    /**\n     *\n     * @api\n     * @returns `true` if the evaluation of the expression may change without external action, `false` otherwise.\n     * @memberof Expression\n     * @instance\n     * @name isAnimated\n     */\n    isAnimated () {\n        return this._getChildren().some(child => child.isAnimated());\n    }\n\n    /**\n     *\n     * @api\n     * @returns `true` if the expression it is currently changing\n     * @memberof Expression\n     * @instance\n     * @name isPlaying\n     */\n    isPlaying () {\n        return this._getChildren().some(child => child.isPlaying());\n    }\n\n    /**\n     * Linear interpolate between `this` and `final` with the specified duration\n     *\n     * @api\n     * @param {Expression|string} final - Viz Expression or string to parse for a Viz expression\n     * @param {Expression} duration - duration of the transition in milliseconds\n     * @param {Expression} blendFunc\n     * @memberof Expression\n     * @instance\n     * @async\n     * @name blendTo\n     */\n    async blendTo (final, duration = 500) {\n        // The previous parsing of 'final' (if it is a string) is monkey-patched at parser.js to avoid a circular dependency\n        final = implicitCast(final);\n        this.keepDefaultsOnBlend && this.keepDefaultsOnBlend();\n        const parent = this.parent;\n        const blender = blend(this, final, transition(duration));\n        parent.replaceChild(this, blender);\n        blender.notify();\n    }\n\n    isA (expressionClass) {\n        return this instanceof expressionClass;\n    }\n\n    notify () {\n        return this.parent.notify();\n    }\n\n    accumViewportAgg (feature) {\n        this._getChildren().forEach(child => child.accumViewportAgg(feature));\n    }\n\n    loadImages () {\n        return Promise.all(this._getChildren().map(child => child.loadImages()));\n    }\n\n    get propertyName () {\n        return this._getChildren().map(child => child.propertyName).find(name => !!name);\n    }\n\n    /**\n     * Get information data from the expression.\n     *\n     * @api\n     * @memberof Expression\n     * @name getLegendData\n     * @typedef {String} PropertyName\n     * @typedef {Array} LegendData\n     * @returns {Object} - { PropertyName, LegendData }\n     * @instance\n    */\n    getLegendData () {\n        return {\n            name: this.propertyName,\n            data: []\n        };\n    }\n\n    _bindMetadata (metadata) {\n        this._getChildren().forEach(child => child._bindMetadata(metadata));\n    }\n\n    _initializeChildren (children) {\n        if (Array.isArray(children)) {\n            this._initializeChildrenArray(children);\n        } else {\n            this._initializeChildrenObject(children);\n        }\n        this._addParentToChildren();\n    }\n\n    _initializeChildrenArray (children) {\n        if (this.maxParameters && this.maxParameters < children.length) {\n            throw new CartoValidationError(\n                `Extra parameters, got ${children.length} but maximum is ${this.maxParameters}`,\n                CartoValidationErrorTypes.TOO_MANY_ARGS\n            );\n        }\n\n        this.childrenNames = [];\n\n        children.map((child, index) => {\n            const childName = `${child.type}-${index}`;\n            this.childrenNames.push(childName);\n            this[childName] = implicitCast(child);\n        });\n    }\n\n    _initializeChildrenObject (children) {\n        if (this.childrenNames === undefined) {\n            this.childrenNames = [];\n        }\n        this.childrenNames.push(...Object.keys(children));\n\n        if (this.maxParameters && this.maxParameters < this.childrenNames.length) {\n            throw new CartoValidationError(\n                CartoValidationErrorTypes.TOO_MANY_ARGS, `Extra parameters, got ${this.childrenNames.length} but maximum is ${this.maxParameters}`\n            );\n        }\n\n        Object.keys(children).map(name => {\n            this[name] = implicitCast(children[name]);\n        });\n    }\n\n    _addParentToChildren () {\n        this._getChildren().map(child => {\n            child.parent = this;\n        });\n    }\n\n    _setUID (idGenerator) {\n        this._uid = idGenerator.getID(this);\n        this._getChildren().map(child => child._setUID(idGenerator));\n    }\n\n    _dataReady () {\n        this._getChildren().map(child => child._dataReady());\n    }\n\n    isFeatureDependent () {\n        return this._getChildren().some(child => child.isFeatureDependent());\n    }\n\n    _prefaceCode (glslCode) {\n        return glslCode\n            ? `\\n${this._buildGLSLCode(glslCode)}\\n`\n            : '';\n    }\n\n    _buildGLSLCode (glslCode) {\n        return `\n            #ifndef DEF_${this._uid}\n            #define DEF_${this._uid}\n            ${glslCode}\n            #endif`;\n    }\n\n    _getDependencies () {\n        return this._getChildren().map(child => child._getDependencies()).reduce((x, y) => x.concat(y), []);\n    }\n\n    _resolveAliases (aliases) {\n        this._getChildren().map(child => child._resolveAliases(aliases));\n    }\n\n    _setGenericGLSL (inlineMaker, preface) {\n        this.inlineMaker = inlineMaker;\n        this.preface = (preface || '');\n    }\n\n    // Generate GLSL code\n    // @param {*} getGLSLforProperty  fn to get property IDs and inform of used properties\n    _applyToShaderSource (getGLSLforProperty) {\n        const childSources = this.childrenNames.map(name => this[name]._applyToShaderSource(getGLSLforProperty));\n        let childInlines = {};\n        childSources.map((source, index) => {\n            childInlines[this.childrenNames[index]] = source.inline;\n        });\n        return {\n            preface: this._prefaceCode(childSources.map(s => s.preface).reduce((a, b) => a + b, '') + this.preface),\n            inline: this.inlineMaker(childInlines, getGLSLforProperty)\n        };\n    }\n\n    // Inform about a successful shader compilation. One-time post-compilation WebGL calls should be done here.\n    _postShaderCompile (program, gl) {\n        this.childrenNames.forEach(name => this[name]._postShaderCompile(program, gl));\n    }\n\n    _getBinding (shader) {\n        if (!this._shaderBindings.has(shader)) {\n            this._shaderBindings.set(shader, {});\n        }\n        return this._shaderBindings.get(shader);\n    }\n\n    _resetViewportAgg (metadata) {\n        this._getChildren().forEach(child => child._resetViewportAgg(metadata));\n    }\n\n    // Pre-rendering routine. Should establish the current timestamp in seconds since an arbitrary point in time as needed.\n    // @param {number} timestamp\n    _setTimestamp (timestamp) {\n        this.childrenNames.forEach(name => this[name]._setTimestamp(timestamp));\n    }\n\n    // Pre-rendering routine. Should establish related WebGL state as needed.\n    _preDraw (...args) {\n        this.childrenNames.forEach(name => this[name]._preDraw(...args));\n    }\n\n    // Replace child *toReplace* by *replacer*\n    replaceChild (toReplace, replacer) {\n        const name = this.childrenNames.find(name => this[name] === toReplace);\n        this[name] = replacer;\n        replacer.parent = this;\n        replacer.notify = toReplace.notify;\n        replacer.notify().catch(() => { }); // ignore change rejections when using blend\n    }\n\n    _blendFrom (final, duration = 500, interpolator = null) {\n        if (this.default && final.default) {\n            return;\n        }\n        final = implicitCast(final);\n        const parent = this.parent;\n        const blender = blend(final, this, transition(duration), interpolator);\n        parent.replaceChild(this, blender);\n        blender.notify();\n    }\n\n    _getChildren () {\n        return this.childrenNames.map(name => this[name]);\n    }\n\n    _getMinimumNeededSchema () {\n        // Depth First Search => reduce using union\n        return this._getChildren().map(child => child._getMinimumNeededSchema()).reduce(schema.union, schema.IDENTITY);\n    }\n}\n\nfunction _toCamelCase (str) {\n    if (str.toUpperCase() === str) {\n        return str.toLowerCase();\n    }\n    return str.charAt(0).toLowerCase() + str.slice(1);\n}\n","import Base from '../base';\nimport { checkExpression, implicitCast, getOrdinalFromIndex, checkMaxArguments } from '../utils';\nimport ListImage from '../ListImage';\nimport ListGeneric from './ListGeneric';\nimport ListTransform from '../ListTransform';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\nconst SUPPORTED_CHILD_TYPES = ['number', 'category', 'color', 'date', 'image', 'transformation'];\n\n/**\n * Wrapper around arrays. Explicit usage is unnecessary since CARTO VL will wrap implicitly all arrays using this function.\n *\n * When used with Transformation expressions, the returned value will be a Transformation that will chain each single transformation one after another.\n *\n * @example <caption>Rotate then translate.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   symbol: s.CROSS\n *   transform: [s.rotate(90), s.translate(10, 20)]\n * });\n *\n * @example <caption>Rotate then translate. (String)</caption>\n * const viz = new carto.Viz(`\n *   symbol: cross\n *   transform: [rotate(90), translate(10, 20)]\n * `);\n *\n * @param {Number[]|Category[]|Color[]|Date[]|Image[]|Transform[]} elements\n * @returns {List|Transform}\n *\n * @memberof carto.expressions\n * @name list\n * @function\n * @api\n */\nexport default class List extends Base {\n    constructor (elems) {\n        checkMaxArguments(arguments, 1, 'list');\n\n        if (!elems) {\n            throw new CartoValidationError(\n                'list(): invalid parameters: must receive at least one argument.',\n                CartoValidationErrorTypes.MISSING_REQUIRED\n            );\n        }\n\n        if (!Array.isArray(elems)) {\n            elems = [elems];\n        }\n\n        elems = elems.map(implicitCast);\n\n        if (!elems.length) {\n            throw new CartoValidationError(\n                'list(): invalid parameters: must receive at least one argument.',\n                CartoValidationErrorTypes.MISSING_REQUIRED\n            );\n        }\n\n        elems.map((item, index) => {\n            checkExpression('list', `item[${index}]`, index, item);\n        });\n\n        super(elems);\n        this.elems = elems;\n        this.type = elems[0].type;\n    }\n\n    get value () {\n        return this.elems.map(elem => elem.value);\n    }\n\n    eval (feature) {\n        return this.elems.map(elem => elem.eval(feature));\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this._setTypes();\n\n        if (SUPPORTED_CHILD_TYPES.indexOf(this.childType) === -1) {\n            throw new CartoValidationError(\n                `list(): invalid parameters type: ${this.childType}.`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n\n        this.elems.map((item, index) => {\n            checkExpression('list', `item[${index}]`, index, item);\n\n            if (item.type !== this.childType) {\n                throw new CartoValidationError(\n                    `list(): invalid ${getOrdinalFromIndex(index + 1)} parameter type, invalid argument type combination.`,\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n        });\n\n        switch (this.elems[0].type) {\n            case 'image':\n                Object.setPrototypeOf(this, ListImage.prototype);\n                break;\n            case 'transformation':\n                Object.setPrototypeOf(this, ListTransform.prototype);\n                break;\n            default:\n                Object.setPrototypeOf(this, ListGeneric.prototype);\n                break;\n        }\n\n        return this._bindMetadata(metadata);\n    }\n\n    _setTypes () {\n        this.childType = this.elems[0].type;\n        this.type = `${this.childType}-list`;\n    }\n}\n","import BaseExpression from '../base';\n\nexport default class ListGeneric extends BaseExpression {\n    get value () {\n        return this.elems.map(c => c.value);\n    }\n\n    eval (feature) {\n        return this.elems.map(c => c.eval(feature));\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const childGLSL = this.elems.map(elem => elem._applyToShaderSource(getGLSLforProperty));\n        return {\n            preface: childGLSL.map(c => c.preface).join('\\n'),\n            inline: childGLSL.map(c => c.inline)\n        };\n    }\n}\n","import BaseExpression from '../base';\nimport { checkString, checkMaxArguments } from '../utils';\n\n/**\n * Wrapper around category names. Explicit usage is unnecessary since CARTO VL will wrap implicitly all strings using this function.\n *\n * @param {String} categoryName\n * @returns {Category} category expression with the name provided\n *\n * @memberof carto.expressions\n * @name category\n * @function\n * @IGNOREapi\n */\nexport default class BaseCategory extends BaseExpression {\n    constructor (categoryName) {\n        checkMaxArguments(arguments, 1, 'category');\n        checkString('category', 'categoryName', 0, categoryName);\n\n        super({});\n        this._value = categoryName;\n        this.type = 'category';\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    set value (value) {\n        this.value = value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    isAnimated () {\n        return false;\n    }\n\n    isPlaying () {\n        return false;\n    }\n\n    _bindMetadata (metadata) {\n        this._metadata = metadata;\n    }\n\n    _applyToShaderSource () {\n        return {\n            preface: this._prefaceCode(`uniform float cat${this._uid};\\n`),\n            inline: `cat${this._uid}`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._getBinding(program).uniformLocation = gl.getUniformLocation(program, `cat${this._uid}`);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        if (this._metadata) {\n            const id = this._metadata.categoryToID.get(this.value);\n            gl.uniform1f(this._getBinding(program).uniformLocation, id);\n        }\n    }\n}\n","import BaseExpression from '../base';\nimport { checkNumber, checkMaxArguments } from '../utils';\n\n/**\n * Wraps a constant number. Implies a GPU optimization vs {@link carto.expressions.number|number expression}.\n *\n * @param {number} x - A number to be warped in a constant numeric expression\n * @return {Number} Numeric expression\n *\n * @example <caption>Creating a constant number expression.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.constant(15)\n * });\n *\n * @example <caption>Creating a constant number expression. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: constant(15)\n * `);\n *\n * @memberof carto.expressions\n * @name constant\n * @function\n * @api\n */\nexport default class Constant extends BaseExpression {\n    constructor (x) {\n        checkMaxArguments(arguments, 1, 'constant');\n        checkNumber('constant', 'x', 0, x);\n\n        super({});\n        this._value = x;\n        this.type = 'number';\n        this.inlineMaker = () => `(${x.toFixed(20)})`;\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    set value (value) {\n        this._value = value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    toString () {\n        return `${this.value}`;\n    }\n}\n","import BaseExpression from '../base';\nimport { checkNumber, checkMaxArguments } from '../utils';\n\n/**\n * Wraps a number. Explicit usage is unnecessary since CARTO VL will wrap implicitly all numbers using this function.\n *\n * @param {number} x - A number to be warped in a numeric expression\n * @return {Number} Numeric expression\n *\n * @example <caption>Creating a number expression.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.number(15)  // Equivalent to `width: 15`\n * });\n *\n * @example <caption>Creating a number expression. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 15  // Equivalent to number(15)\n * `);\n *\n * @memberof carto.expressions\n * @name number\n * @function\n * @IGNOREapi\n */\nexport default class BaseNumber extends BaseExpression {\n    constructor (x) {\n        checkMaxArguments(arguments, 1, 'number');\n        checkNumber('number', 'x', 0, x);\n\n        super({});\n        this._value = x;\n        this.type = 'number';\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    set value (value) {\n        this._value = value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    toString () {\n        return `${this.value}`;\n    }\n\n    isAnimated () {\n        return false;\n    }\n\n    isPlaying () {\n        return false;\n    }\n\n    _applyToShaderSource () {\n        return {\n            preface: this._prefaceCode(`uniform float number${this._uid};`),\n            inline: `number${this._uid}`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._getBinding(program).uniformLocation = gl.getUniformLocation(program, `number${this._uid}`);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        gl.uniform1f(this._getBinding(program).uniformLocation, this.value);\n    }\n}\n","import BaseExpression from '../base';\nimport { checkString, checkMaxArguments } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\nimport { FP32_DESIGNATED_NULL_VALUE } from '../constants';\nimport { aggregationTypes } from '../../../../constants/metadata';\n/**\n * Evaluates the value of a column for every row in the dataset.\n *\n * For example think about a dataset containing 3 cities: Barcelona, Paris and London.\n * The `prop('name')` will return the name of the current city for every point in the dataset.\n *\n * @param {String} name - The property in the dataset that is going to be evaluated\n * @return {Number|Category|Date}\n *\n * @example <caption>Display only cities with name different from \"London\".</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *  filter: s.neq(s.prop('name'), 'london')\n * });\n *\n * @example <caption>Display only cities with name different from \"London\". (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: neq(prop('name'), 'london')\n * `);\n *\n * const viz = new carto.Viz(`\n *   filter: $name != 'london'\n * `);\n *\n * @memberof carto.expressions\n * @name prop\n * @function\n * @api\n */\nexport default class Property extends BaseExpression {\n    constructor (name) {\n        checkMaxArguments(arguments, 1, 'property');\n        checkString('property', 'name', 0, name);\n\n        if (name === '') {\n            throw new CartoValidationError(\n                'property(): invalid parameter, zero-length string',\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n        super({});\n        this.name = name;\n        this.expressionName = name;\n        super._setGenericGLSL((childInlines, getGLSLforProperty) => getGLSLforProperty(this.name));\n    }\n\n    isFeatureDependent () {\n        return true;\n    }\n\n    get value () {\n        return this.propertyName;\n    }\n\n    get propertyName () {\n        return this.name;\n    }\n\n    eval (feature) {\n        if (!feature) {\n            throw new CartoValidationError(\n                'A property needs to be evaluated in a \\'feature\\'.',\n                CartoValidationErrorTypes.MISSING_REQUIRED\n            );\n        }\n\n        return feature[this.name] && feature[this.name] === FP32_DESIGNATED_NULL_VALUE\n            ? null\n            : feature[this.name];\n    }\n\n    toString () {\n        return `$${this.name}`;\n    }\n\n    get categories () {\n        return this.type === 'category'\n            ? this._metadata.properties[this.name].categories\n            : undefined;\n    }\n\n    _bindMetadata (metadata) {\n        const metaColumn = metadata.properties[this.name];\n\n        if (!metaColumn) {\n            throw new CartoValidationError(\n                `Property '${this.name}' does not exist`,\n                CartoValidationErrorTypes.MISSING_REQUIRED\n            );\n        }\n\n        this._metadata = metadata;\n        this.type = metaColumn.type;\n\n        if (this.type === 'category' && this.numCategories === undefined) {\n            Object.defineProperty(this, 'numCategories', {\n                get: function () {\n                    return metaColumn.categories.length;\n                }\n            });\n        }\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        return {\n            preface: '',\n            inline: getGLSLforProperty(this.name)\n        };\n    }\n\n    _getMinimumNeededSchema () {\n        const type = this._variableName\n            ? aggregationTypes.UNKNOWN\n            : aggregationTypes.UNAGGREGATED;\n\n        return {\n            [this.name]: [{ type }]\n        };\n    }\n}\n","import BaseExpression from '../base';\nimport { checkString, checkMaxArguments } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\n/**\n * Alias to a named variable defined in the Viz.\n *\n * @param {String} name - The variable name that is going to be evaluated\n * @return {Number|Category|Color|Date}\n *\n * @example <caption></caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *     sum_price: s.clusterSum(s.prop('price'))\n *   }\n *  filter: s.neq(s.var('sum_price'), 'london')\n * });\n *\n * @example <caption>(String)</caption>\n * const viz = new carto.Viz(`\n *   \\@sum_price: clusterSum($price)\n *   filter: $price == 30  // Equivalent to eq($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name var\n * @function\n * @api\n */\nexport class Variable extends BaseExpression {\n    constructor () {\n        super({});\n    }\n}\n\nexport default function variable (name) {\n    checkMaxArguments(arguments, 1, 'variable');\n    checkString('variable', 'name', 0, name);\n\n    if (name === '') {\n        throw new CartoValidationError(\n            'variable(): invalid parameter, zero-length string',\n            CartoValidationErrorTypes.INCORRECT_VALUE\n        );\n    }\n\n    let alias;\n\n    const resolve = aliases => {\n        if (aliases[name]) {\n            alias = aliases[name];\n        } else {\n            throw new CartoValidationError(\n                `variable() with name '${name}' doesn't exist`,\n                CartoValidationErrorTypes.MISSING_REQUIRED\n            );\n        }\n    };\n\n    const _getDependencies = () => {\n        return [alias];\n    };\n\n    let aliaser = {\n        set: (obj, prop, value) => {\n            if (prop === 'parent') {\n                obj[prop] = value;\n            } else if (prop === 'notify') {\n                obj[prop] = value;\n            } else if (alias && alias[prop]) {\n                alias[prop] = value;\n            } else {\n                return false;\n            }\n\n            return true;\n        },\n\n        get: (obj, prop) => {\n            switch (prop) {\n                case 'propertyName':\n                    return alias.propertyName;\n                case 'name':\n                    return alias._dimension ? alias.propertyName : alias.name;\n                case 'parent':\n                case 'notify':\n                case 'blendTo':\n                    return obj[prop];\n                case '_resolveAliases':\n                    return resolve;\n                case '_getDependencies':\n                    return _getDependencies;\n                default:\n                    if (alias !== undefined) {\n                        const p = alias[prop];\n                        if (p !== undefined) {\n                            if (p.bind) {\n                                return p.bind(alias);\n                            }\n                            return p;\n                        }\n                    }\n                    return obj[prop];\n            }\n        }\n    };\n\n    return new Proxy(new Variable(), aliaser);\n}\n","import { implicitCast, checkType, checkExpression, checkMaxArguments } from './utils';\nimport BaseExpression from './base';\n\n/**\n * Check if a categorical value belongs to a list of categories.\n *\n * @param {Category|Number} input - Categorical or numeric expression to be tested against the whitelist\n * @param {Category[]|Number[]} list - Multiple expression parameters that will form the whitelist\n * @return {Number} Numeric expression with the result of the check\n *\n * @example <caption>Display only cities where $type is 'metropolis' or 'capital'.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.in(s.prop('type'), ['metropolis', 'capital'])\n * });\n *\n * @example <caption>Display only cities where $type is 'metropolis' or 'capital'. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $type in ['metropolis', 'capital']\n * `);\n *\n * @example <caption>Display only products where $amount is 10, 15 or 20.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.in(s.prop('amount'), [10, 15, 20])\n * });\n *\n * @example <caption>Display only products where $amount is 10, 15 or 20. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $amount in [10, 15, 20]\n * `);\n *\n * @memberof carto.expressions\n * @name in\n * @function\n * @api\n */\nexport const In = generateBelongsExpression('in', (input, list) => list.some(item => item === input) ? 1 : 0);\n\nconst belongsReturn = {\n    nin: {\n        check: '1.',\n        result: '0.'\n    },\n    in: {\n        check: '0.',\n        result: '1.'\n    }\n};\n\n/**\n * Check if value does not belong to the list of elements.\n *\n * @param {Category|Number} input - Categorical or numeric expression to be tested against the blacklist\n * @param {Category[]|Number[]} list - Multiple expression parameters that will form the blacklist\n * @return {Number} Numeric expression with the result of the check\n *\n * @example <caption>Display only cities where $type is not 'metropolis' or 'capital'.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.nin(s.prop('type'), ['metropolis', 'capital'])\n * });\n *\n * @example <caption>Display only cities where $type is not 'metropolis' or 'capital'. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $type nin ['metropolis', 'capital']\n * `);\n *\n * @example <caption>Display only products where $amount is not 10, 15 or 20.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.nin(s.prop('amount'), [10, 15, 20])\n * });\n *\n * @example <caption>Display only products where $amount is not 10, 15 or 20. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $amount nin [10, 15, 20]\n * `);\n *\n * @memberof carto.expressions\n * @name nin\n * @function\n * @api\n */\nexport const Nin = generateBelongsExpression('nin', (input, list) => list.some(item => item === input) ? 0 : 1);\n\nfunction generateBelongsExpression (name, jsEval) {\n    return class BelongExpression extends BaseExpression {\n        constructor (input, list) {\n            checkMaxArguments(arguments, 2, name);\n\n            input = implicitCast(input);\n            list = implicitCast(list);\n\n            checkExpression(name, 'input', 0, input);\n            checkExpression(name, ['list', 'variable'], 1, list);\n\n            super({ input, list });\n\n            this.type = 'number';\n            this.name = name;\n        }\n\n        get value () {\n            return jsEval(this.input.value, this.list.value);\n        }\n\n        eval (feature) {\n            return jsEval(this.input.eval(feature), this.list.eval(feature));\n        }\n\n        _applyToShaderSource (getGLSLforProperty) {\n            const childSourcesArray = this.childrenNames.map(name => this[name]._applyToShaderSource(getGLSLforProperty));\n\n            let childSources = {};\n            childSourcesArray.map((source, index) => {\n                childSources[this.childrenNames[index]] = source;\n            });\n\n            const funcName = `belongs${this._uid}`;\n            const funcList = this._getFuncList();\n            const funcBody = this.list.elems.map(funcList).join('');\n            const checkValue = belongsReturn[this.name].check;\n\n            const preface = `float ${funcName}(float x){\n                ${funcBody}\n\n                return ${checkValue};\n            }`;\n\n            return {\n                preface: this._prefaceCode(childSources.input.preface + childSources.list.preface + preface),\n                inline: `${funcName}(${childSources.input.inline})`\n            };\n        }\n\n        _getFuncList () {\n            const returnValue = belongsReturn[this.name].result;\n\n            return (elem) => {\n                const x = this.input.type === 'number' ? `${elem}.0` : `cat${elem._uid}`;\n                return `if (x==${x}) { return ${returnValue}; }`;\n            };\n        }\n\n        _bindMetadata (meta) {\n            super._bindMetadata(meta);\n            const validTypes = ['number', 'category'];\n\n            validTypes.forEach((type) => {\n                if (this.input.type === type) {\n                    checkType(name, 'input', 0, type, this.input);\n                    checkType(name, 'list', 1, `${type}-list`, this.list);\n                }\n            });\n        }\n    };\n}\n","import BaseExpression from './base';\nimport { implicitCast, checkType, checkMaxArguments } from './utils';\n\n/**\n * Check if a given value is contained within an inclusive range (including the limits).\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} input - Numeric expression that is going to be tested against the [lowerLimit, upperLimit] range\n * @param {Number} lowerLimit - Numeric expression with the lower limit of the range\n * @param {Number} upperLimit -  Numeric expression with the upper limit of the range\n * @return {Number} Numeric expression with the result of the check\n *\n * @example <caption>Display only cities where the population density is within the [50,100] range.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.between(s.prop('dn'), 50, 100);\n * });\n *\n * @example <caption>Display only cities where the population density is within the [50,100] range. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: between($dn, 50, 100)\n * `);\n *\n * @memberof carto.expressions\n * @name between\n * @function\n * @api\n */\nexport default class Between extends BaseExpression {\n    constructor (input, lowerLimit, upperLimit) {\n        checkMaxArguments(arguments, 3, 'between');\n\n        input = implicitCast(input);\n        lowerLimit = implicitCast(lowerLimit);\n        upperLimit = implicitCast(upperLimit);\n\n        super({ input, lowerLimit, upperLimit });\n        this.type = 'number';\n        this.inlineMaker = inline => `((${inline.input} >= ${inline.lowerLimit} &&  ${inline.input} <= ${inline.upperLimit}) ? 1. : 0.)`;\n    }\n\n    eval (feature) {\n        const input = this.input.eval(feature);\n        const lower = this.lowerLimit.eval(feature);\n        const upper = this.upperLimit.eval(feature);\n        return (input >= lower && input <= upper) ? 1 : 0;\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n\n        checkType('between', 'input', 0, ['number', 'date'], this.input);\n        checkType('between', 'lowerLimit', 1, ['number', 'date'], this.lowerLimit);\n        checkType('between', 'upperLimit', 2, ['number', 'date'], this.upperLimit);\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, COLORS_TO_COLOR, IMAGES_TO_IMAGE } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Add two numeric expressions.\n *\n * @param {Number|Color} x - First value to add\n * @param {Number|Color} y - Second value to add\n * @return {Number|Color} Result of the addition\n *\n * @example <caption>Number addition.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.add(10, 2)  // 12\n * });\n *\n * @example <caption>Number addition. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 10 + 2  // Equivalent to add(10, 2)\n * `);\n *\n * @memberof carto.expressions\n * @name add\n * @function\n * @api\n */\nexport default class Add extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x + y, // NUMBERS_TO_NUMBER\n            4: _addColors // COLORS_TO_COLOR\n        };\n\n        const glsl = (x, y) => `(${x} + ${y})`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | COLORS_TO_COLOR | IMAGES_TO_IMAGE;\n    }\n}\n\nfunction _addColors (colorA, colorB) {\n    const r = colorA.r + colorB.r < 255 ? colorA.r + colorB.r : 255;\n    const g = colorA.g + colorB.g < 255 ? colorA.g + colorB.g : 255;\n    const b = colorA.b + colorB.b < 255 ? colorA.b + colorB.b : 255;\n    const a = colorA.a;\n\n    return { r, g, b, a };\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER } from './BinaryOperation';\n\nimport { implicitCast, checkMaxArguments } from '../utils';\n\n/**\n * Perform a binary AND between two numeric expressions.\n * If the numbers are different from 0 or 1 this performs a [fuzzy and operation](https://en.wikipedia.org/wiki/Fuzzy_logic#Fuzzification).\n * This fuzzy behavior will allow transitions to work in a continuos, non-discrete, fashion.\n *\n * This returns a number expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} x - First value of the expression\n * @param {Number} y - Second value of the expression\n * @return {Number} Result of the expression\n *\n * @example <caption>Show only elements with price < 30 AND category === 'fruit'.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.and(\n *     s.lt(s.prop('price'), 30),\n *     s.eq(s.prop('category'), 'fruit')\n *   )\n * });\n *\n * @example <caption>Show only elements with price < 30 AND category === 'fruit'. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price < 30 and $category === 'fruit'  // Equivalent to and(lt($price, 30), eq($category, 'fruit'))\n * `);\n *\n * @memberof carto.expressions\n * @name and\n * @function\n * @api\n */\nexport default class And extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => Math.min(x * y, 1) // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `min(${x} * ${y}, 1.)`;\n\n        a = implicitCast(a);\n        b = implicitCast(b);\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER;\n    }\n}\n","import BaseExpression from '../base';\nimport { implicitCast, checkMaxArguments } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\nimport { number } from '../../expressions';\n\nexport const UNSUPPORTED_SIGNATURE = 0;\nexport const NUMBERS_TO_NUMBER = 1;\nexport const NUMBER_AND_COLOR_TO_COLOR = 2;\nexport const COLORS_TO_COLOR = 4;\nexport const CATEGORIES_TO_NUMBER = 8;\nexport const IMAGES_TO_IMAGE = 16;\nexport const DATES_TO_DATES = 32;\n\nconst signature = {\n    0: null,\n    1: 'number',\n    2: 'color',\n    4: 'color',\n    8: 'number',\n    16: 'image',\n    32: 'date'\n};\n\nexport class BinaryOperation extends BaseExpression {\n    constructor (a, b, signatureMethods, glsl) {\n        checkMaxArguments(arguments, 4);\n\n        if (Number.isFinite(a) && Number.isFinite(b)) {\n            return number(signatureMethods[NUMBERS_TO_NUMBER](a, b));\n        }\n\n        a = implicitCast(a);\n        b = implicitCast(b);\n\n        super({ a, b });\n\n        this.signatureMethods = signatureMethods;\n        this._signature = getSignature(a, b);\n        this.glsl = glsl;\n        this.allowedSignature = UNSUPPORTED_SIGNATURE;\n        this.type = signature[this._signature];\n        this.inlineMaker = inline => glsl(inline.a, inline.b);\n    }\n\n    get value () {\n        return this.operation(this.a.value, this.b.value);\n    }\n\n    get operation () {\n        return this.signatureMethods[this._signature] || this.signatureMethods[NUMBERS_TO_NUMBER];\n    }\n\n    eval (...features) {\n        if (Number.isFinite(this.a) && Number.isFinite(this.b)) {\n            return this.operation(this.a.value, this.b.value);\n        }\n\n        if (Number.isFinite(this.a)) {\n            return this.operation(this.a.value, this.b.eval(features[0]));\n        }\n\n        if (Number.isFinite(this.b)) {\n            return this.operation(this.a.eval(features[0]), this.b.value);\n        }\n\n        const { featureA, featureB } = this._getDependentFeatures(features);\n        const valueA = this.a.eval(featureA);\n        const valueB = this.b.eval(featureB);\n\n        return this.operation(valueA, valueB);\n    }\n\n    getLegendData (options) {\n        const legendDataA = this.a.getLegendData(options);\n        const legendDataB = this.b.getLegendData(options);\n        const SIZE_A = legendDataA.data.length;\n        const SIZE_B = legendDataB.data.length;\n        const data = [];\n\n        for (let i = 0; i < SIZE_A; i++) {\n            for (let j = 0; j < SIZE_B; j++) {\n                const value = this.operation(legendDataA.data[i].value, legendDataB.data[j].value);\n                data.push({ value });\n            }\n        }\n\n        return { n: SIZE_A, m: SIZE_B, data };\n    }\n\n    _getDependentFeatures (features) {\n        const { featureA, featureB } = features.length > 1\n            ? { featureA: features[0], featureB: features[1] }\n            : { featureA: features[0], featureB: features[0] };\n\n        return { featureA, featureB };\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        const [a, b] = [this.a, this.b];\n\n        this._signature = getSignature(a, b);\n        if (this._signature === UNSUPPORTED_SIGNATURE || !(this._signature & this.allowedSignature)) {\n            throw new CartoValidationError(\n                `${this.expressionName}(): invalid parameter types\\n'x' type was ${a.type}, 'y' type was ${b.type}`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n        this.type = getReturnTypeFromSignature(this._signature);\n    }\n}\n\nfunction getSignature (a, b) {\n    if (!a.type || !b.type) {\n        return undefined;\n    } else if (a.type === 'date' && b.type === 'date') {\n        return DATES_TO_DATES;\n    } else if (a.type === 'number' && b.type === 'number') {\n        return NUMBERS_TO_NUMBER;\n    } else if (a.type === 'number' && b.type === 'color') {\n        return NUMBER_AND_COLOR_TO_COLOR;\n    } else if (a.type === 'color' && b.type === 'number') {\n        return NUMBER_AND_COLOR_TO_COLOR;\n    } else if (a.type === 'color' && b.type === 'color') {\n        return COLORS_TO_COLOR;\n    } else if (a.type === 'category' && b.type === 'category') {\n        return CATEGORIES_TO_NUMBER;\n    } else if ((a.type === 'image' && b.type === 'color') ||\n        (a.type === 'image' && b.type === 'color') ||\n        (a.type === 'image' && b.type === 'image') ||\n        (a.type === 'color' && b.type === 'image')) {\n        return IMAGES_TO_IMAGE;\n    } else {\n        return UNSUPPORTED_SIGNATURE;\n    }\n}\n\nfunction getReturnTypeFromSignature (signature) {\n    switch (signature) {\n        case NUMBERS_TO_NUMBER:\n            return 'number';\n        case NUMBER_AND_COLOR_TO_COLOR:\n            return 'color';\n        case COLORS_TO_COLOR:\n            return 'color';\n        case CATEGORIES_TO_NUMBER:\n            return 'number';\n        case IMAGES_TO_IMAGE:\n            return 'image';\n        default:\n            return undefined;\n    }\n}\n","import { number } from '../../expressions';\nimport {\n    BinaryOperation,\n    NUMBERS_TO_NUMBER,\n    NUMBER_AND_COLOR_TO_COLOR,\n    COLORS_TO_COLOR,\n    IMAGES_TO_IMAGE\n} from './BinaryOperation';\n\nimport { implicitCast, checkMaxArguments } from '../utils';\n\n/**\n * Divide two numeric expressions.\n *\n * @param {Number|Color} numerator - Numerator of the division\n * @param {Number|Color} denominator - Denominator of the division\n * @return {Number|Color} Result of the division\n *\n * @example <caption>Number division.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.div(10, 2)  // 5\n * });\n *\n * @example <caption>Number division. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 10 / 2  // Equivalent to div(10, 2)\n * `);\n *\n * @memberof carto.expressions\n * @name div\n * @function\n * @api\n */\nexport default class Div extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        if (Number.isFinite(a) && Number.isFinite(b)) {\n            return number(a / b);\n        }\n\n        const signatureMethods = {\n            1: (x, y) => x / y, // NUMBERS_TO_NUMBER\n            2: _divNumberColor, // NUMBER_AND_COLOR_TO_COLOR\n            4: _divColors // COLORS_TO_COLOR\n        };\n\n        const glsl = (x, y) => `(${x} / ${y})`;\n\n        a = implicitCast(a);\n        b = implicitCast(b);\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | NUMBER_AND_COLOR_TO_COLOR | COLORS_TO_COLOR | IMAGES_TO_IMAGE;\n    }\n}\n\nfunction _divColors (colorA, colorB) {\n    return {\n        r: Math.round(colorA.r / colorB.r),\n        g: Math.round(colorA.g / colorB.g),\n        b: Math.round(colorA.b / colorB.b),\n        a: colorA.a\n    };\n}\n\nfunction _divNumberColor (valueA, valueB) {\n    const { n, color } = typeof valueA === 'number'\n        ? { n: valueA, color: valueB }\n        : { n: valueB, color: valueA };\n\n    return {\n        r: Math.round(color.r / n),\n        g: Math.round(color.g / n),\n        b: Math.round(color.b / n),\n        a: color.a\n    };\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, CATEGORIES_TO_NUMBER } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compare if x is equal to a y.\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number|Category} x - Firt value of the comparison\n * @param {Number|Category} y - Second value of the comparison\n * @return {Number} Result of the comparison: 0 or 1\n *\n * @example <caption>Compare two numbers to show only elements with price equal to 30.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.eq(s.prop('price'), 30)\n * });\n *\n * @example <caption>Compare two numbers to show only elements with price equal to 30. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price == 30  // Equivalent to eq($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name eq\n * @function\n * @api\n */\nexport default class Equals extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x === y ? 1 : 0, // NUMBERS_TO_NUMBER,\n            8: (x, y) => x === y ? 1 : 0 // CATEGORIES_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `(${x}==${y}? 1.:0.)`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | CATEGORIES_TO_NUMBER;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, DATES_TO_DATES } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compare if x is greater than y.\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} x - Firt value of the comparison\n * @param {Number} y - Firt value of the comparison\n * @return {Number} Result of the comparison: 0 or 1\n *\n * @example <caption>Compare two numbers to show only elements with price greater than 30.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.gt(s.prop('price'), 30)\n * });\n *\n * @example <caption>Compare two numbers to show only elements with price greater than 30. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price > 30  // Equivalent to gt($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name gt\n * @function\n * @api\n */\nexport default class GreaterThan extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x > y ? 1 : 0 // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `(${x}>${y}? 1.:0.)`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | DATES_TO_DATES;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, DATES_TO_DATES } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compare if x is greater than or equal to y.\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} x - Firt value of the comparison\n * @param {Number} y - Second value of the comparison\n * @return {Number} Result of the comparison: 0 or 1\n *\n * @example <caption>Compare two numbers to show only elements with price greater than or equal to 30.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.gte(s.prop('price'), 30)\n * });\n *\n * @example <caption>Compare two numbers to show only elements with price greater than or equal to 30. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price >= 30  // Equivalent to gte($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name gte\n * @function\n * @api\n */\nexport default class GreaterThanOrEqualTo extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x >= y ? 1 : 0 // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `(${x}>=${y}? 1.:0.)`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | DATES_TO_DATES;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, DATES_TO_DATES } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compare if x is lower than y.\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} x - Firt value of the comparison\n * @param {Number} y - Second value of the comparison\n * @return {Number} Result of the comparison: 0 or 1\n *\n * @example <caption>Compare two numbers to show only elements with price less than 30.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.lt(s.prop('price'), 30)\n * });\n *\n * @example <caption>Compare two numbers to show only elements with price less than 30. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price < 30  // Equivalent to lt($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name lt\n * @function\n * @api\n */\nexport default class LessThan extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x < y ? 1 : 0 // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `(${x}<${y}? 1.:0.)`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | DATES_TO_DATES;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, DATES_TO_DATES } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compare if x is lower than or equal to y.\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} x - Firt value of the comparison\n * @param {Number} y - Second value of the comparison\n * @return {Number} Result of the comparison: 0 or 1\n *\n * @example <caption>Compare two numbers to show only elements with price less than or equal to 30.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.lte(s.prop('price'), 30)\n * });\n *\n * @example <caption>Compare two numbers to show only elements with price less than or equal to 30. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price <= 30  // Equivalent to lte($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name lte\n * @function\n * @api\n */\nexport default class LessThanOrEqualTo extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x <= y ? 1 : 0 // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `(${x}<=${y}? 1.:0.)`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | DATES_TO_DATES;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, DATES_TO_DATES } from './BinaryOperation';\n\nimport { implicitCast, checkMaxArguments } from '../utils';\n\n/**\n * Modulus of two numeric expressions, mod returns a numeric expression with the value of x module y. This is computed as x - y * floor(x/y).\n *\n * @param {Number} x - First value of the modulus\n * @param {Number} y - Second value of the modulus\n * @return {Number} Result of the modulus\n *\n * @example <caption>Number modulus.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.mod(10, 6)  // 4\n * });\n *\n * @example <caption>Number modulus. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 10 % 6  // Equivalent to mod(10, 6)\n * `);\n *\n * @memberof carto.expressions\n * @name mod\n * @function\n * @api\n */\nexport default class Mod extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x % y // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `mod(${x}, ${y})`;\n\n        a = implicitCast(a);\n        b = implicitCast(b);\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | DATES_TO_DATES;\n    }\n}\n","import {\n    BinaryOperation,\n    NUMBERS_TO_NUMBER,\n    NUMBER_AND_COLOR_TO_COLOR,\n    COLORS_TO_COLOR,\n    IMAGES_TO_IMAGE\n} from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Multiply two numeric expressions.\n *\n * @param {Number|Color} x - First value to multiply\n * @param {Number|Color} y - Second value to multiply\n * @return {Number|Color} Result of the multiplication\n *\n * @example <caption>Number multiplication.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.mul(5, 5)  // 25\n * });\n *\n * @example <caption>Number multiplication. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 5 * 5  // Equivalent to mul(5, 5)\n * `);\n *\n * @memberof carto.expressions\n * @name mul\n * @function\n * @api\n */\nexport default class Mul extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x * y, // NUMBERS_TO_NUMBER\n            2: _mulNumberColor, // NUMBER_AND_COLOR_TO_COLOR\n            4: _mulColors // COLORS_TO_COLOR\n        };\n\n        const glsl = (x, y) => `(${x} * ${y})`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | NUMBER_AND_COLOR_TO_COLOR | COLORS_TO_COLOR | IMAGES_TO_IMAGE;\n    }\n}\n\nfunction _mulColors (colorA, colorB) {\n    return {\n        r: Math.round(colorA.r * colorB.r / 255),\n        g: Math.round(colorA.g * colorB.g / 255),\n        b: Math.round(colorA.b * colorB.b / 255),\n        a: colorA.a\n    };\n}\n\nfunction _mulNumberColor (valueA, valueB) {\n    const { n, color } = typeof valueA === 'number'\n        ? { n: valueA, color: valueB }\n        : { n: valueB, color: valueA };\n\n    return {\n        r: Math.round(n * color.r / 255),\n        g: Math.round(n * color.g / 255),\n        b: Math.round(n * color.b / 255),\n        a: color.a\n    };\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, CATEGORIES_TO_NUMBER, DATES_TO_DATES } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compare if x is different than y.\n *\n * This returns a number expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number|Category} x - Firt value of the comparison\n * @param {Number|Category} y - Second value of the comparison\n * @return {Number} Result of the comparison: 0 or 1\n *\n * @example <caption>Compare two numbers to show only elements with price not equal to 30.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.neq(s.prop('price'), 30);\n * });\n *\n * @example <caption>Compare two numbers to show only elements with price not equal to 30. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price != 30  // Equivalent to neq($price, 30)\n * `);\n *\n * @memberof carto.expressions\n * @name neq\n * @function\n * @api\n */\nexport default class NotEquals extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x !== y ? 1 : 0, // NUMBERS_TO_NUMBER\n            8: (x, y) => x !== y ? 1 : 0\n        };\n\n        const glsl = (x, y) => `(${x}!=${y}? 1.:0.)`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | CATEGORIES_TO_NUMBER | DATES_TO_DATES;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER } from './BinaryOperation';\n\nimport { implicitCast, checkMaxArguments } from '../utils';\n\n/**\n * Perform a binary OR between two numeric expressions.\n * If the numbers are different from 0 or 1 this performs a [fuzzy or operation](https://en.wikipedia.org/wiki/Fuzzy_logic#Fuzzification).\n * This fuzzy behavior will allow transitions to work in a continuos, non-discrete, fashion.\n *\n * This returns a number expression where 0 means `false` and 1 means `true`.\n *\n * @param {Number} x - First value of the expression\n * @param {Number} y - Second value of the expression\n * @return {Number} Result of the expression\n *\n * @example <caption>Show only elements with price < 30 OR price > 1000.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.or(\n *     s.lt(s.prop('price'), 30),\n *     s.gt(s.prop('price'), 1000)\n *   )\n * });\n *\n * @example <caption>Show only elements with price < 30 OR price > 1000. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: $price < 30 or $price > 1000  // Equivalent to or(lt($price, 30), gt($price, 1000))\n * `);\n *\n * @memberof carto.expressions\n * @name or\n * @function\n * @api\n */\nexport default class Or extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => Math.min(x + y, 1) // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `min(${x} + ${y}, 1.)`;\n\n        a = implicitCast(a);\n        b = implicitCast(b);\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER } from './BinaryOperation';\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Compute the base to the exponent power, return a numeric expression with the value of the first parameter raised to the power of the second.\n * The result is undefined if x<0 or if x=0 and y≤0.\n *\n * @param {Number} base - Base of the power\n * @param {Number} exponent - Exponent of the power\n * @return {Number} Result of the power\n *\n * @example <caption>Number power.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.pow(2, 3)  // 8\n * });\n *\n * @example <caption>Number power. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 2 ^ 3  // Equivalent to pow(2, 3)\n * `);\n *\n * @memberof carto.expressions\n * @name pow\n * @function\n * @api\n */\nexport default class Pow extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => Math.pow(x, y) // NUMBERS_TO_NUMBER\n        };\n\n        const glsl = (x, y) => `pow(${x}, ${y})`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER;\n    }\n}\n","import { BinaryOperation, NUMBERS_TO_NUMBER, COLORS_TO_COLOR, IMAGES_TO_IMAGE } from './BinaryOperation';\n\nimport { checkMaxArguments } from '../utils';\n\n/**\n * Substract two numeric expressions.\n *\n * @param {Number|Color} minuend - The minuend of the subtraction\n * @param {Number|Color} subtrahend - The subtrahend of the subtraction\n * @return {Number|Color} Result of the substraction\n *\n * @example <caption>Number subtraction.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.sub(10, 2)  // 8\n * });\n *\n * @example <caption>Number subtraction. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: 10 - 2  // Equivalent to sub(10, 2)\n * `);\n *\n * @memberof carto.expressions\n * @name sub\n * @function\n * @api\n */\nexport default class Sub extends BinaryOperation {\n    constructor (a, b) {\n        checkMaxArguments(arguments, 2);\n\n        const signatureMethods = {\n            1: (x, y) => x - y, // NUMBERS_TO_NUMBER\n            4: _subColors // COLORS_TO_COLOR\n        };\n\n        const glsl = (x, y) => `(${x} - ${y})`;\n\n        super(a, b, signatureMethods, glsl);\n        this.allowedSignature = NUMBERS_TO_NUMBER | COLORS_TO_COLOR | IMAGES_TO_IMAGE;\n    }\n}\n\nfunction _subColors (colorA, colorB) {\n    const r = colorA.r - colorB.r > 0 ? colorA.r - colorB.r : 0;\n    const g = colorA.g - colorB.g > 0 ? colorA.g - colorB.g : 0;\n    const b = colorA.b - colorB.b > 0 ? colorA.b - colorB.b : 0;\n    const a = colorA.a;\n\n    return { r, g, b, a };\n}\n","import { implicitCast, clamp, mix, checkType, checkExpression, checkMaxArguments } from './utils';\nimport Transition from './transition';\nimport BaseExpression from './base';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\n\n/**\n * Linearly interpolate from `a` to `b` based on `mix`.\n *\n * @param {Number|Color} a - Numeric or color expression, `a` type must match `b` type\n * @param {Number|Color} b - Numeric or color expression, `b` type must match `a` type\n * @param {Number} mix - Numeric expression with the interpolation parameter in the [0,1] range\n * @returns {Number|Color} Numeric or color expression with the same type as `a` and `b`\n *\n * @example <caption>Blend based on the zoom level to display a bubble map at high zoom levels and display fixed-sized points at low zoom levels.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.blend(3,\n *                  s.prop('dn'),\n *                  s.linear(s.zoom(), 10, 14))\n *           );\n * });\n *\n * @example <caption>Blend based on the zoom level to display a bubble map at high zoom levels and display fixed-sized points at low zoom levels. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: blend(3,\n *                $dn,\n *                linear(zoom(), 10, 14)\n *          )\n * `);\n *\n * @memberof carto.expressions\n * @name blend\n * @function\n * @api\n */\nexport default class Blend extends BaseExpression {\n    constructor (a, b, mix, interpolator) {\n        checkMaxArguments(arguments, 4, 'blend');\n        a = implicitCast(a);\n        b = implicitCast(b);\n        mix = implicitCast(mix);\n\n        checkExpression('blend', 'a', 0, a);\n        checkExpression('blend', 'b', 1, b);\n        checkExpression('blend', 'mix', 2, mix);\n\n        // TODO check interpolator type\n        const originalMix = mix;\n        if (interpolator) {\n            mix = interpolator(mix);\n        }\n        super({ a, b, mix });\n        this.originalMix = originalMix;\n\n        if (a.type && b.type) {\n            this.type = a.type;\n        }\n        this.inlineMaker = inline => `mix(${inline.a}, ${inline.b}, clamp(${inline.mix}, 0., 1.))`;\n    }\n\n    get value () {\n        const a = clamp(this.mix.value, 0, 1);\n        const x = this.a.value;\n        const y = this.b.value;\n\n        return mix(x, y, a);\n    }\n\n    eval (feature) {\n        const a = clamp(this.mix.eval(feature), 0, 1);\n        const x = this.a.eval(feature);\n        const y = this.b.eval(feature);\n\n        return mix(x, y, a);\n    }\n\n    replaceChild (toReplace, replacer) {\n        if (toReplace === this.mix) {\n            this.originalMix = replacer;\n        }\n        super.replaceChild(toReplace, replacer);\n    }\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n\n        abTypeCheck(this.a, this.b);\n        checkType('blend', 'mix', 2, 'number', this.mix);\n\n        this.type = this.a.type;\n    }\n\n    _preDraw (...args) {\n        super._preDraw(...args);\n        if (this.originalMix.isA(Transition) && !this.originalMix.isAnimated()) {\n            this.parent.replaceChild(this, this.b);\n        }\n    }\n}\n\nfunction abTypeCheck (a, b) {\n    const validTypes = ['number', 'color', 'image', 'placement', 'date'];\n\n    if (a.type !== b.type || !(validTypes.includes(a.type))) {\n        throw new CartoValidationError(\n            `blend(): invalid parameter types\\n\\t'a' type was '${a.type}'\\n\\t'b' type was '${b.type}'`,\n            CartoValidationErrorTypes.INCORRECT_TYPE\n        );\n    }\n}\n","import BaseExpression from './base';\nimport { implicitCast, getOrdinalFromIndex, checkMaxArguments, checkType, checkFeatureIndependent } from './utils';\nimport { OTHERS_INDEX, OTHERS_LABEL } from './constants';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\nimport BucketsGLSLHelper from './BucketsGLSLHelper';\n\n/**\n * Given a property create \"sub-groups\" based on the given breakpoints.\n *\n * This returns a number or category expression depending on the input values. The \"others\" label is by default CARTO_VL_OTHERS.\n * This can be overwriten by setting the \"others\" label as the third parameter.\n *\n * @param {Number|Category} property - The property to be evaluated and interpolated\n * @param {Number[]|Category[]} breakpoints - Expression containing the different breakpoints.\n * @param {string} othersLabel - Custom label for \"others\"\n * @return {Number|Category}\n *\n * @example <caption>Display a traffic dataset in 4 colors depending on the numeric speed.</caption>\n * // Using the buckets `expression` we divide the dataset into 4 buckets according to the speed\n * // - From -inf to 29\n * // - From 30 to 79\n * // - From 80 to 119\n * // - From 120 to +inf\n * // Values lower than 0 will be in the first bucket and values higher than 120 will be in the last one.\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *    color: s.ramp(\n *      s.buckets(s.prop('speed'), [30, 80, 120]),\n *      s.palettes.PRISM\n *    )\n * });\n *\n * @example <caption>Display a traffic dataset in 4 colors depending on the numeric speed. (String)</caption>\n * // Using the buckets `expression` we divide the dataset into 4 buckets according to the speed\n * // - From -inf to 29\n * // - From 30 to 79\n * // - From 80 to 119\n * // - From 120 to +inf\n * // Values lower than 0 will be in the first bucket and values higher than 120 will be in the last one.\n * const viz = new carto.Viz(`\n *    color: ramp(buckets($speed, [30, 80, 120]), PRISM)\n * `);\n *\n * @example <caption>Display a traffic dataset is 3 colors depending on the category procesedSpeed.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(\n *     s.buckets(s.prop('procesedSpeed'), ['slow', 'medium', 'high']),\n *     s.palettes.PRISM)\n *   )\n * });\n *\n * @example <caption>Display a traffic dataset is 3 colors depending on the category procesedSpeed. (String)</caption>\n * const viz = new carto.Viz(`\n *    color: ramp(buckets($procesedSpeed, ['slow', 'medium', 'high']), PRISM)\n * `);\n *\n * @example <caption>Set custom \"others\" label.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(\n *     s.buckets(s.prop('procesedSpeed'), ['slow', 'medium', 'high'], 'Others'),\n *     s.palettes.PRISM)\n *   )\n * });\n *\n * @example <caption>Set custom \"others\" label. (String)</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz(`\n *    color: ramp(buckets($procesedSpeed, ['slow', 'medium', 'high'], 'Others'), PRISM)\n * `);\n *\n * @memberof carto.expressions\n * @name buckets\n * @function\n * @api\n */\nexport default class Buckets extends BaseExpression {\n    constructor (input, list, othersLabel = OTHERS_LABEL) {\n        checkMaxArguments(arguments, 3, 'buckets');\n\n        input = implicitCast(input);\n        list = implicitCast(list);\n        othersLabel = implicitCast(othersLabel);\n\n        let children = {\n            input,\n            list,\n            othersLabel\n        };\n\n        super(children);\n        this.numCategories = null;\n        this.numCategoriesWithoutOthers = null;\n        this.type = 'category';\n\n        this._GLSLhelper = new BucketsGLSLHelper(this);\n    }\n\n    get value () {\n        return this.eval();\n    }\n\n    eval (feature) {\n        const v = this.input.eval(feature);\n        const divisor = this.numCategoriesWithoutOthers - 1 || 1;\n\n        if (this.input.type === 'category') {\n            for (let i = 0; i < this.list.elems.length; i++) {\n                if (v === this.list.elems[i].eval(feature)) {\n                    return i / divisor;\n                }\n            }\n\n            return OTHERS_INDEX;\n        }\n\n        for (let i = 0; i < this.list.elems.length; i++) {\n            if (v < this.list.elems[i].eval(feature)) {\n                return i / divisor;\n            }\n        }\n\n        return 1;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        if (this.input.type !== 'number' && this.input.type !== 'category') {\n            throw new CartoValidationError(\n                `buckets(): invalid first parameter type\\n\\t'input' type was ${this.input.type}`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n\n        checkType('buckets', 'list', 1, ['number-list', 'category-list'], this.list);\n        checkType('buckets', 'othersLabel', 2, 'category', this.othersLabel);\n        checkFeatureIndependent('buckets', 'othersLabel', 2, this.othersLabel);\n\n        this.list.elems.map((item, index) => {\n            if (this.input.type !== item.type) {\n                throw new CartoValidationError(\n                    `buckets(): invalid ${getOrdinalFromIndex(index + 1)} parameter type` +\n                    `\\n\\texpected type was ${this.input.type}\\n\\tactual type was ${item.type}`,\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            } else if (item.type !== 'number' && item.type !== 'category') {\n                throw new CartoValidationError(\n                    `buckets(): invalid ${getOrdinalFromIndex(index + 1)} parameter type\\n\\ttype was ${item.type}`,\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n        });\n\n        if (this.input.type === 'category') {\n            const property = metadata.properties[this.input.propertyName];\n            this._numDatasetCategories = property\n                ? property.categories.length\n                : this.list.elems.length - 1;\n        }\n\n        this.numCategories = this.list.elems.length + 1;\n        this.numCategoriesWithoutOthers = this.input.type === 'category' ? this.numCategories - 1 : this.numCategories;\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        return this._GLSLhelper.applyToShaderSource(getGLSLforProperty);\n    }\n\n    getLegendData (options) {\n        const name = this.toString();\n        const list = this.list.elems.map(elem => elem.value);\n        const config = {\n            othersLabel: options && options.othersLabel ? options.othersLabel : this.othersLabel.value\n        };\n        const data = this.input.type === 'number'\n            ? _getLegendDataNumeric(list)\n            : _getLegendDataCategory(list, this._numDatasetCategories, config);\n\n        return { data, name };\n    }\n}\n\nfunction _getLegendDataNumeric (list) {\n    const data = [];\n\n    for (let i = 0; i <= list.length; i++) {\n        const min = i - 1 >= 0 ? list[i - 1] : Number.NEGATIVE_INFINITY;\n        const max = i < list.length ? list[i] : Number.POSITIVE_INFINITY;\n        const key = [min, max];\n        const value = i / list.length;\n        data.push({ key, value });\n    }\n\n    return data;\n}\n\nfunction _getLegendDataCategory (list, numDatasetCategories, config) {\n    const divisor = list.length - 1 || 1;\n    const data = list.map((category, index) => {\n        const key = category;\n        const value = index / divisor;\n\n        return { key, value };\n    });\n\n    if (numDatasetCategories > list.length) {\n        data.push({\n            key: config.othersLabel,\n            value: OTHERS_INDEX\n        });\n    }\n\n    return data;\n}\n","import BaseExpression from '../base';\nimport { number } from '../../expressions';\n\nimport { checkType, checkNumber } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\nimport ClassifierGLSLHelper from './ClassifierGLSLHelper';\n\nexport const DEFAULT_HISTOGRAM_SIZE = 1000;\n\nlet classifierUID = 0;\nexport default class Classifier extends BaseExpression {\n    constructor (children) {\n        super(children);\n        this.classifierUID = classifierUID++;\n        this.type = 'category';\n\n        this._GLSLhelper = new ClassifierGLSLHelper(this);\n    }\n\n    get value () {\n        return this.eval();\n    }\n\n    eval (feature) {\n        const inputValue = this.input.eval(feature);\n        const breakpoint = this.breakpoints.findIndex((breakpoint) => {\n            return inputValue <= breakpoint.value;\n        });\n\n        const divisor = this.numCategories - 1 || 1;\n        const index = breakpoint === -1 ? 1 : breakpoint / divisor;\n\n        return index;\n    }\n\n    toString () {\n        return `${this.expressionName}(${this.input.toString()}, ${this.numCategories})`;\n    }\n\n    _resolveAliases (aliases) {\n        super._resolveAliases(aliases);\n\n        this._bucketsInitialization();\n    }\n\n    _bucketsInitialization () {\n        this._validateBucketsIsProperNumber();\n\n        const buckets = this.buckets.value;\n        this.numCategories = buckets;\n        this.numCategoriesWithoutOthers = buckets;\n\n        this._initBreakpointsChildren(buckets);\n    }\n\n    _initBreakpointsChildren (buckets) {\n        this.breakpoints = this._breakpointsWithZeros(buckets);\n\n        const breakpointsChildren = this.breakpoints.reduce((children, current, index) => {\n            children[`arg${index}`] = current;\n            return children;\n        }, {});\n        this._initializeChildren(breakpointsChildren);\n    }\n\n    _breakpointsWithZeros (buckets) {\n        const breakpoints = [];\n        for (let i = 0; i < buckets - 1; i++) {\n            breakpoints.push(number(0));\n        }\n        return breakpoints;\n    }\n\n    _validateBucketsIsProperNumber () {\n        const buckets = this.buckets.value;\n        checkNumber(this.expressionName, 'buckets', 1, buckets);\n        if (buckets <= 1) {\n            throw new CartoValidationError(\n                `The number of 'buckets' must be >=2, but ${buckets} was used`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        this._validateInputIsNumericProperty();\n    }\n\n    _validateInputIsNumericProperty () {\n        checkType(this.expressionName, 'input', 0, 'number', this.input);\n    }\n\n    _getBreakpointList () {\n        this._genBreakpoints();\n        return this.breakpoints.map(breakpoint => breakpoint.value);\n    }\n\n    _genBreakpoints () { }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        return this._GLSLhelper ? this._GLSLhelper.applyToShaderSource(getGLSLforProperty) : null;\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        this._genBreakpoints();\n        super._preDraw(program, drawMetadata, gl);\n    }\n\n    getLegendData () {\n        const breakpoints = this._getBreakpointList();\n        const breakpointsLength = breakpoints.length;\n        const legendMin = this.min.value;\n        const legendMax = this.max.value;\n        const data = [];\n\n        for (let i = 0; i <= breakpointsLength; i++) {\n            const min = breakpoints[i - 1] === 0 ? 0 : breakpoints[i - 1] || legendMin;\n            const max = breakpoints[i] === 0 ? 0 : breakpoints[i] || legendMax;\n            const key = [min, max];\n            const value = i / breakpointsLength;\n            data.push({ key, value });\n        }\n\n        return { name: this.toString(), data };\n    }\n}\n","export default class ClassifierGLSLHelper {\n    constructor (classifier) {\n        this.classifier = classifier;\n    }\n\n    applyToShaderSource (getGLSLforProperty) {\n        const childSources = this.classifier.childrenNames.map(name => this.classifier[name]._applyToShaderSource(getGLSLforProperty));\n        let childInlines = {};\n        childSources.map((source, index) => {\n            childInlines[this.classifier.childrenNames[index]] = source.inline;\n        });\n\n        // Create classifier function\n        const funcName = `classifier${this.classifier.classifierUID}`;\n\n        const divisor = this.classifier.numCategories - 1 || 1;\n        const elif = (_, index) =>\n            `${index > 0 ? 'else' : ''} if (x<(${childInlines[`arg${index}`]})){\n                return ${(index / divisor).toFixed(20)};\n            }`;\n        const funcBody = this.classifier.breakpoints\n            ? this.classifier.breakpoints.map(elif).join('')\n            : '';\n\n        const preface = `float ${funcName}(float x){\n            ${funcBody}\n            return 1.;\n        }`;\n\n        // GLSL preface & inline\n        return {\n            preface: this.classifier._prefaceCode(childSources.map(s => s.preface).reduce((a, b) => a + b, '') + preface),\n            inline: `${funcName}(${childInlines.input})`\n        };\n    }\n}\n","import Classifier from './Classifier';\nimport { checkExactNumberOfArguments } from '../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../constants/metadata';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\nimport { number } from '../../expressions';\n\n/**\n * Classify `input` by using the equal intervals method with `n` buckets.\n *\n * It will classify the input based on the entire dataset without filtering by viewport or by `filter`.\n *\n * @param {Number} input - The input expression to classify\n * @param {number} n - Number of buckets\n * @return {Category}\n *\n * @example <caption>Use global equal intervals to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.globalEqIntervals(s.prop('density'), 5), s.palettes.PRISM)\n * });\n *\n * @example <caption>Use global equal intervals to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(globalEqIntervals($density, 5), PRISM)\n * `);\n *\n * @memberof carto.expressions\n * @name globalEqIntervals\n * @function\n * @api\n */\nexport default class GlobalEqIntervals extends Classifier {\n    constructor (input, buckets) {\n        checkExactNumberOfArguments(arguments, 2, 'globalEqIntervals');\n        super({ input, buckets });\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this._updateBreakpointsWith(metadata);\n    }\n\n    _updateBreakpointsWith (metadata) {\n        if (this.input.propertyName === CLUSTER_FEATURE_COUNT) {\n            throw new CartoValidationError(\n                '\\'clusterCount\\' can not be used in GlobalEqIntervals. Consider using ViewportEqIntervals instead',\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n\n        const name = this.input.name;\n        const { min, max } = metadata.stats(name);\n        this.min = number(min);\n        this.max = number(max);\n\n        this.breakpoints.map((breakpoint, index) => {\n            const p = (index + 1) / this.numCategories;\n            breakpoint.value = min + (max - min) * p;\n        });\n    }\n}\n","import Classifier from './Classifier';\nimport { checkExactNumberOfArguments, checkType } from '../utils';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../constants/metadata';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\nimport { number } from '../../expressions';\n\n/**\n * Classify `input` by using the quantiles method with `n` buckets.\n *\n * It will classify the input based on the entire dataset without filtering by viewport or by `filter`.\n *\n * @param {Number} input - The input expression used in the quantiles\n * @param {number} n - Number of buckets to be returned\n * @return {Category}\n *\n * @example <caption>Use global quantiles to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.globalQuantiles(s.prop('density'), 5), s.palettes.CB_REDS)\n * });\n *\n * @example <caption>Use global quantiles to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(globalQuantiles($density, 5), CB_REDS)\n * `);\n *\n * @memberof carto.expressions\n * @name globalQuantiles\n * @function\n * @api\n */\nexport default class GlobalQuantiles extends Classifier {\n    constructor (input, buckets) {\n        checkExactNumberOfArguments(arguments, 2, 'globalQuantiles');\n\n        super({ input, buckets });\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        checkType('globalQuantiles', 'input', 0, 'number', this.input);\n        this._updateBreakpointsWith(metadata);\n    }\n\n    _validateInputIsNumericProperty () { /* noop */ }\n\n    _updateBreakpointsWith (metadata) {\n        if (this.input.propertyName === CLUSTER_FEATURE_COUNT) {\n            throw new CartoValidationError(\n                '\\'clusterCount\\' can not be used in GlobalQuantiles. Consider using ViewportQuantiles instead',\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n\n        const name = this.input.name;\n        const { min, max } = metadata.stats(name);\n        const copy = metadata.sample.map(s => s[name]);\n\n        this.min = number(min);\n        this.max = number(max);\n\n        copy.sort((x, y) => x - y);\n\n        this.breakpoints = this.breakpoints.map((breakpoint, index) => {\n            const p = (index + 1) / this.numCategories;\n            breakpoint.value = copy[Math.floor(p * copy.length)];\n            return breakpoint;\n        });\n    }\n}\n","import Classifier from './Classifier';\nimport { checkMaxArguments, checkMinArguments, checkNumber } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../../../errors/carto-runtime-error';\n\nimport { average, standardDeviation } from '../stats';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../constants/metadata';\nimport { number } from '../../expressions';\n\n/**\n * Classify `input` by using the Mean-Standard Deviation method with `n` buckets.\n *\n * It will classify the input based on the entire dataset without filtering by viewport or by `filter`.\n *\n * It uses average and standard deviation (population formula) to classify the dataset.\n * When using an odd number of buckets, the central class has a double size (classSize * 2), to honour the number of required buckets\n *\n * This method is suitable if data are normally (or near normal) distributed, and it is specially\n * appropiated for diverging datasets, which can be well displayed using a diverging color scheme like TEALROSE\n *\n * @param {Number} input - The input expression to classify\n * @param {number} n - Number of buckets\n * @param {number?} classSize - Optional. The class size, defaults to 1.0 standard deviation (usual values are also 0.5 or 0.25)\n * @return {Category}\n *\n * @example <caption>Use global mean-standard deviation to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.globalStandardDev(s.prop('density'), 5), s.palettes.TEALROSE)\n * });\n *\n * @example <caption>Use global mean-standard deviation to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(globalStandardDev($density, 5), TEALROSE)\n * `);\n *\n * @example <caption>Use global custom mean-standard deviation to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.globalStandardDev(s.prop('density'), 7, 0.5), s.palettes.TEALROSE)\n * });\n *\n * @example <caption>Use global custom mean-standard deviation to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(globalStandardDev($density, 7, 0.5), TEALROSE)\n * `);\n *\n * @memberof carto.expressions\n * @name globalStandardDev\n * @function\n * @api\n */\nexport default class GlobalStandardDev extends Classifier {\n    constructor (input, buckets, classSize = 1.0) {\n        checkMinArguments(arguments, 2, 'globalStandardDev');\n        checkMaxArguments(arguments, 3, 'globalStandardDev');\n\n        super({ input, buckets, _classSize: classSize });\n    }\n\n    _resolveAliases (aliases) {\n        super._resolveAliases(aliases);\n\n        this._validateClassSizeIsProperNumber();\n    }\n\n    _validateClassSizeIsProperNumber () {\n        const classSize = this._classSize.value;\n        checkNumber(this.expressionName, 'classSize', 2, classSize);\n        if (classSize <= 0) {\n            throw new CartoValidationError(\n                `The 'classSize' must be > 0.0, but ${classSize} was used.`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        this._updateBreakpointsWith(metadata);\n    }\n\n    _updateBreakpointsWith (metadata) {\n        if (this.input.propertyName === CLUSTER_FEATURE_COUNT) {\n            throw new CartoValidationError(\n                '\\'clusterCount\\' can not be used in GlobalStandardDev. Consider using ViewportStandardDev instead',\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n        const name = this.input.name;\n        const sample = metadata.sample.map(s => s[name]);\n        const avg = average(sample);\n        const standardDev = standardDeviation(sample);\n        const { min, max } = metadata.stats(name);\n        this.min = number(min);\n        this.max = number(max);\n\n        const breaks = calculateBreakpoints(avg, standardDev, this.numCategories, this._classSize.value);\n        this.breakpoints.forEach((breakpoint, index) => {\n            breakpoint.value = breaks[index];\n        });\n    }\n}\n\n/**\n * Calculate breakpoints according to mean-standard deviation process\n *\n * @export\n * @param {Number} avg - average\n * @param {Number} stDev - standard deviation\n * @param {Number} buckets - number of buckets\n * @param {Number} classSize - in standard deviation units (usually 1.0, 0.5, 0.25...)\n * @returns {Number[]}\n */\nexport function calculateBreakpoints (avg, stDev, buckets, classSize) {\n    if (stDev === 0 || isNaN(stDev)) {\n        throw new CartoRuntimeError(\n            `There is no Standard Deviation, not possible to compute ${buckets} buckets (just one feature or maybe all share the same value...?)`,\n            CartoRuntimeErrorTypes.NOT_SUPPORTED\n        );\n    }\n\n    let breaks;\n    let over = [];\n    let under = [];\n    const isEven = buckets % 2 === 0;\n    let factor = isEven ? 0.0 : 1.0; // if odd, central class is double sized\n    do {\n        const step = factor * (stDev * classSize);\n        over.push(avg + step);\n        under.push(avg - step);\n        breaks = [...new Set(over.concat(under))];\n        breaks.sort((a, b) => a - b);\n        factor++;\n    } while (breaks.length < buckets - 1);\n\n    return breaks;\n}\n","import Classifier from './Classifier';\nimport { viewportMax, viewportMin } from '../../expressions';\nimport { checkExactNumberOfArguments, checkType } from '../utils';\n\n/**\n * Classify `input` by using the equal intervals method with `n` buckets.\n *\n * It will classify the input based on the filtered dataset, filtering by viewport and by `filter`.\n *\n * @param {Number} input - The input expression to classify\n * @param {number} n - Number of buckets\n * @return {Category}\n *\n * @example <caption>Use viewport equal intervals to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.viewportEqIntervals(s.prop('density'), 5), s.palettes.PRISM)\n * });\n *\n * @example <caption>Use viewport equal intervals to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(viewportEqIntervals($density, 5), PRISM)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportEqIntervals\n * @function\n * @api\n */\nexport default class ViewportEqIntervals extends Classifier {\n    constructor (input, buckets) {\n        checkExactNumberOfArguments(arguments, 2, 'viewportEqIntervals');\n\n        super({ input, buckets });\n    }\n\n    _resolveAliases (aliases) {\n        super._resolveAliases(aliases);\n\n        this._minMaxInitialization();\n    }\n\n    _minMaxInitialization () {\n        const input = this.input;\n        const children = { min: viewportMin(input), max: viewportMax(input) };\n\n        this._initializeChildren(children);\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        checkType('viewportEqIntervals', 'input', 0, 'number', this.input);\n    }\n\n    _validateInputIsNumericProperty () { /* noop */ }\n\n    _genBreakpoints () {\n        const min = this.min.value;\n        const max = this.max.value;\n\n        this.breakpoints.map((breakpoint, index) => {\n            const p = (index + 1) / this.numCategories;\n            breakpoint.value = min + (max - min) * p;\n        });\n    }\n}\n","import Classifier from './Classifier';\nimport { checkNumber, checkType, checkMaxArguments, checkMinArguments, implicitCast } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\nimport { viewportHistogram, viewportMin, viewportMax } from '../../expressions';\nimport { DEFAULT_HISTOGRAM_SIZE } from './Classifier';\n\n/**\n * Classify `input` by using the quantiles method with `n` buckets.\n *\n * It will classify the input based on the filtered dataset, filtering by viewport and by `filter`.\n *\n * @param {Number} input - The input expression used in the quantiles\n * @param {Number} n - Number of buckets to be returned\n * @param {Number?} histogramSize - Optional (DEFAULT_HISTOGRAM_SIZE = 1000).  Histogram 'size' used for calculations (the bigger, the more precision)\n * @return {Category}\n *\n * @example <caption>Use viewportQuantiles to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.viewportQuantiles(s.prop('density'), 5), s.palettes.PRISM)\n * });\n *\n * @example <caption>Use viewportQuantiles to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(viewportQuantiles($density, 5), PRISM)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportQuantiles\n * @function\n * @api\n */\nexport default class ViewportQuantiles extends Classifier {\n    constructor (input, buckets, histogramSize = DEFAULT_HISTOGRAM_SIZE) {\n        checkMinArguments(arguments, 2, 'viewportQuantiles');\n        checkMaxArguments(arguments, 3, 'viewportQuantiles');\n        input = implicitCast(input);\n\n        super({ input, buckets, _histogramSize: histogramSize });\n    }\n\n    _resolveAliases (aliases) {\n        super._resolveAliases(aliases);\n\n        this._histogramInitialization();\n    }\n\n    _histogramInitialization () {\n        this._validateHistogramSizeIsProperNumber();\n\n        const input = this.input;\n        const histogramSize = this._histogramSize.value;\n        const min = viewportMin(input);\n        const max = viewportMax(input);\n        const _histogram = viewportHistogram(input, histogramSize);\n\n        const children = { min, max, _histogram };\n        this._initializeChildren(children);\n    }\n\n    _validateHistogramSizeIsProperNumber () {\n        const histogramSize = this._histogramSize.value;\n        checkNumber(this.expressionName, 'histogramSize', 2, histogramSize);\n        if (histogramSize <= 0) {\n            throw new CartoValidationError(\n                `The 'histogramSize' must be > 0, but ${histogramSize} was used`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        checkType('viewportQuantiles', 'input', 0, 'number', this.input);\n    }\n\n    _validateInputIsNumericProperty () { /* noop */ }\n\n    _genBreakpoints () {\n        const histogram = this._histogram.value;\n\n        if (!histogram) {\n            return;\n        }\n\n        const accumHistogram = this._getAccumHistogramFrom(histogram);\n        const [min, max] = this._getMinMaxFrom(histogram);\n\n        this._updateBreakpointsWith({ accumHistogram, min, max });\n    }\n\n    _updateBreakpointsWith ({ accumHistogram, min, max }) {\n        const histogramBuckets = accumHistogram.length;\n\n        let i = 0;\n        const total = accumHistogram[histogramBuckets - 1];\n        // TODO OPT: this could be faster with binary search\n        this.breakpoints.map((breakpoint, index) => {\n            for (i; i < histogramBuckets; i++) {\n                if (accumHistogram[i] > (index + 1) / this.numCategories * total) {\n                    break;\n                }\n            }\n            const percentileValue = i / histogramBuckets * (max - min) + min;\n            breakpoint.value = percentileValue;\n        });\n    }\n\n    _getAccumHistogramFrom (histogram) {\n        let prev = 0;\n        const accumHistogram = histogram.map(({ y }) => {\n            prev += y;\n            return prev;\n        });\n        return accumHistogram;\n    }\n\n    _getMinMaxFrom (histogram) {\n        const min = histogram[0].x[0];\n        const max = histogram[histogram.length - 1].x[1];\n\n        return [min, max];\n    }\n}\n","import Classifier from './Classifier';\nimport { checkNumber, checkType, checkMaxArguments, checkMinArguments } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\nimport { viewportHistogram, viewportMin, viewportMax } from '../../expressions';\nimport { calculateBreakpoints } from './GlobalStandardDev';\nimport { DEFAULT_HISTOGRAM_SIZE } from './Classifier';\n\n/**\n * Classify `input` by using the Mean-Standard Deviation method with `n` buckets.\n *\n * It will classify the input based on the filtered dataset, filtering by viewport and by `filter`.\n *\n * It uses average and standard deviation (population formula) to classify the dataset.\n * When using an odd number of buckets, the central class has a double size (classSize * 2), to honour the number of required buckets\n *\n * This method is suitable if data are normally (or near normal) distributed, and it is specially\n * appropiated for diverging datasets, which can be well displayed using a diverging color scheme like TEALROSE\n *\n *\n * @param {Number} input - The input expression to classify\n * @param {Number} n - Number of buckets\n * @param {Number?} classSize - Optional. The class size, defaults to 1.0 standard deviation (usual values are also 0.5 or 0.25)\n * @param {Number?} histogramSize - Optional (DEFAULT_HISTOGRAM_SIZE = 1000).  Histogram 'size' used for calculations (the bigger, the more precision)\n * @return {Category}\n *\n * @example <caption>Use viewport mean-standard deviation to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.viewportStandardDev(s.prop('density'), 5), s.palettes.TEALROSE)\n * });\n *\n * @example <caption>Use viewport mean-standard deviation to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(viewportStandardDev($density, 5), tealrose)\n * `);\n *\n * @example <caption>Use viewport custom mean-standard deviation to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.viewportStandardDev(s.prop('density'), 7, 0.5), s.palettes.TEALROSE)\n * });\n *\n * @example <caption>Use viewport custom mean-standard deviation to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(viewportStandardDev($density, 7, 0.5), tealrose)\n * `);\n *\n * @memberof carto.expressions\n * @name viewportStandardDev\n * @function\n * @api\n */\n\nexport default class ViewportStandardDev extends Classifier {\n    constructor (input, buckets, classSize = 1.0, histogramSize = DEFAULT_HISTOGRAM_SIZE) {\n        checkMinArguments(arguments, 2, 'viewportStandardDev');\n        checkMaxArguments(arguments, 4, 'viewportStandardDev');\n\n        super({ input, buckets, _classSize: classSize, _histogramSize: histogramSize });\n    }\n\n    _resolveAliases (aliases) {\n        super._resolveAliases(aliases);\n\n        this._validateClassSizeIsProperNumber();\n        this._histogramInitialization();\n    }\n\n    _histogramInitialization () {\n        this._validateHistogramSizeIsProperNumber();\n\n        const input = this.input;\n        const histogramSize = this._histogramSize.value;\n        const min = viewportMin(input);\n        const max = viewportMax(input);\n        const _histogram = viewportHistogram(input, histogramSize);\n\n        const children = { min, max, _histogram };\n        this._initializeChildren(children);\n    }\n\n    _validateClassSizeIsProperNumber () {\n        const classSize = this._classSize.value;\n        checkNumber(this.expressionName, 'classSize', 2, classSize);\n        if (classSize <= 0) {\n            throw new CartoValidationError(\n                `The 'classSize' must be > 0.0, but ${classSize} was used.`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n    }\n\n    _validateHistogramSizeIsProperNumber () {\n        const histogramSize = this._histogramSize.value;\n        checkNumber(this.expressionName, 'histogramSize', 3, histogramSize);\n        if (histogramSize <= 0) {\n            throw new CartoValidationError(\n                `The 'histogramSize' must be > 0, but ${histogramSize} was used`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        checkType('viewportStandardDev', 'input', 0, 'number', this.input);\n    }\n\n    _validateInputIsNumericProperty () { /* noop */ }\n\n    _genBreakpoints () {\n        const histogram = this._histogram.value;\n        if (histogram === undefined) { return; }\n\n        const avg = this._getAverageFrom(histogram);\n        const stdev = this._getStandardDevFrom(histogram, avg);\n\n        this._updateBreakpointsWith({ avg, stdev });\n    }\n\n    _updateBreakpointsWith ({ avg, stdev }) {\n        const breaks = calculateBreakpoints(avg, stdev, this.numCategories, this._classSize.value);\n\n        this.breakpoints.forEach((breakpoint, index) => {\n            breakpoint.value = breaks[index];\n        });\n    }\n\n    _getAverageFrom (histogram) {\n        let sumFrequencies = 0.0;\n        let sumMidValueFrequencies = 0.0;\n        histogram.forEach(({ x, y }) => {\n            sumFrequencies += y;\n\n            const midValue = (x[0] + x[1]) / 2.0;\n            sumMidValueFrequencies += midValue * y;\n        });\n\n        const avg = sumMidValueFrequencies / sumFrequencies;\n        return avg;\n    }\n\n    _getStandardDevFrom (histogram, average) {\n        let sumFrequencies = 0.0;\n        let sumPowDifferences = 0.0;\n        histogram.forEach(({ x, y }) => {\n            sumFrequencies += y;\n\n            const midValue = (x[0] + x[1]) / 2.0;\n            const diff = (midValue - average);\n            sumPowDifferences += y * diff * diff;\n        });\n\n        const variance = sumPowDifferences / sumFrequencies;\n        return Math.sqrt(variance);\n    }\n}\n","module.exports = \"#ifndef CIELAB_TO_SRGBA\\n#define CIELAB_TO_SRGBA\\n\\nconst mat3 XYZ_2_RGB = (mat3(\\n    3.2404542,-1.5371385,-0.4985314,\\n    -0.9692660, 1.8760108, 0.0415560,\\n    0.0556434,-0.2040259, 1.0572252\\n));\\nconst float SRGB_GAMMA = 1.0 / 2.2;\\n\\nvec3 rgb_to_srgb_approx(vec3 rgb) {\\n    return pow(rgb, vec3(SRGB_GAMMA));\\n}\\n\\nfloat f1(float t){\\n    const float sigma = 6./29.;\\n    if (t>sigma){\\n        return t*t*t;\\n    }else{\\n        return 3.*sigma*sigma*(t-4./29.);\\n    }\\n}\\n\\nvec3 cielabtoxyz(vec3 c) {\\n    const float xn = 95.047/100.;\\n    const float yn = 100./100.;\\n    const float zn = 108.883/100.;\\n    return vec3(xn*f1((c.x+16.)/116.  + c.y/500. ),\\n                yn*f1((c.x+16.)/116.),\\n                zn*f1((c.x+16.)/116.  - c.z/200. )\\n            );\\n}\\n\\nvec3 xyztorgb(vec3 c){\\n    return c * XYZ_2_RGB;\\n}\\n\\nvec3 xyztosrgb(vec3 c) { // FIXME naming\\n    return rgb_to_srgb_approx(xyztorgb(c));\\n}\\n\\nvec4 cielabToSRGBA(vec4 cielab){\\n    return vec4(xyztosrgb(cielabtoxyz(\\n        vec3(\\n            clamp(cielab.r, 0., 100.),\\n            clamp(cielab.g, -128., 128.),\\n            clamp(cielab.b, -128., 128.)\\n        )\\n    )), cielab.a);\\n}\\n#endif\\n\\n\\n#ifndef SRGBA_TO_CIELAB\\n#define SRGBA_TO_CIELAB\\nvec4 sRGBToXYZ (vec4 srgba);\\nvec4 sRGBToLinearRGB (vec4 srgba);\\nfloat inverseGammaCorrection(float t);\\nvec4 XYZToCieLab (vec4 xyza);\\nfloat XYZToCieLabAux(float t);\\n\\nvec4 sRGBAToCieLAB(vec4 srgba){\\n    return XYZToCieLab(sRGBToXYZ(srgba));\\n}\\n\\n// Convert sRGB to CIE XYZ with the D65 white point\\nvec4 sRGBToXYZ (vec4 srgba) {\\n    // Poynton, \\\"Frequently Asked Questions About Color,\\\" page 10\\n    // Wikipedia: http://en.wikipedia.org/wiki/SRGB\\n    // Wikipedia: http://en.wikipedia.org/wiki/CIE_1931_color_space\\n    vec4 rgba = sRGBToLinearRGB(srgba);\\n    return vec4(\\n        (0.4123955889674142161 * rgba.r + 0.3575834307637148171 * rgba.g + 0.1804926473817015735 * rgba.b),\\n        (0.2125862307855955516 * rgba.r + 0.7151703037034108499 * rgba.g + 0.07220049864333622685 * rgba.b),\\n        (0.01929721549174694484 * rgba.r + 0.1191838645808485318 * rgba.g + 0.9504971251315797660 * rgba.b),\\n        rgba.a\\n    );\\n}\\n\\nvec4 sRGBToLinearRGB (vec4 srgba) {\\n    // http://en.wikipedia.org/wiki/SRGB\\n    return vec4(\\n        inverseGammaCorrection(srgba.r),\\n        inverseGammaCorrection(srgba.g),\\n        inverseGammaCorrection(srgba.b),\\n        srgba.a\\n    );\\n}\\n\\nfloat inverseGammaCorrection(float t) {\\n    return t <= 0.0404482362771076 ? t / 12.92 : pow((t + 0.055) / 1.055, 2.4);\\n}\\n\\n\\nfloat WHITEPOINT_D65_X = 0.950456;\\nfloat WHITEPOINT_D65_Y = 1.0;\\nfloat WHITEPOINT_D65_Z = 1.088754;\\n\\n// Convert CIE XYZ to CIE L*a*b* (CIELAB) with the D65 white point\\nvec4 XYZToCieLab (vec4 xyza) {\\n    // Wikipedia: http://en.wikipedia.org/wiki/Lab_color_space\\n\\n    float xn = WHITEPOINT_D65_X;\\n    float yn = WHITEPOINT_D65_Y;\\n    float zn = WHITEPOINT_D65_Z;\\n\\n    return vec4(\\n        116. * XYZToCieLabAux(xyza.y / yn) - 16.,\\n        500. * (XYZToCieLabAux(xyza.x / xn) - XYZToCieLabAux(xyza.y / yn)),\\n        200. * (XYZToCieLabAux(xyza.y / yn) - XYZToCieLabAux(xyza.z / zn)),\\n        xyza.a\\n    );\\n}\\n\\nfloat XYZToCieLabAux(float t) {\\n    return t >= 8.85645167903563082e-3\\n            ? pow(t, 0.333333333333333) : (841.0 / 108.0) * t + 4.0 / 29.0;\\n}\\n\\n#endif\\n\"","import BaseExpression from '../base';\nimport { implicitCast, checkType, checkExpression, checkMaxArguments } from '../utils';\nimport CIELabGLSL from './CIELab.glsl';\nimport { cielabToSRGB } from '../../colorspaces';\n\n/**\n * Evaluates to a CIELab color.\n *\n * @param {Number} l - The lightness of the color\n * @param {Number} a - The green–red color component\n * @param {Number} b - The blue–yellow color component\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.cielab(32.3, 79.2, -107.86)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: cielab(32.3, 79.2, -107.86)\n * `);\n *\n * @memberof carto.expressions\n * @name cielab\n * @function\n * @api\n */\nexport default class CIELab extends BaseExpression {\n    constructor (l, a, b) {\n        checkMaxArguments(arguments, 3, 'cielab');\n        l = implicitCast(l);\n        a = implicitCast(a);\n        b = implicitCast(b);\n\n        checkExpression('cielab', 'l', 0, l);\n        checkExpression('cielab', 'a', 1, a);\n        checkExpression('cielab', 'b', 2, b);\n\n        super({ l, a, b });\n        this.type = 'color';\n\n        this._setGenericGLSL(\n            inline => `cielabToSRGBA(vec4(${inline.l}, ${inline.a}, ${inline.b}, 1.))`,\n            CIELabGLSL\n        );\n    }\n\n    get value () {\n        return this.eval(null);\n    }\n\n    eval (feature) {\n        return cielabToSRGB({\n            l: this.l.eval(feature),\n            a: this.a.eval(feature),\n            b: this.b.eval(feature)\n        });\n    }\n\n    getLegendData () {\n        const name = 'color';\n        const value = this.value;\n        const key = 'color';\n        const data = [{ key, value }];\n\n        return { name, data };\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        checkType('cielab', 'l', 0, 'number', this.l);\n        checkType('cielab', 'a', 1, 'number', this.a);\n        checkType('cielab', 'b', 2, 'number', this.b);\n    }\n}\n","import BaseExpression from '../base';\nimport { checkString, checkMaxArguments, getStringErrorPreface } from '../utils';\nimport { CSS_COLOR_NAMES } from './cssColorNames';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\n/**\n * Create a color from its name.\n *\n * @param {String} name - The name of the color\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.namedColor('blue')  // Equivalent to `color: 'blue'`\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: blue  // Equivalent to namedColor('blue')\n * `);\n *\n * @memberof carto.expressions\n * @name namedColor\n * @function\n * @api\n */\nexport default class NamedColor extends BaseExpression {\n    constructor (colorName) {\n        checkMaxArguments(arguments, 1, 'namedColor');\n        checkString('namedColor', 'colorName', 0, colorName);\n\n        if (!CSS_COLOR_NAMES.includes(colorName.toLowerCase())) {\n            const preface = getStringErrorPreface('namedColor', 'colorName', 0);\n            throw new CartoValidationError(\n                `${preface}\\nInvalid color name:  '${colorName}'`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n        super({});\n        this.type = 'color';\n        this.name = colorName;\n        this.expressionName = colorName;\n        this.color = _nameToRGBA(this.name);\n        this.inlineMaker = () => `vec4(${(this.color.r / 255).toFixed(4)}, ${(this.color.g / 255).toFixed(4)}, ${(this.color.b / 255).toFixed(4)}, ${(this.color.a).toFixed(4)})`;\n    }\n\n    get value () {\n        return this.color;\n    }\n\n    toString () {\n        return this.expressionName;\n    }\n\n    getLegendData () {\n        const name = 'color';\n        const value = this.color;\n        const key = 'color';\n        const data = [{ key, value }];\n\n        return { name, data };\n    }\n}\n\nconst nameToRGBACache = {};\n\nfunction _nameToRGBA (name) {\n    if (nameToRGBACache[name]) {\n        return nameToRGBACache[name];\n    }\n    const colorRegex = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n    const fakeDiv = document.createElement('div');\n    fakeDiv.style.backgroundColor = name;\n    document.body.appendChild(fakeDiv);\n    const rgbSring = getComputedStyle(fakeDiv).backgroundColor;\n    document.body.removeChild(fakeDiv);\n\n    const match = colorRegex.exec(rgbSring);\n    const color = {\n        r: Number(match[1]),\n        g: Number(match[2]),\n        b: Number(match[3]),\n        a: Number(match[4] || 1)\n    };\n\n    nameToRGBACache[name] = color;\n    return color;\n}\n","import BaseExpression from '../base';\nimport { checkType, checkMaxArguments, checkExpression, implicitCast } from '../utils';\n\n/**\n * Override the input opacity.\n *\n * @param {Color | Image} color - Color or image expression to apply the opacity\n * @param {Number} alpha - Number expression with the alpha (transparency) value\n * @return {Color | Image}\n *\n * @example <caption>Display blue points with 50% opacity.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.opacity(s.rgb(0,0,255), 0.5)  // Equivalent to `s.rgba(0,0,255,0.5)`\n * });\n *\n * @example <caption>Display blue points with 50% opacity. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: opacity(rgb(0,0,255), 0.5) // Equivalent to `rgba(0,0,255,0.5)`\n * `);\n *\n * @memberof carto.expressions\n * @name opacity\n * @function\n * @api\n */\nexport default class Opacity extends BaseExpression {\n    constructor (input, alpha) {\n        checkMaxArguments(arguments, 2, 'opacity');\n\n        input = implicitCast(input);\n        alpha = implicitCast(alpha);\n\n        checkExpression('opacity', 'input', 0, input);\n        checkExpression('opacity', 'alpha', 1, alpha);\n        super({ input, alpha });\n        this.inlineMaker = inline => `vec4((${inline.input}).rgb, ${inline.alpha})`;\n    }\n\n    get value () {\n        const value = this.input.value;\n        const alpha = this.alpha.value;\n        value.a = alpha;\n\n        return value;\n    }\n\n    eval (feature) {\n        const input = this.input.eval(feature);\n        const alpha = this.alpha.eval(feature);\n        input.a = alpha;\n\n        return input;\n    }\n\n    getLegendData (options) {\n        const legend = this.input.getLegendData(options);\n        const alpha = this.alpha.value;\n\n        if (this.input.type === 'color') {\n            const data = legend.data.map(({ key, value }) => {\n                const { r, g, b } = value;\n                const a = alpha;\n\n                return {\n                    key,\n                    value: { r, g, b, a }\n                };\n            });\n\n            return { ...legend, data };\n        } else {\n            const data = legend.data;\n            return { ...legend, data, alpha };\n        }\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        checkType('opacity', 'input', 0, ['color', 'image'], this.input);\n        checkType('opacity', 'alpha', 1, 'number', this.alpha);\n        this.type = this.input.type;\n    }\n}\n","export const CSS_COLOR_NAMES = [\n    'aliceblue',\n    'antiquewhite',\n    'aqua',\n    'aquamarine',\n    'azure',\n    'beige',\n    'bisque',\n    'black',\n    'blanchedalmond',\n    'blue',\n    'blueviolet',\n    'brown',\n    'burlywood',\n    'cadetblue',\n    'chartreuse',\n    'chocolate',\n    'coral',\n    'cornflowerblue',\n    'cornsilk',\n    'crimson',\n    'cyan',\n    'darkblue',\n    'darkcyan',\n    'darkgoldenrod',\n    'darkgray',\n    'darkgreen',\n    'darkgrey',\n    'darkkhaki',\n    'darkmagenta',\n    'darkolivegreen',\n    'darkorange',\n    'darkorchid',\n    'darkred',\n    'darksalmon',\n    'darkseagreen',\n    'darkslateblue',\n    'darkslategray',\n    'darkslategrey',\n    'darkturquoise',\n    'darkviolet',\n    'deeppink',\n    'deepskyblue',\n    'dimgray',\n    'dimgrey',\n    'dodgerblue',\n    'firebrick',\n    'floralwhite',\n    'forestgreen',\n    'fuchsia',\n    'gainsboro',\n    'ghostwhite',\n    'gold',\n    'goldenrod',\n    'gray',\n    'green',\n    'greenyellow',\n    'grey',\n    'honeydew',\n    'hotpink',\n    'indianred',\n    'indigo',\n    'ivory',\n    'khaki',\n    'lavender',\n    'lavenderblush',\n    'lawngreen',\n    'lemonchiffon',\n    'lightblue',\n    'lightcoral',\n    'lightcyan',\n    'lightgoldenrodyellow',\n    'lightgray',\n    'lightgreen',\n    'lightgrey',\n    'lightpink',\n    'lightsalmon',\n    'lightseagreen',\n    'lightskyblue',\n    'lightslategray',\n    'lightslategrey',\n    'lightsteelblue',\n    'lightyellow',\n    'lime',\n    'limegreen',\n    'linen',\n    'magenta',\n    'maroon',\n    'mediumaquamarine',\n    'mediumblue',\n    'mediumorchid',\n    'mediumpurple',\n    'mediumseagreen',\n    'mediumslateblue',\n    'mediumspringgreen',\n    'mediumturquoise',\n    'mediumvioletred',\n    'midnightblue',\n    'mintcream',\n    'mistyrose',\n    'moccasin',\n    'navajowhite',\n    'navy',\n    'oldlace',\n    'olive',\n    'olivedrab',\n    'orange',\n    'orangered',\n    'orchid',\n    'palegoldenrod',\n    'palegreen',\n    'paleturquoise',\n    'palevioletred',\n    'papayawhip',\n    'peachpuff',\n    'peru',\n    'pink',\n    'plum',\n    'powderblue',\n    'purple',\n    'red',\n    'rosybrown',\n    'royalblue',\n    'saddlebrown',\n    'salmon',\n    'sandybrown',\n    'seagreen',\n    'seashell',\n    'sienna',\n    'silver',\n    'skyblue',\n    'slateblue',\n    'slategray',\n    'slategrey',\n    'snow',\n    'springgreen',\n    'steelblue',\n    'tan',\n    'teal',\n    'thistle',\n    'tomato',\n    'transparent',\n    'turquoise',\n    'violet',\n    'wheat',\n    'white',\n    'whitesmoke',\n    'yellow',\n    'yellowgreen'\n];\n","import BaseExpression from '../base';\nimport { checkString, hexToRgb, getStringErrorPreface, checkMaxArguments } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\n/**\n * Create a color from its hexadecimal description.\n *\n * @param {String} hexadecimalColor - Color in the #RGB, #RGBA, #RRGGBB or #RRGGBBAA format\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.hex('#00F');  // Equivalent to `color: '#00F'`\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: #00F  // Equivalent to hex('#00F')\n * `);\n *\n * @memberof carto.expressions\n * @name hex\n * @function\n * @api\n */\nexport default class Hex extends BaseExpression {\n    constructor (hexadecimalColor) {\n        checkMaxArguments(arguments, 1, 'hex');\n        checkString('hex', 'hexadecimalColor', 0, hexadecimalColor);\n\n        super({});\n        this.type = 'color';\n        try {\n            this.color = hexToRgb(hexadecimalColor);\n        } catch (error) {\n            const preface = getStringErrorPreface('hex', 'hexadecimalColor', 0);\n            throw new CartoValidationError(\n                `${preface} \\nInvalid hexadecimal color string`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n        this.hexadecimalColor = hexadecimalColor;\n        this.inlineMaker = () => `vec4(${(this.color.r / 255).toFixed(4)}, ${(this.color.g / 255).toFixed(4)}, ${(this.color.b / 255).toFixed(4)}, ${(this.color.a).toFixed(4)})`;\n    }\n\n    toString () {\n        return this.hexadecimalColor;\n    }\n\n    get value () {\n        return this.color;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    getLegendData () {\n        const name = 'color';\n        const value = this.value;\n        const key = 'color';\n        const data = [{ key, value }];\n\n        return { name, data };\n    }\n}\n","\nimport BaseExpression from '../base';\nimport { implicitCast, checkExpression, checkType, checkMaxArguments, clamp } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\n/**\n * Evaluates to a hsl color.\n *\n * @param {Number} h - hue of the color in the [0, 1] range\n * @param {Number} s - saturation of the color in the [0, 1] range\n * @param {Number} l - lightness of the color in the [0, 1] range\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.hsl(0.67, 1.0, 0.5)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: hsl(0.67, 1.0, 0.5)\n * `);\n *\n * @memberof carto.expressions\n * @name hsl\n * @function\n * @api\n */\nexport const HSL = genHSL('hsl', false);\n\n/**\n * Evaluates to a hsla color.\n *\n * @param {Number} h - hue of the color in the [0, 1] range\n * @param {Number} s - saturation of the color in the [0, 1] range\n * @param {Number} l - lightness of the color in the [0, 1] range\n * @param {Number} a - alpha value of the color in the [0, 1] range\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.hsla(0.67, 1.0, 0.5, 1.0)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: hsla(0.67, 1.0, 0.5, 1.0)\n * `);\n *\n * @memberof carto.expressions\n * @function\n * @name hsla\n * @api\n */\nexport const HSLA = genHSL('hsla', true);\n\nfunction genHSL (name, alpha = null) {\n    return class HSLA extends BaseExpression {\n        constructor (h, s, l, a) {\n            checkMaxArguments(arguments, 4, 'hsla');\n\n            [h, s, l, a] = [h, s, l, a].map(implicitCast);\n\n            const children = { h, s, l };\n\n            if (alpha) {\n                checkExpression(name, 'a', 3, a);\n                children.a = a;\n            }\n\n            checkExpression(name, 'h', 0, h);\n            checkExpression(name, 's', 1, s);\n            checkExpression(name, 'l', 2, l);\n\n            super(children);\n            this._alpha = alpha;\n            this.type = 'color';\n        }\n\n        get value () {\n            return this.eval(null);\n        }\n\n        eval (feature) {\n            const h = clamp(normalize(this.h, feature, true), 0, 1);\n            const s = clamp(normalize(this.s, feature), 0, 1);\n            const l = clamp(normalize(this.l, feature), 0, 1);\n            const a = this.a;\n            const alpha = this._alpha;\n\n            return hslToRgb(h, s, l, a, alpha, feature);\n        }\n\n        getLegendData () {\n            const name = 'color';\n            const value = this.value;\n            const key = 'color';\n            const data = [{ key, value }];\n\n            return { name, data };\n        }\n        _bindMetadata (meta) {\n            super._bindMetadata(meta);\n            hslCheckType('h', 0, this.h);\n            hslCheckType('s', 1, this.s);\n            hslCheckType('l', 2, this.l);\n\n            if (this._alpha) {\n                checkType('hsla', 'a', 3, 'number', this.a);\n            }\n\n            super._setGenericGLSL(\n                inline => `vec4(HSLtoRGB(vec3(\n                    ${inline.h}${normalizeGLSL(this.h, true)},\n                    clamp(${inline.s}${normalizeGLSL(this.s)}, 0., 1.),\n                    clamp(${inline.l}${normalizeGLSL(this.l)}, 0., 1.)\n                )), ${this._alpha ? `clamp(${inline.a}, 0., 1.)` : '1.'})`,\n                `\n                    #ifndef HSL2RGB\n                    #define HSL2RGB\n                    vec3 HSLtoRGB(vec3 HSL) {\n                        float R = abs(HSL.x * 6. - 3.) - 1.;\n                        float G = 2. - abs(HSL.x * 6. - 2.);\n                        float B = 2. - abs(HSL.x * 6. - 4.);\n                        float C = (1. - abs(2. * HSL.z - 1.)) * HSL.y;\n                        vec3 RGB = clamp(vec3(R,G,B), 0., 1.);\n                        return (RGB - 0.5) * C + HSL.z;\n                    }\n                    #endif\n                `\n            );\n        }\n    };\n\n    function hslCheckType (parameterName, parameterIndex, parameter) {\n        checkExpression(name, parameterName, parameterIndex, parameter);\n        if (parameter.type !== 'number' && parameter.type !== 'category' && parameter.type !== undefined) {\n            throw new CartoValidationError(\n                `${name}(): invalid parameter\\n\\t${parameterName} type was: '${parameter.type}'`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n    }\n\n    function hslToRgb (h, s, l, a, alpha, feature) {\n        const aValue = alpha ? (feature ? a.eval(feature) : a.value) : 1;\n\n        const c = {\n            r: Math.abs(h * 6 - 3) - 1,\n            g: 2 - Math.abs(h * 6 - 2),\n            b: 2 - Math.abs(h * 6 - 4),\n            a: aValue\n        };\n\n        const C = (1 - Math.abs(2 * l - 1)) * s;\n\n        c.r = clamp(c.r, 0, 1);\n        c.g = clamp(c.g, 0, 1);\n        c.b = clamp(c.b, 0, 1);\n\n        c.r = ((c.r - 0.5) * C + l) * 255;\n        c.g = ((c.g - 0.5) * C + l) * 255;\n        c.b = ((c.b - 0.5) * C + l) * 255;\n\n        return c;\n    }\n\n    function normalize (input, feature, hue = false) {\n        const data = feature !== null\n            ? input.eval(feature)\n            : input.value;\n\n        if (input.type === 'category') {\n            return data / (hue ? input.numCategories + 1 : input.numCategories);\n        }\n\n        return data;\n    }\n\n    function normalizeGLSL (input, hue = false) {\n        if (input.type === 'category') {\n            return `/${hue ? input.numCategories + 1 : input.numCategories}.`;\n        }\n\n        return '';\n    }\n}\n","import BaseExpression from '../base';\nimport { implicitCast, checkExpression, checkType, checkMaxArguments, clamp } from '../utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../../errors/carto-validation-error';\n\n/**\n * Evaluates to a hsv color.\n *\n * @param {Number} h - hue of the color in the [0, 1] range\n * @param {Number} s - saturation of the color in the [0, 1] range\n * @param {Number} v - value (brightness) of the color in the [0, 1] range\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.hsv(0.67, 1.0, 1.0)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: hsv(0.67, 1.0, 1.0)\n * `);\n *\n * @memberof carto.expressions\n * @name hsv\n * @function\n * @api\n */\nexport const HSV = genHSV('hsv', false);\n\n/**\n * Evaluates to a hsva color.\n *\n * @param {Number} h - hue of the color in the [0, 1] range\n * @param {Number} s - saturation of the color in the [0, 1] range\n * @param {Number} v - value (brightness) of the color in the [0, 1] range\n * @param {Number} a - alpha value of the color in the [0, 1] range\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.hsva(0.67, 1.0, 1.0, 1.0)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: hsva(0.67, 1.0, 1.0, 1.0)\n * `);\n *\n * @memberof carto.expressions\n * @function\n * @name hsva\n * @api\n */\nexport const HSVA = genHSV('hsva', true);\n\nfunction genHSV (name, alpha) {\n    return class extends BaseExpression {\n        constructor (h, s, v, a) {\n            if (alpha) {\n                checkMaxArguments(arguments, 4, name);\n            } else {\n                checkMaxArguments(arguments, 3, name);\n            }\n\n            h = implicitCast(h);\n            s = implicitCast(s);\n            v = implicitCast(v);\n            const children = { h, s, v };\n            if (alpha) {\n                a = implicitCast(a);\n                checkExpression(name, 'a', 3, a);\n                children.a = a;\n            }\n\n            checkExpression(name, 'h', 0, h);\n            checkExpression(name, 's', 1, s);\n            checkExpression(name, 'v', 2, v);\n\n            super(children);\n            this.type = 'color';\n        }\n\n        get value () {\n            return this.eval(null);\n        }\n\n        eval (feature) {\n            const normalize = (value, hue = false) => {\n                if (value.type === 'category') {\n                    return value.eval(feature) / (hue ? value.numCategories + 1 : value.numCategories);\n                }\n                return value.eval(feature);\n            };\n            const h = clamp(normalize(this.h, true), 0, 1);\n            const s = clamp(normalize(this.s), 0, 1);\n            const v = clamp(normalize(this.v), 0, 1);\n\n            const hsvToRgb = (h, s, v) => {\n                const c = {\n                    r: Math.abs(h * 6 - 3) - 1,\n                    g: 2 - Math.abs(h * 6 - 2),\n                    b: 2 - Math.abs(h * 6 - 4),\n                    a: alpha ? clamp(this.a.eval(feature), 0, 1) : 1\n                };\n\n                c.r = clamp(c.r, 0, 1);\n                c.g = clamp(c.g, 0, 1);\n                c.b = clamp(c.b, 0, 1);\n\n                c.r = ((c.r - 1) * s + 1) * v * 255;\n                c.g = ((c.g - 1) * s + 1) * v * 255;\n                c.b = ((c.b - 1) * s + 1) * v * 255;\n\n                return c;\n            };\n\n            return hsvToRgb(h, s, v);\n        }\n\n        getLegendData () {\n            const name = 'color';\n            const value = this.value;\n            const key = 'color';\n            const data = [{ key, value }];\n\n            return { name, data };\n        }\n\n        _bindMetadata (metadata) {\n            super._bindMetadata(metadata);\n            hsvCheckType('h', 0, this.h);\n            hsvCheckType('s', 1, this.s);\n            hsvCheckType('v', 2, this.v);\n            if (alpha) {\n                checkType('hsva', 'a', 3, 'number', this.a);\n            }\n            const normalize = (value, hue = false) => {\n                if (value.type === 'category') {\n                    return `/${hue ? value.numCategories + 1 : value.numCategories}.`;\n                }\n                return '';\n            };\n            super._setGenericGLSL(\n                inline => `vec4(HSVtoRGB(vec3(\n                    ${inline.h}${normalize(this.h, true)},\n                    clamp(${inline.s}${normalize(this.s)}, 0.,1.),\n                    clamp(${inline.v}${normalize(this.v)}, 0.,1.)\n                )), ${alpha ? `clamp(${inline.a}, 0.,1.)` : '1.'})`,\n                `\n                    #ifndef HSV2RGB\n                    #define HSV2RGB\n                    vec3 HSVtoRGB(vec3 HSV) {\n                        float R = abs(HSV.x * 6. - 3.) - 1.;\n                        float G = 2. - abs(HSV.x * 6. - 2.);\n                        float B = 2. - abs(HSV.x * 6. - 4.);\n                        vec3 RGB = clamp(vec3(R,G,B), 0., 1.);\n                        return ((RGB - 1.) * HSV.y + 1.) * HSV.z;\n                    }\n                    #endif\n                `\n            );\n        }\n    };\n\n    function hsvCheckType (parameterName, parameterIndex, parameter) {\n        checkExpression(name, parameterName, parameterIndex, parameter);\n        if (parameter.type !== 'number' && parameter.type !== 'category' && parameter.type !== undefined) {\n            throw new CartoValidationError(\n                `${name}(): invalid parameter\\n\\t${parameterName} type was: '${parameter.type}'`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n    }\n}\n","\nimport * as cartocolor from 'cartocolor';\nimport Palette from './palettes/Palette';\n\nconst palettes = {};\n\nObject.keys(cartocolor).map(name => {\n    palettes[`${name.toUpperCase()}`] = new Palette(name, cartocolor[name]);\n});\n\nexport default palettes;\n","import BaseExpression from '../../base';\nimport { hexToRgb } from '../../utils';\nimport { RGBA } from '../rgb';\nimport { constant } from '../../../expressions';\n\nconst MIN_CARTOCOLOR_SUBPALETTE_SIZE = 2;\n\n/**\n * Color palettes.\n *\n * Palettes are constants that allow to use {@link https://carto.com/carto-colors/|CARTOColors} and {@link https://github.com/axismaps/colorbrewer/|ColorBrewer} palettes easily.\n * Use them with a {@link carto.expressions.ramp|ramp}.\n *\n * The following palettes are available in the namespace {@link carto.expressions|carto.expressions}.\n *\n *  ```\n *  BURG, BURGYL, REDOR, ORYEL, PEACH, PINKYL, MINT, BLUGRN, DARKMINT, EMRLD, AG_GRNYL, BLUYL, TEAL, TEALGRN,\n *  PURP, PURPOR, SUNSET, MAGENTA, SUNSETDARK, AG_SUNSET, BRWNYL, ARMYROSE, FALL, GEYSER, TEMPS, TEALROSE, TROPIC,\n *  EARTH, ANTIQUE, BOLD, PASTEL, PRISM, SAFE, VIVID, CB_YLGN, CB_YLGNBU, CB_GNBU, CB_BUGN, CB_PUBUGN, CB_PUBU,\n *  CB_BUPU, CB_RDPU, CB_PURD, CB_ORRD, CB_YLORRD, CB_YLORBR, CB_PURPLES, CB_BLUES, CB_GREENS, CB_ORANGES, CB_REDS,\n *  CB_GREYS, CB_PUOR, CB_BRBG, CB_PRGN, CB_PIYG, CB_RDBU, CB_RDGY, CB_RDYLBU, CB_SPECTRAL, CB_RDYLGN, CB_ACCENT,\n *  CB_DARK2, CB_PAIRED, CB_PASTEL1, CB_PASTEL2, CB_SET1, CB_SET2, CB_SET3\n *  ```\n *\n * @example <caption>Using a color scheme.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.prop('type'), s.palettes.PRISM);\n * });\n *\n * @example <caption>Using a color scheme. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp($type, PRISM)\n * `);\n *\n * @name palettes\n * @memberof carto.expressions\n * @api\n */\nexport default class Palette extends BaseExpression {\n    constructor (name, subPalettes) {\n        super({});\n        this.type = 'palette';\n        this.childType = 'color';\n        this.name = name;\n        this.subPalettes = new Proxy(subPalettes, {\n            get: (target, name) => {\n                if (typeof name !== 'symbol' && Number.isSafeInteger(Number(name)) && Array.isArray(target[name])) {\n                    return target[name].map(hexToRgb);\n                }\n            }\n        });\n        this.expressionName = name;\n        this.tags = subPalettes.tags;\n    }\n\n    getColors (numCategories) {\n        const colors = this._getBestSubPalette(numCategories);\n\n        if (this.isQualitative()) {\n            const othersColor = colors.pop();\n            return { colors, othersColor };\n        } else {\n            return { colors, othersColor: null };\n        }\n    }\n\n    toString () {\n        return this.expressionName;\n    }\n\n    _getBestSubPalette (subPaletteIndex) {\n        subPaletteIndex = subPaletteIndex <= MIN_CARTOCOLOR_SUBPALETTE_SIZE\n            ? MIN_CARTOCOLOR_SUBPALETTE_SIZE\n            : subPaletteIndex;\n        const longestSubPalette = this.getLongestSubPalette();\n        const subPalette = (subPaletteIndex < longestSubPalette.length\n            ? [...this.subPalettes[subPaletteIndex]]\n            : [...longestSubPalette]);\n        return subPalette.map(color =>\n            new RGBA(constant(color.r), constant(color.g), constant(color.b), constant(color.a))\n        );\n    }\n\n    getLongestSubPalette () {\n        const s = this.subPalettes;\n        for (let i = 20; i >= 0; i--) {\n            if (s[i]) {\n                return s[i];\n            }\n        }\n    }\n\n    isQualitative () {\n        return this.tags.includes('qualitative');\n    }\n\n    isQuantitative () {\n        return this.tags.includes('quantitative');\n    }\n}\n","import BaseExpression from '../base';\nimport { implicitCast, checkType, checkMaxArguments, checkExpression } from '../utils';\n\n/**\n * Evaluates to a rgb color.\n *\n * @param {Number} r - The amount of red in the color in the [0, 255] range. Numeric expression.\n * @param {Number} g - The amount of green in the color in the [0, 255] range. Numeric expression.\n * @param {Number} b - The amount of blue in the color in the [0, 255] range. Numeric expression.\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.rgb(0, 0, 255)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: rgb(0, 0, 255)\n * `);\n *\n * @memberof carto.expressions\n * @name rgb\n * @function\n * @api\n */\nexport const RGB = genRGB('rgb', false);\n\n/**\n * Evaluates to a rgba color.\n *\n * @param {Number} r - The amount of red in the color in the [0, 255] range. Numeric expression.\n * @param {Number} g - The amount of green in the color in the [0, 255] range. Numeric expression.\n * @param {Number} b - The amount of blue in the color in the [0, 255] range. Numeric expression.\n * @param {Number} a - The alpha value of the color in the [0, 1] range. Numeric expression.\n * @return {Color}\n *\n * @example <caption>Display blue points.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.rgba(0, 0, 255, 1)\n * });\n *\n * @example <caption>Display blue points. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: rgba(0, 0, 255, 1)\n * `);\n *\n * @memberof carto.expressions\n * @name rgba\n * @function\n * @api\n */\nexport const RGBA = genRGB('rgba', true);\n\n// TODO refactor to uniformcolor, write color (plain, literal)\n\nfunction genRGB (name, alpha) {\n    return class RGBA extends BaseExpression {\n        constructor (r, g, b, a) {\n            checkMaxArguments(arguments, 4, 'rgba');\n\n            [r, g, b, a] = [r, g, b, a].map(implicitCast);\n            checkExpression(name, 'r', 0, r);\n            checkExpression(name, 'g', 1, g);\n            checkExpression(name, 'b', 2, b);\n\n            const children = { r, g, b };\n            if (alpha) {\n                checkExpression(name, 'a', 3, a);\n                children.a = a;\n            }\n            super(children);\n            this.type = 'color';\n            this.inlineMaker = inline => `vec4(${inline.r}/255., ${inline.g}/255., ${inline.b}/255., ${alpha ? inline.a : '1.'})`;\n        }\n\n        get value () {\n            return {\n                r: this.r.value,\n                g: this.g.value,\n                b: this.b.value,\n                a: alpha ? this.a.value : 1\n            };\n        }\n\n        eval () {\n            return this.value;\n        }\n\n        getLegendData () {\n            const name = 'color';\n            const value = this.value;\n            const key = 'color';\n            const data = [{ key, value }];\n\n            return { name, data };\n        }\n\n        _bindMetadata (meta) {\n            super._bindMetadata(meta);\n            checkType(name, 'r', 0, 'number', this.r);\n            checkType(name, 'g', 1, 'number', this.g);\n            checkType(name, 'b', 2, 'number', this.b);\n            if (alpha) {\n                checkType('rgba', 'a', 3, 'number', this.a);\n            }\n        }\n    };\n}\n","export const DEFAULT_RAMP_OTHERS = 'DEFAULT_RAMP_OTHERS';\nexport const DEFAULT_SAMPLES = 10;\nexport const OTHERS_GLSL_VALUE = '(-1.)';\nexport const OTHERS_INDEX = -1;\nexport const OTHERS_LABEL = 'CARTO_VL_OTHERS';\nexport const DEFAULT_OPTIONS = {\n    othersLabel: OTHERS_LABEL,\n    samples: DEFAULT_SAMPLES\n};\n\nexport const FP32_DESIGNATED_NULL_VALUE = -(1 << 24);\n","import Histogram from './Histogram';\nimport Property from '../basic/property';\nimport { checkMaxArguments, implicitCast, checkArray } from '../utils';\nimport { OTHERS_LABEL, DEFAULT_OPTIONS } from '../constants';\n\n/**\n * Generates a histogram based on a representative sample of the data.\n *\n * The histogram can be based on a categorical expression, in which case each category will correspond to a histogram bar.\n *\n * The histogram can be based on a numeric expression, the buckets for the histogram is controllable through the `sizeOrBuckets` parameter.\n * For numeric values of sizeOrBuckets, the minimum and maximum will be computed automatically and bars will be generated at regular intervals between the minimum and maximum.\n * When providing sizeOrBuckets as a list of buckets, the values will get assigned to the first bucket matching the criteria [bucketMin <= value < bucketMax].\n *\n * The globalHistogram can also be combined with the `top()` expression.\n *\n * Histograms are useful to get insights and create widgets outside the scope of CARTO VL, see the following example for more info.\n *\n * @param {Number} input - expression to base the histogram\n * @param {Number|Array} sizeOrBuckets - Optional (defaults to 20). Number of bars to use if `x` is a numeric expression; or user-defined buckets for numeric expressions.\n * @return {GlobalHistogram} GlobalHistogram\n *\n * @example <caption>Create and use an histogram.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz(\n *     variables: {\n *       categoryHistogram: s.globalHistogram(s.prop('type')),\n *       numericHistogram: s.globalHistogram(s.prop('amount'), 3, 1),\n *       userDefinedHistogram: s.globalHistogram(s.prop('amount', [[0, 10], [10, 20], [20, 30]], 1),\n *       topCategoryHistogram: s.globalHistogram(s.top(s.prop('type'), 3))\n *     }\n * );\n * // ...\n * console.log(viz.variables.categoryHistogram.value);\n * // [{x: 'typeA', y: 10}, {x: 'typeB', y: 20}]\n * // There are 10 features of type A and 20 of type B\n *\n * console.log(viz.variables.numericHistogram.value);\n * // [{x: [0,10],  y: 20}, {x: [10,20],  y: 7}, {x: [20, 30], y: 3}]\n * // There are 20 features with an amount between 0 and 10, 7 features with an amount between 10 and 20, and 3 features with an amount between 20 and 30\n *\n *\n * @example <caption>Create and use an histogram. (String)</caption>\n * const viz = new carto.Viz(`\n *    \\@categoryHistogram:    globalHistogram($type)\n *    \\@numericHistogram:     globalHistogram($amount, 3, 1)\n *    \\@userDefinedHistogram: globalHistogram($amount, [[0, 10], [10, 20], [20, 30]], 1)\n *    \\@topCategoryHistogram: globalHistogram(top($type, 3))\n * `);\n * // ...\n * console.log(viz.variables.categoryHistogram.value);\n * // [{x: 'typeA', y: 10}, {x: 'typeB', y: 20}]\n * // There are 10 features of type A and 20 of type B\n *\n * console.log(viz.variables.numericHistogram.value);\n * // [{x: [0,10],  y: 20}, {x: [10,20],  y: 7}, {x: [20, 30], y: 3}]\n * // There are 20 features with an amount between 0 and 10, 7 features with an amount between 10 and 20, and 3 features with an amount between 20 and 30\n *\n * @memberof carto.expressions\n * @name globalHistogram\n * @function\n * @api\n */\n\n/**\n * GlobalHistogram Class\n *\n * Generates a histogram based on the samples from the metadata.\n * This class is instanced automatically by using the `globalHistogram` function. It is documented for its methods.\n * Read more about histogram expression at {@link carto.expressions.globalHistogram}.\n *\n * @name expressions.GlobalHistogram\n * @abstract\n * @hideconstructor\n * @class\n * @api\n */\nexport default class GlobalHistogram extends Histogram {\n    constructor (input, sizeOrBuckets = 20) {\n        checkMaxArguments(arguments, 3, 'globalHistogram');\n        super({ input: implicitCast(input) });\n\n        this._sizeOrBuckets = sizeOrBuckets;\n        this._hasBuckets = Array.isArray(sizeOrBuckets);\n        this._histogram = new Map();\n    }\n\n    /**\n     * Get an array of joined data by key and sorted by frequency.\n     *\n     * Note: It can be combined with a `ramp.getLegendData()` method. Take a look at the examples to see how it works.\n     *\n     * @param {Array} values - Array of { key, value } pairs\n     * @return {Array} - { frequency, key, value }\n     * @memberof expressions.GlobalHistogram\n     * @api\n     * @example <caption>Get joined data for a categorical property sorted by frequency.</caption>\n     * const numberOfWheels = [\n     *  { key: 'car', value: 4 },\n     *  { key: 'truck', value: 8 },\n     *  { key: 'bike', value: 2 }\n     * ];\n     *\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   @histogram: s.globalHistogram(s.prop('vehicles'))\n     * });\n     *\n     * const data = viz.variables.histogram.getJoinedValues(numberOfWheels);\n     * // returns an array with the following format:\n     * // [\n     * //   { frequency: 10, key: 'truck', value: 8 }\n     * //   { frequency: 20, key: 'bike', value: 2 }\n     * //   { frequency: 30, key: 'car', value: 4 }\n     * // ]\n     *\n     * @example <caption>Get joined data for a categorical property sorted by frequency. (String)</caption>\n     * const numberOfWheels = [\n     *  { key: 'car', value: 4 },\n     *  { key: 'truck', value: 8 },\n     *  { key: 'bike', value: 2 }\n     * ];\n     *\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: globalHistogram($vehicles)\n     * `);\n     *\n     * const data = viz.variables.histogram.getJoinedValues(numberOfWheels);\n     * // returns an array with the following format:\n     * // [\n     * //   { frequency: 10, key: 'truck', value: 8 }\n     * //   { frequency: 20, key: 'bike', value: 2 }\n     * //   { frequency: 30, key: 'car', value: 4 }\n     * // ]\n     *\n     * @example <caption>Get color values for the histogram when using a ramp.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: s.globalHistogram(s.prop('vehicles'))\n     *   color: ramp(s.prop('vehicles'), s.palettes.PRISM)\n     * `);\n     *\n     * const legend = viz.color.getLegendData();\n     * const data = viz.variables.histogram.getJoinedValues(legend.data);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'car', value: { r: 56, g: 166, b: 165, a: 1 } }\n     * // ]\n     *\n     * @example <caption>Get color values for the histogram when using a ramp. (String)</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: globalHistogram($vehicles)\n     *   color: ramp($vehicles, Prism)\n     * `);\n     *\n     * const legend = viz.color.getLegendData();\n     * const data = viz.variables.histogram.getJoinedValues(legend.data);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'car', value: { r: 56, g: 166, b: 165, a: 1 } }\n     * // ]\n     * @example <caption>Get color values for the histogram using a ramp with classified data.</caption>\n     * // Note: Both the ramp and the histogram expressions must use the same classification.\n     *\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: s.globalHistogram(s.top(s.prop('vehicles'), 2))\n     *   color: ramp(s.top(s.prop('vehicles'), 2)), s.palettes.PRISM, s.rgba(0, 128, 0, 1))\n     * `);\n     *\n     * const options = { othersLabel: 'Others '};\n     * const legend = viz.color.getLegendData(options);\n     * const data = viz.variables.histogram.getJoinedValues(legend.data, options);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'Others', value: { r: 0, g: 128, b: 0, a: 1 } }\n     * // ]\n     *\n     * @example <caption>Get color values for the histogram using a ramp with classified data (String).</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: globalHistogram(top($vehicles, 2))\n     *   color: ramp((top($vehicles, 2)), Prism, green)\n     * `);\n     *\n     * const options = { othersLabel: 'Others '};\n     * const legend = viz.color.getLegendData(options);\n     * const data = viz.variables.histogram.getJoinedValues(legend.data, options);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'Others', value: { r: 0, g: 128, b: 0, a: 1 } }\n     * // ]\n     *\n     */\n    getJoinedValues (values, options) {\n        checkArray('globalHistogram.getJoinedValues', 'values', 0, values);\n\n        if (!values.length) {\n            return [];\n        }\n\n        const config = Object.assign({}, DEFAULT_OPTIONS, options);\n        const joinedValues = [];\n\n        this.value.forEach((elem) => {\n            elem.x = elem.x === OTHERS_LABEL\n                ? config.othersLabel\n                : elem.x;\n            const val = values.find(value => elem.x === value.key);\n\n            if (val) {\n                const frequency = elem.y;\n                const key = val.key;\n                const value = val.value;\n\n                joinedValues.push({ frequency, key, value });\n            }\n        });\n\n        return joinedValues;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        this._histogram = new Map();\n\n        if (!this.input.isA(Property)) {\n            this._setHistogramForExpression();\n            return;\n        }\n\n        if (this.input.type === 'number') {\n            this._setHistogramForNumericValues();\n            return;\n        }\n\n        this._setHistogramForCategoryValues();\n    }\n\n    _setHistogramForExpression () {\n        const data = this.input.getLegendData(DEFAULT_OPTIONS).data;\n\n        this._categories.forEach(c => {\n            const category = data.find(category => c.name === category.key);\n            if (category) {\n                this._histogram.set(c.name, c.frequency);\n            } else {\n                const frequency = this._histogram.get(OTHERS_LABEL) || 0;\n                this._histogram.set(OTHERS_LABEL, c.frequency + parseInt(frequency));\n            }\n        });\n    }\n\n    _setHistogramForCategoryValues () {\n        this._categories.forEach(category => {\n            this._histogram.set(category.name, category.frequency);\n        });\n    }\n\n    _setHistogramForNumericValues () {\n        const name = this.propertyName;\n        const ratio = this._metadata.featureCount / this._metadata.sample.length;\n\n        this._metadata.sample.forEach((feature) => {\n            const key = feature[name];\n            const value = this._histogram.get(key) || 0;\n\n            this._histogram.set(key, value + ratio);\n        });\n    }\n}\n","import BaseExpression from '../base';\nexport default class Histogram extends BaseExpression {\n    constructor (children) {\n        super(children);\n        this.type = 'histogram';\n        this.inlineMaker = () => null;\n    }\n\n    get value () {\n        switch (this.input.type) {\n            case 'number':\n                return this._hasBuckets\n                    ? this._getBucketsValue(this._histogram, this._sizeOrBuckets)\n                    : this._getNumericValue(this._histogram, this._sizeOrBuckets);\n            case 'date':\n                return this._hasBuckets\n                    ? this._getBucketsValue(this._histogram, this._sizeOrBuckets)\n                    : this._getDateValue(this._histogram, this._sizeOrBuckets);\n            default:\n                return this._getCategoryValue(this._histogram);\n        }\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this._metadata = metadata;\n        const name = this.propertyName;\n        this._categories = this._metadata.properties[name]\n            ? this._metadata.properties[name].categories.sort(this._sortByFrequency)\n            : [];\n    }\n\n    _getCategoryValue (histogram) {\n        return [...histogram]\n            .map(([x, y]) => {\n                return { x, y };\n            })\n            .sort(this._sortByFrequency)\n            .map((category, index) => {\n                const x = typeof category.x === 'number' && this._categories[index]\n                    ? this._categories[index].name\n                    : category.x;\n                const y = category.y;\n\n                return { x, y };\n            });\n    }\n\n    _getNumericValue (histogram, size) {\n        const array = [...histogram];\n        const arrayLength = array.length;\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        for (let i = 0; i < arrayLength; i++) {\n            const x = array[i][0];\n            min = Math.min(min, x);\n            max = Math.max(max, x);\n        }\n\n        const hist = Array(size).fill(0);\n        const range = max - min;\n        const sizeMinusOne = size - 1;\n\n        for (let i = 0; i < arrayLength; i++) {\n            const x = array[i][0];\n            const y = array[i][1];\n            const index = Math.min(Math.floor(size * (x - min) / range), sizeMinusOne);\n            hist[index] += y;\n        }\n\n        return hist.map((count, index) => {\n            return {\n                x: [min + index / size * range, min + (index + 1) / size * range],\n                y: count\n            };\n        });\n    }\n\n    _getBucketsValue ([...histogram], buckets) {\n        buckets = buckets.length && buckets.length === 0 ? this._genBreakpoints(buckets) : buckets;\n        const nBuckets = buckets.length;\n        const hist = Array(nBuckets).fill(0);\n\n        for (let i = 0, len = histogram.length; i < len; i++) {\n            const x = histogram[i][0];\n            for (let j = 0; j < nBuckets; j++) {\n                const bucket = buckets[j];\n                if (x >= bucket[0] && x < bucket[1]) {\n                    hist[j] += histogram[i][1];\n                    break;\n                }\n            }\n        }\n\n        return hist.map((count, index) => {\n            return {\n                x: buckets[index],\n                y: count\n            };\n        });\n    }\n\n    _getDateValue (histogram, size) {\n        const array = [...histogram].map((value) => {\n            return { x: value[0].getTime(), y: value[1] };\n        });\n        const arrayLength = array.length;\n\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        for (let i = 0; i < arrayLength; i++) {\n            const x = array[i].x;\n            min = Math.min(min, x);\n            max = Math.max(max, x);\n        }\n\n        const hist = Array(size).fill(0);\n        const range = max - min;\n        const sizeMinusOne = size - 1;\n\n        for (let i = 0; i < arrayLength; i++) {\n            const x = array[i].x;\n            const y = array[i].y;\n            const index = Math.min(Math.floor(size * (x - min) / range), sizeMinusOne);\n            hist[index] += y;\n        }\n\n        return hist.map((count, index) => {\n            const x0 = new Date(min + index / size * range);\n            const x1 = new Date(min + (index + 1) / size * range);\n\n            return {\n                x: [x0, x1],\n                y: count\n            };\n        });\n    }\n\n    _genBreakpoints () {\n        const histogram = this._histogram.value;\n\n        if (!histogram) {\n            return;\n        }\n\n        const accumHistogram = this._getAccumHistogramFrom(histogram);\n        const [min, max] = this._getMinMaxFrom(histogram);\n\n        this._updateBreakpointsWith({ accumHistogram, min, max });\n    }\n\n    _getAccumHistogramFrom (histogram) {\n        let prev = 0;\n        const accumHistogram = histogram.map(({ y }) => {\n            prev += y;\n            return prev;\n        });\n        return accumHistogram;\n    }\n\n    _getMinMaxFrom (histogram) {\n        const min = histogram[0].x[0];\n        const max = histogram[histogram.length - 1].x[1];\n\n        return [min, max];\n    }\n\n    _sortByFrequency (a, b) {\n        const frequencyDifference = (b.y - a.y);\n\n        if (frequencyDifference === 0) {\n            const categoryA = a.x;\n            const categoryB = b.x;\n\n            if (!categoryA && !categoryB) { return 0; } // both null or undefined\n            if (!categoryA) { return 1; } // categoryB first\n            if (!categoryB) { return -1; } // categoryA first\n\n            if (typeof categoryA === 'string' && typeof categoryB === 'string') {\n                return categoryA.localeCompare(categoryB);\n            }\n\n            if (categoryA < categoryB) return -1; // categoryA first\n            if (categoryA > categoryB) return 1; // categoryB first\n            return 0;\n        }\n\n        return frequencyDifference;\n    }\n}\n","import Histogram from './Histogram';\nimport { checkMaxArguments, implicitCast } from '../utils';\nimport { checkArray } from '../utils';\nimport { DEFAULT_OPTIONS } from '../constants';\nimport Top from '../top';\nimport { CLUSTER_FEATURE_COUNT } from '../../../../constants/metadata';\n\n/**\n * Generates a histogram based on the data from the features present in the viewport.\n *\n * The histogram can be based on a categorical expression, in which case each category will correspond to a histogram bar.\n *\n * The histogram can be based on a numeric expression, the buckets for the histogram is controllable through the `sizeOrBuckets` parameter.\n * For numeric values of sizeOrBuckets, the minimum and maximum will be computed automatically and bars will be generated at regular intervals between the minimum and maximum.\n * When providing sizeOrBuckets as a list of buckets, the values will get assigned to the first bucket matching the criteria [bucketMin <= value < bucketMax].\n *\n * The viewportHistogram can also be combined with the `top()` expression.\n *\n * Histograms are useful to get insights and create widgets outside the scope of CARTO VL, see the following example for more info.\n *\n * @param {Number} input - expression to base the histogram\n * @param {Number|Array} sizeOrBuckets - Optional (defaults to 20). Number of bars to use if `x` is a numeric expression; or user-defined buckets for numeric expressions.\n * @param {Number} weight - Optional. Weight each occurrence differently based on this weight, defaults to `1`, which will generate a simple, non-weighted count.\n * @return {ViewportHistogram} ViewportHistogram\n *\n * @example <caption>Create and use an histogram.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz(\n *     variables: {\n *       categoryHistogram: s.viewportHistogram(s.prop('type')),\n *       numericHistogram: s.viewportHistogram(s.prop('amount'), 3, 1),\n *       userDefinedHistogram: s.viewportHistogram(s.prop('amount', [[0, 10], [10, 20], [20, 30]], 1),\n *       topCategoryHistogram: s.viewportHistogram(s.top(s.prop('type'), 3))\n *     }\n * );\n * // ...\n * console.log(viz.variables.categoryHistogram.value);\n * // [{x: 'typeA', y: 10}, {x: 'typeB', y: 20}]\n * // There are 10 features of type A and 20 of type B\n *\n * console.log(viz.variables.numericHistogram.value);\n * // [{x: [0,10],  y: 20}, {x: [10,20],  y: 7}, {x: [20, 30], y: 3}]\n * // There are 20 features with an amount between 0 and 10, 7 features with an amount between 10 and 20, and 3 features with an amount between 20 and 30\n *\n *\n * @example <caption>Create and use an histogram. (String)</caption>\n * const viz = new carto.Viz(`\n *    \\@categoryHistogram:    viewportHistogram($type)\n *    \\@numericHistogram:     viewportHistogram($amount, 3, 1)\n *    \\@userDefinedHistogram: viewportHistogram($amount, [[0, 10], [10, 20], [20, 30]], 1)\n *    \\@topCategoryHistogram: viewportHistogram(top($type, 3))\n * `);\n * // ...\n * console.log(viz.variables.categoryHistogram.value);\n * // [{x: 'typeA', y: 10}, {x: 'typeB', y: 20}]\n * // There are 10 features of type A and 20 of type B\n *\n * console.log(viz.variables.numericHistogram.value);\n * // [{x: [0,10],  y: 20}, {x: [10,20],  y: 7}, {x: [20, 30], y: 3}]\n * // There are 20 features with an amount between 0 and 10, 7 features with an amount between 10 and 20, and 3 features with an amount between 20 and 30\n *\n * @memberof carto.expressions\n * @name viewportHistogram\n * @function\n * @api\n */\n\n/**\n * ViewportHistogram Class\n *\n * Generates a histogram based on the features in the viewport.\n * This class is instanced automatically by using the `viewportHistogram` function. It is documented for its methods.\n * Read more about histogram expression at {@link carto.expressions.viewporthistogram}.\n *\n * @name expressions.ViewportHistogram\n * @abstract\n * @hideconstructor\n * @class\n * @api\n */\nexport default class ViewportHistogram extends Histogram {\n    constructor (input, sizeOrBuckets = 20, weight = 1) {\n        checkMaxArguments(arguments, 3, 'viewportHistogram');\n        super({ input: implicitCast(input), weight: implicitCast(weight) });\n\n        this._sizeOrBuckets = sizeOrBuckets;\n        this._isViewport = true;\n        this._hasBuckets = Array.isArray(sizeOrBuckets);\n        this._cached = null;\n    }\n\n    get value () {\n        if (this._cached === null) {\n            if (!this._histogram) {\n                return null;\n            }\n            this._cached = super.value;\n        }\n\n        return this._cached;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    /**\n     * Get an array of joined data by key and sorted by frequency.\n     *\n     * Note: It can be combined with a `ramp.getLegendData()` method. Take a look at the examples to see how it works.\n     *\n     * @param {Array} values - Array of { key, value } pairs\n     * @return {Array} - { frequency, key, value }\n     * @memberof expressions.ViewportHistogram\n     * @api\n     * @example <caption>Get joined data for a categorical property sorted by frequency.</caption>\n     * const numberOfWheels = [\n     *  { key: 'car', value: 4 },\n     *  { key: 'truck', value: 8 },\n     *  { key: 'bike', value: 2 }\n     * ];\n     *\n     * const s = carto.expressions;\n     * const viz = new carto.Viz({\n     *   @histogram: s.viewportHistogram(s.prop('vehicles'))\n     * });\n     *\n     * const data = viz.variables.histogram.getJoinedValues(numberOfWheels);\n     * // returns an array with the following format:\n     * // [\n     * //   { frequency: 10, key: 'truck', value: 8 }\n     * //   { frequency: 20, key: 'bike', value: 2 }\n     * //   { frequency: 30, key: 'car', value: 4 }\n     * // ]\n     *\n     * @example <caption>Get joined data for a categorical property sorted by frequency. (String)</caption>\n     * const numberOfWheels = [\n     *  { key: 'car', value: 4 },\n     *  { key: 'truck', value: 8 },\n     *  { key: 'bike', value: 2 }\n     * ];\n     *\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: viewportHistogram($vehicles)\n     * `);\n     *\n     * const data = viz.variables.histogram.getJoinedValues(numberOfWheels);\n     * // returns an array with the following format:\n     * // [\n     * //   { frequency: 10, key: 'truck', value: 8 }\n     * //   { frequency: 20, key: 'bike', value: 2 }\n     * //   { frequency: 30, key: 'car', value: 4 }\n     * // ]\n     *\n     * @example <caption>Get color values for the histogram when using a ramp.</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: s.viewportHistogram(s.prop('vehicles'))\n     *   color: ramp(s.prop('vehicles'), s.palettes.PRISM)\n     * `);\n     *\n     * const legend = viz.color.getLegendData();\n     * const data = viz.variables.histogram.getJoinedValues(legend.data);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'car', value: { r: 56, g: 166, b: 165, a: 1 } }\n     * // ]\n     *\n     * @example <caption>Get color values for the histogram when using a ramp. (String)</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: viewportHistogram($vehicles)\n     *   color: ramp($vehicles, Prism)\n     * `);\n     *\n     * const legend = viz.color.getLegendData();\n     * const data = viz.variables.histogram.getJoinedValues(legend.data);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'car', value: { r: 56, g: 166, b: 165, a: 1 } }\n     * // ]\n     * @example <caption>Get color values for the histogram using a ramp with classified data.</caption>\n     * // Note: Both the ramp and the histogram expressions must use the same classification.\n     *\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: s.viewportHistogram(s.top(s.prop('vehicles'), 2))\n     *   color: ramp(s.top(s.prop('vehicles'), 2)), s.palettes.PRISM, s.rgba(0, 128, 0, 1))\n     * `);\n     *\n     * const options = { othersLabel: 'Others '};\n     * const legend = viz.color.getLegendData(options);\n     * const data = viz.variables.histogram.getJoinedValues(legend.data, options);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'Others', value: { r: 0, g: 128, b: 0, a: 1 } }\n     * // ]\n     *\n     * @example <caption>Get color values for the histogram using a ramp with classified data (String).</caption>\n     * const s = carto.expressions;\n     * const viz = new carto.Viz(`\n     *   @histogram: viewportHistogram(top($vehicles, 2))\n     *   color: ramp((top($vehicles, 2)), Prism, green)\n     * `);\n     *\n     * const options = { othersLabel: 'Others '};\n     * const legend = viz.color.getLegendData(options);\n     * const data = viz.variables.histogram.getJoinedValues(legend.data, options);\n     * // returns the following array\n     * // [\n     * //   { frequency: 10, key: 'truck', value: { r: 95, g: 70, b: 144, a: 1 } }\n     * //   { frequency: 20, key: 'bike', value: { r: 29, g: 105, b: 150, a: 1 } }\n     * //   { frequency: 30, key: 'Others', value: { r: 0, g: 128, b: 0, a: 1 } }\n     * // ]\n     *\n     */\n    getJoinedValues (values, options) {\n        checkArray('viewportHistogram.getJoinedValues', 'values', 0, values);\n\n        if (!values.length) {\n            return [];\n        }\n\n        const config = Object.assign({}, DEFAULT_OPTIONS, options);\n        const joinedValues = [];\n        const otherValues = [];\n\n        this.value.forEach((elem) => {\n            const val = values.find(value => {\n                if (Array.isArray(value.key)) {\n                    return value.key[0] === elem.x[0] && value.key[1] === elem.x[1];\n                }\n                return elem.x === value.key;\n            });\n\n            if (val) {\n                const frequency = elem.y;\n                const key = val.key;\n                const value = val.value;\n\n                joinedValues.push({ frequency, key, value });\n            } else {\n                otherValues.push(elem.y);\n            }\n        });\n\n        const others = values.find(value => config.othersLabel === value.key);\n\n        if (others) {\n            const frequency = otherValues.reduce((prev, freq) => prev + freq);\n            const key = others.key;\n            const value = others.value;\n\n            joinedValues.push({ frequency, key, value });\n        }\n\n        return joinedValues.sort((a, b) => b.frequency - a.frequency);\n    }\n\n    accumViewportAgg (feature) {\n        const evalFeature = this.input.eval(feature);\n        const property = this.input.isA(Top)\n            ? evalFeature.label\n            : evalFeature;\n\n        if (property !== undefined) {\n            const clusterCount = feature[CLUSTER_FEATURE_COUNT] || 1;\n            const weight = clusterCount * this.weight.eval(feature);\n            const count = this._histogram.get(property) || 0;\n            this._histogram.set(property, count + weight);\n        }\n    }\n\n    _resetViewportAgg (metadata) {\n        if (metadata) {\n            this._bindMetadata(metadata);\n        }\n        this._cached = null;\n        this._histogram = new Map();\n    }\n}\n","import { implicitCast, checkMaxArguments } from './utils';\nimport BaseExpression from './base';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\n\n// TODO type checking\n\nexport class ILinear extends genInterpolator('iLinear', inner => inner, undefined, inner => inner) { }\n\nexport class Cubic extends genInterpolator(\n    'cubic',\n    inner => `cubicEaseInOut(${inner})`,\n    `\n    #ifndef CUBIC\n    #define CUBIC\n    float cubicEaseInOut(float p){\n        if (p < 0.5) {\n            return 4. * p * p * p;\n        }else {\n            float f = ((2. * p) - 2.);\n            return 0.5 * f * f * f + 1.;\n        }\n    }\n    #endif\n`,\n    inner => inner // TODO FIXME\n) { }\n\nexport class BounceEaseIn extends genInterpolator(\n    'bounceEaseIn',\n    inner => `BounceEaseIn(${inner})`,\n    `\n    #ifndef BOUNCE_EASE_IN\n    #define BOUNCE_EASE_IN\n    float BounceEaseIn_BounceEaseOut(float p)\n    {\n        if(p < 4./11.0)\n        {\n            return (121. * p * p)/16.0;\n        }\n        else if(p < 8./11.0)\n        {\n            return (363./40.0 * p * p) - (99./10.0 * p) + 17./5.0;\n        }\n        else if(p < 9./10.0)\n        {\n            return (4356./361.0 * p * p) - (35442./1805.0 * p) + 16061./1805.0;\n        }\n        else\n        {\n            return (54./5.0 * p * p) - (513./25.0 * p) + 268./25.0;\n        }\n    }\n    float BounceEaseIn(float p)\n    {\n        return 1. - BounceEaseOut(1. - p);\n    }\n    #endif\n\n`,\n    inner => inner // TODO FIXME\n) { }\n\n// Interpolators\nfunction genInterpolator (name, inlineMaker, preface, jsEval) {\n    const fn = class Interpolator extends BaseExpression {\n        constructor (m) {\n            checkMaxArguments(arguments, 1, name);\n\n            m = implicitCast(m);\n            super({ m });\n        }\n        eval (feature) {\n            return jsEval(this.m.eval(feature));\n        }\n        _bindMetadata (meta) {\n            super._bindMetadata(meta);\n            if (this.m.type !== 'number') {\n                throw new CartoValidationError(\n                    `Blending cannot be performed by '${this.m.type}'`,\n                    CartoValidationErrorTypes.INCORRECT_TYPE);\n            }\n            this.type = 'number';\n            this._setGenericGLSL(inline => inlineMaker(inline.m), preface);\n        }\n    };\n    fn.type = 'interpolator';\n    return fn;\n}\n","import BaseExpression from './base';\nimport { checkExpression, implicitCast, checkType, checkMaxArguments, clamp } from './utils';\nimport { globalMin, globalMax } from '../expressions';\nimport { castTimeRange, msToDate } from '../../../utils/util';\nimport IdentityCodec from '../../../codecs/Identity';\nimport TimeZoneDate from '../../../utils/time/TimeZoneDate';\nimport { DEFAULT_SAMPLES } from './constants';\n/**\n* Linearly interpolates the value of a given input between a minimum and a maximum. If `min` and `max` are not defined they will\n* default to `globalMin(input)` and `globalMax(input)`.\n*\n* @param {Number|Date} input - The input to be evaluated and interpolated, can be a numeric property or a date property\n* @param {Number|Date} [min=globalMin(input)] - Numeric or date expression pointing to the lower limit\n* @param {Number|Date} [max=globalMax(input)] - Numeric or date expression pointing to the higher limit\n* @param {Number|Date} [max=globalMax(input)] - Numeric or date expression to set a timerange\n* @param {Number} samples - Number of samples, which is 10 by default\n* @return {Number|Date}\n*\n* @example <caption> Color by $speed using the CARTOColor Prism by assigning the first color in Prism to features with speeds of 10 or less, the last color in Prism to features with speeds of 100 or more and a interpolated value for the speeds in between.</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz({\n*   color: s.ramp(s.linear(s.prop('speed'), 10, 100), s.palettes.PRISM)\n* });\n*\n* @example <caption> Color by $speed using the CARTOColor Prism by assigning the first color in Prism to features with speeds of 10 or less, the last color in Prism to features with speeds of 100 or more and a interpolated value for the speeds in between. (String)</caption>\n* const viz = new carto.Viz(`\n*   color: ramp(linear($speed, 10, 100), PRISM)\n* `);\n*\n* @example <caption> Set custom number of samples.</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz({\n*   color: s.ramp(s.linear(s.prop('speed'), 10, 100, null, 10), s.palettes.PRISM)\n* });\n*\n* @example <caption> Set custom number of samples. (String)</caption>\n* const s = carto.expressions;\n* const viz = new carto.Viz(`\n*   color: ramp(linear($speed, 10, 100, null, 10), PRISM)\n* `);\n*\n* @memberof carto.expressions\n* @name linear\n* @function\n* @api\n*/\nexport default class Linear extends BaseExpression {\n    constructor (input, min, max, range, samples = DEFAULT_SAMPLES) {\n        checkMaxArguments(arguments, 5, 'linear');\n\n        input = implicitCast(input);\n\n        if (min && !(min instanceof BaseExpression) && max === undefined && range === undefined) {\n            range = min;\n            min = undefined;\n            max = undefined;\n        }\n\n        if (min === undefined && max === undefined) {\n            min = globalMin(input);\n            max = globalMax(input);\n        }\n\n        min = implicitCast(min);\n        max = implicitCast(max);\n        samples = implicitCast(samples);\n\n        checkExpression('linear', 'input', 0, input);\n        checkExpression('linear', 'min', 1, min);\n        checkExpression('linear', 'max', 2, max);\n        checkExpression('linear', 'samples', 4, samples);\n\n        super({ input, min, max });\n        this.type = 'number';\n        this.samples = samples;\n\n        // range mode is used only for timerange inputs:\n        // * 'start' of property between full range (from start of min to end of max)\n        // * 'end' of property between full range (from start of min to end of max)\n        // * 'unit' (default) range mapped to 0:1\n        this._rangeMode = range || 'unit';\n    }\n\n    // Given a linear value 0:1, convert it back to the input value\n    // for TimeRange and Date inputs the result is an interpolated Date\n    converse (value) {\n        if (this.input.type === 'date') {\n            const min = this.min.value.getTime();\n            const max = this.max.value.getTime();\n            return msToDate(value * (max - min) + min);\n        } else if (this.input.type === 'timerange') {\n            const minRange = castTimeRange(this.min.value);\n            const maxRange = castTimeRange(this.max.value);\n            if (minRange === undefined || maxRange === undefined) {\n                // FIXME: it seems update event of layer can triggered\n                // before metadata has been bounded.\n                return null;\n            }\n            let min, max;\n            switch (this._rangeMode) {\n                case 'unit':\n                    // timeRange here allows min, max to be simply iso strings\n                    min = minRange.startValue;\n                    max = maxRange.startValue;\n                    break;\n                case 'start':\n                case 'end':\n                    min = minRange.startValue;\n                    max = maxRange.endValue;\n                    break;\n            }\n            return TimeZoneDate.fromValue(value * (max - min) + min, minRange.timeZone);\n        }\n        const min = this.min.value;\n        const max = this.max.value;\n        return value * (max - min) + min;\n    }\n\n    // return min, max, but for time ranges they are returned as Dates\n    limits () {\n        let min, max;\n        if (this.input.type === 'timerange') {\n            switch (this._rangeMode) {\n                case 'unit':\n                    min = castTimeRange(this.min.value).startValue;\n                    max = castTimeRange(this.max.value).startValue;\n                    break;\n                case 'start':\n                case 'end':\n                    min = castTimeRange(this.min.value).startValue;\n                    max = castTimeRange(this.max.value).endValue;\n                    break;\n            }\n        } else {\n            min = this.min.value;\n            max = this.max.value;\n        }\n        return [min, max];\n    }\n\n    get value () {\n        return {\n            min: this.min,\n            max: this.max,\n            input: this.input.value,\n            range: this._rangeMode,\n            samples: this.samples\n        };\n    }\n\n    eval (feature) {\n        if (this.input.type === 'timerange') {\n            let inputIndex;\n            switch (this._rangeMode) {\n                case 'unit':\n                    inputIndex = 0; // start\n                    break;\n                case 'start':\n                    inputIndex = 0; // start\n                    break;\n                case 'end':\n                    inputIndex = 1; // end\n                    break;\n            }\n            const input = feature._dataframe.properties[this._metadata.decodedProperties(this.input.propertyName)[inputIndex]][feature._index];\n\n            return (input - this._internalMin) / (this._internalMax - this._internalMin);\n        }\n\n        const input = this.input.eval(feature);\n        const metadata = this._metadata;\n        const codec = (metadata && this.input.propertyName)\n            ? metadata.codec(this.input.propertyName)\n            : new IdentityCodec();\n        const min = codec.externalToInternal(metadata, this.min.eval(feature));\n        const max = codec.externalToInternal(metadata, this.max.eval(feature));\n        const value = codec.externalToInternal(metadata, input);\n        return (value - min) / (max - min);\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        this._metadata = metadata;\n\n        if (this.input.type === 'timerange') {\n            let inputIndex, min, max;\n            switch (this._rangeMode) {\n                case 'unit':\n                    // choose same side for all three:\n                    inputIndex = 0; // start\n                    min = metadata.codec(this.input.propertyName).externalToInternal(metadata, this.min.value)[inputIndex];\n                    max = metadata.codec(this.input.propertyName).externalToInternal(metadata, this.max.value)[inputIndex];\n                    // min in ms is castTimeRange(this.min.value).startValue;\n                    // max in ms is castTimeRange(this.max.value).startValue;\n                    break;\n                case 'start':\n                    inputIndex = 0; // start\n                    min = metadata.codec(this.input.propertyName).externalToInternal(metadata, this.min.value)[0]; // start\n                    max = metadata.codec(this.input.propertyName).externalToInternal(metadata, this.max.value)[1]; // end\n                    // min in ms is castTimeRange(this.min.value).startValue;\n                    // max in ms is castTimeRange(this.max.value).endValue;\n                    break;\n                case 'end':\n                    inputIndex = 1; // end\n                    min = metadata.codec(this.input.propertyName).externalToInternal(metadata, this.min.value)[0]; // start\n                    max = metadata.codec(this.input.propertyName).externalToInternal(metadata, this.max.value)[1]; // end\n                    // min in ms is castTimeRange(this.min.value).startValue;\n                    // max in ms is castTimeRange(this.max.value).endValue;\n                    break;\n            }\n\n            this._internalMin = min;\n            this._internalMax = max;\n\n            this.inlineMaker = (inline) => `((${inline.input[inputIndex]}-(${min.toFixed(20)}))/(${(max - min).toFixed(20)}))`;\n        } else {\n            checkType('linear', 'input', 0, ['number', 'date'], this.input);\n            checkType('linear', 'min', 1, ['number', 'date'], this.min);\n            checkType('linear', 'max', 2, ['number', 'date'], this.max);\n            checkType('linear', 'samples', 4, ['number'], this.samples);\n            // Should actually check:\n            // checkType('linear', 'min', 1, this.input.type, this.min);\n            // checkType('linear', 'max', 2, this.input.type, this.max);\n            // but global aggregations are currently of type number even for dates\n\n            const codec = this.input.propertyName && metadata.codec(this.input.propertyName);\n            if (!codec || codec.isIdentity()) {\n                // this permits using properties for the min/man expressions\n                this.inlineMaker = (inline) => `((${inline.input}-${inline.min})/(${inline.max}-${inline.min}))`;\n            } else {\n                const smin = codec.externalToInternal(metadata, this.min.value);\n                const smax = codec.externalToInternal(metadata, this.max.value);\n                this.inlineMaker = (inline) => `((${inline.input}-(${smin.toFixed(20)}))/(${(smax - smin).toFixed(20)}))`;\n            }\n        }\n    }\n\n    getLegendData (options) {\n        const min = this.min.value;\n        const max = this.max.value;\n        const name = this.toString();\n\n        if (min === max) {\n            return { min, max, name, data: [] };\n        }\n\n        const samples = options && options.samples\n            ? options.samples\n            : this.samples;\n\n        const INC = 1 / (samples - 1);\n        const data = [];\n\n        for (let i = 0; data.length < samples; i += INC) {\n            const value = clamp(i, 0, 1);\n            const key = i * (max - min) + min;\n\n            data.push({ key, value });\n        }\n\n        return { data, min, max, name };\n    }\n}\n","import BaseExpression from './base';\nimport { number } from '../expressions';\nimport { checkMaxArguments } from './utils';\n\n/**\n * Get the current timestamp. This is an advanced form of animation, `animation` expression is preferred.\n *\n * @return {Number}\n *\n * @example <caption>Update width during the time.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.mod(s.now(), 10)\n * });\n *\n * @example <caption>Update width during the time. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: now() % 10\n * `);\n *\n * @memberof carto.expressions\n * @name now\n * @function\n * @api\n */\nexport default class Now extends BaseExpression {\n    constructor () {\n        checkMaxArguments(arguments, 0, 'now');\n\n        super({ now: number(0) });\n        this.type = 'number';\n        super.inlineMaker = inline => inline.now;\n    }\n\n    get value () {\n        return this.now.value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    isAnimated () {\n        return true;\n    }\n\n    isPlaying () {\n        return true;\n    }\n\n    _setTimestamp (timestamp) {\n        this.now.value = timestamp;\n    }\n}\n","import BaseExpression from './base';\nimport { checkInstance, checkMaxArguments, implicitCast, checkExpression } from './utils';\n\n/**\n * Order ascending input a provided expression. NOTE: only works with `width()`.\n *\n * Note: ordering expressions won't assure a perfect ordering.\n * Features will be distributed in different buckets with the original order, and those buckets will be ordered.\n * This guarantees a maximum error, but not a perfect order.\n * For most operations this is imperceptible, but usage of `order` in combination with animation or multi-scale expressions (`zoomrange` and `scaled`)\n * may result in artifacts.\n *\n * @param {carto.expressions.Width} input - must be `width()`\n * @return {Order}\n *\n * @example <caption>Ascending order based on width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   order: s.asc(s.width())\n * });\n *\n * @example <caption>Ascending order based on width. (String)</caption>\n * const viz = new carto.Viz(`\n *   order: asc(width())\n * `);\n *\n * @memberof carto.expressions\n * @name asc\n * @function\n * @api\n */\nexport class Asc extends BaseExpression {\n    constructor (input) {\n        checkMaxArguments(arguments, 1, 'asc');\n        input = implicitCast(input);\n        checkExpression('asc', 'input', 0, input);\n        super({ input });\n        this.type = 'orderer';\n    }\n\n    get value () {\n        return 'asc';\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkInstance('asc', 'input', 0, Width, this.input);\n    }\n}\n\n/**\n * Order descending input a provided expression. NOTE: only works with `width()`.\n *\n * Note: ordering expressions won't assure a perfect ordering.\n * Features will be distributed in different buckets with the original order, and those buckets will be ordered.\n * This guarantees a maximum error, but not a perfect order.\n * For most operations this is imperceptible, but usage of `order` in combination with animation or multi-scale expressions (`zoomrange` and `scaled`)\n * may result in artifacts.\n *\n * @param {carto.expressions.Width} input - must be `width()`\n * @return {Order}\n *\n * @example <caption>Descending order based on width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   order: s.desc(s.width())\n * });\n *\n * @example <caption>Descending order based on width. (String)</caption>\n * const viz = new carto.Viz(`\n *   order: desc(width())\n * `);\n *\n * @memberof carto.expressions\n * @name desc\n * @function\n * @api\n */\nexport class Desc extends BaseExpression {\n    constructor (input) {\n        checkMaxArguments(arguments, 1, 'desc');\n        input = implicitCast(input);\n        checkExpression('desc', 'input', 0, input);\n        super({ input });\n        this.type = 'orderer';\n    }\n\n    get value () {\n        return 'desc';\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n        checkInstance('desc', 'input', 0, Width, this.input);\n    }\n}\n\n/**\n * No order expression.\n *\n * @return {Order}\n *\n * @example <caption>No order.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   order: s.noOrder()\n * });\n *\n * @example <caption>No order. (String)</caption>\n * const viz = new carto.Viz(`\n *   order: noOrder()\n * `);\n *\n * @memberof carto.expressions\n * @name noOrder\n * @function\n * @api\n */\nexport class NoOrder extends BaseExpression {\n    constructor () {\n        checkMaxArguments(arguments, 0, 'noOrder');\n\n        super({});\n        this.type = 'orderer';\n    }\n\n    get value () {\n        return 'noOrder';\n    }\n\n    eval () {\n        return this.value;\n    }\n}\n\n/**\n * Return the expression assigned in the `width` property. ONLY usable in an `order:` property.\n *\n * Note: ordering expressions won't assure a perfect ordering.\n * Features will be distributed in different buckets with the original order, and those buckets will be ordered.\n * This guarantees a maximum error, but not a perfect order.\n * For most operations this is imperceptible, but usage of `order` in combination with animation or multi-scale expressions (`zoomrange` and `scaled`)\n * may result in artifacts.\n *\n * @return {carto.expressions.Width}\n *\n * @example <caption>Ascending order based on width.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   order: s.asc(s.width())\n * });\n *\n * @example <caption>Ascending order based on width. (String)</caption>\n * const viz = new carto.Viz(`\n *   order: asc(width())\n * `);\n *\n * @memberof carto.expressions\n * @name width\n * @function\n * @api\n */\nexport class Width extends BaseExpression {\n    constructor () {\n        checkMaxArguments(arguments, 1, 'width');\n\n        super({});\n        this.type = 'propertyReference';\n    }\n}\n","import { checkMaxArguments, implicitCast, checkExpression } from '../utils';\nimport ReversePalette from './ReversePalette';\nimport ReverseList from './ReverseList';\nimport Base from '../base';\n\n/**\n * Reverse the provided item.\n *\n * @param {Palette|List} input - item to be reversed\n * @return {Palette|List}\n *\n * @example <caption>Invert a Palette.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.prop('type'), s.reverse(s.palettes.PRISM));\n * });\n *\n * @example <caption>Invert a Palette (String).</caption>\n * const viz = new carto.Viz(`\n *   color: ramp($type, reverse(PRISM))\n * `);\n *\n * @example <caption>Invert a List.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.prop('count'), s.reverse([s.namedColor('red'), s.namedColor('blue')]));\n * });\n *\n * @example <caption>Invert a List (String).</caption>\n * const viz = new carto.Viz(`\n *   color: ramp($count, reverse([red, blue]))\n * `);\n *\n * @memberof carto.expressions\n * @name reverse\n * @function\n * @api\n */\nexport default class Reverse extends Base {\n    constructor (input) {\n        checkMaxArguments(arguments, 1, 'reverse');\n        input = implicitCast(input);\n        checkExpression('reverse', 'input', 0, input);\n        super({ input });\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        if (this.input.type === 'palette') {\n            Object.setPrototypeOf(this, ReversePalette.prototype);\n        } else {\n            Object.setPrototypeOf(this, ReverseList.prototype);\n        }\n\n        return this._bindMetadata(metadata);\n    }\n}\n","import Base from '../base';\nimport { checkType } from '../utils';\n\nexport default class ReverseList extends Base {\n    _bindMetadata (metadata) {\n        checkType('reverse', 'array', 0, ['number-list', 'category-list', 'color-list', 'date-list', 'image-list'], this.input);\n\n        this.type = this.input.type;\n        this.childType = this.input.childType;\n    }\n\n    get elems () {\n        return [...this.input.elems].reverse();\n    }\n\n    get value () {\n        return this.elems.map(c => c.value);\n    }\n\n    eval (feature) {\n        return this.elems.map(c => c.eval(feature));\n    }\n}\n","import Palette from '../color/palettes/Palette';\n\nexport default class ReversePalette extends Palette {\n    _bindMetadata (metadata) {\n        this.type = 'palette';\n        this.childType = 'color';\n        this.subPalettes = new Proxy(this.input.subPalettes, {\n            get: (target, name) => {\n                if (Number.isFinite(Number(name)) && Array.isArray(target[name])) {\n                    return this._reversePalette(target[name]);\n                }\n                return target[name];\n            }\n        });\n        this.tags = this.input.tags;\n    }\n\n    getLongestSubPalette () {\n        return this._reversePalette(this.input.getLongestSubPalette());\n    }\n\n    _reversePalette (palette) {\n        if (this.isQualitative()) {\n            // Last color is 'others', therefore, we shouldn't change the order of that one\n            const copy = [...palette];\n            const others = copy.pop();\n            return [...copy.reverse(), others];\n        }\n        return [...palette].reverse();\n    }\n}\n","\n/**\n * Calculate Average\n *\n * @param {Number[]} values\n * @returns {Number} - average\n */\nexport const average = (values) => {\n    let sum = 0;\n    for (let i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum / values.length;\n};\n/**\n * Calculate Variance\n *\n * @param {Number[]} values\n * @param {Number} average\n * @returns {Number[]} - calculate variance for each element in values\n */\nexport const variance = (values, average) => {\n    let variances = [];\n    for (let i = 0; i < values.length; i++) {\n        const diff = values[i] - average;\n        variances.push(diff * diff);\n    }\n    return variances;\n};\n\n/**\n * Calculate Standard Deviation (STD), using population deviation formula\n *\n * @param {Number[]} values\n * @returns {Number} - standard deviation\n */\nexport const standardDeviation = (values) => {\n    const avg = average(values);\n    const avgVariance = average(variance(values, avg));\n    return Math.sqrt(avgVariance);\n};\n","import BaseExpression from './base';\nimport * as util from '../../../utils/util';\nimport { checkMaxArguments, throwInvalidType } from './utils';\n\n/**\n * Time constant expression\n *\n * @param {Date|string|number} date - The date from a JavaScript Date() object or a date encoded as a string or the number of milliseconds since Epoch.\n * @return {Date}\n *\n * @example <caption>Filter by a date between dates.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.between(s.prop('date'), s.time('2022-03-09T00:00:00Z'), s.time('2033-08-12T00:00:00Z')\n * });\n *\n * @example <caption>Filter by a date between dates. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: time('2022-03-09T00:00:00Z') < $date < time('2033-08-12T00:00:00Z')\n * `);\n *\n * @memberof carto.expressions\n * @name time\n * @function\n * @api\n */\nexport default class Time extends BaseExpression {\n    constructor (date) {\n        checkMaxArguments(arguments, 1, 'time');\n\n        super({});\n        this.type = 'date';\n\n        try {\n            this.date = util.castDate(date);\n        } catch (error) {\n            throwInvalidType('time', 'date', 0, 'Date or string or number', 'other type');\n        }\n\n        this.inlineMaker = () => undefined;\n    }\n\n    get value () {\n        return this.date;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    isAnimated () {\n        return false;\n    }\n\n    isPlaying () {\n        return false;\n    }\n}\n","import BaseExpression from './base';\nimport * as util from '../../../utils/util';\n\n/**\n * Define a time range: an interval between two time points.\n *\n * ISO-formatted strings (based on ISO 8601) are used to define ranges.\n * Since `timeRange` doesn't support arbitrary intervals, but only\n * intervals based on single units of time (e.g. a month, an hour),\n * we don't use the general ISO interval format, but simply an\n * abbreviated form of the date point format, so that '2018-03' represents\n * the month of March, 2018 (i.e. the interval 2018-03-01T00:00:00/2018-04-01T00:00:00).\n *\n * @param {String} value - abbreviated ISO-formatted interval\n * @return {TimeRange} It retuns a TimeRange object.\n *\n * @memberof carto.expressions\n * @name timeRange\n * @function\n * @api\n */\nexport default class TimeRangeExpr extends BaseExpression {\n    constructor (value) {\n        // timeRange('2017-01') timeRange('2017-Q1')\n\n        super({});\n        this.type = 'timerange';\n        this.range = util.castTimeRange(value);\n        this.inlineMaker = () => undefined; // TODO...\n    }\n\n    get value () {\n        return {\n            iso: this.range.iso.value,\n            timeZone: this.range.timeZone.value,\n            startValue: this.range.startValue.value,\n            endValue: this.range.endValue.value,\n            startDate: this.range.startDate.value,\n            endDate: this.range.endDate.value\n        };\n    }\n\n    eval (feature) {\n        return {\n            iso: this.range.iso.eval(feature),\n            timeZone: this.range.timeZone.eval(feature),\n            startValue: this.range.startValue.eval(feature),\n            endValue: this.range.endValue.eval(feature),\n            startDate: this.range.startDate.eval(feature),\n            endDate: this.range.endDate.eval(feature)\n        };\n    }\n\n    isAnimated () {\n        return false;\n    }\n\n    isPlaying () {\n        return false;\n    }\n}\n","import BaseExpression from './base';\nimport { checkType, implicitCast, checkFeatureIndependent, checkInstance, checkMaxArguments } from './utils';\nimport Property from './basic/property';\nimport { number } from '../expressions';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\nimport { OTHERS_INDEX, OTHERS_GLSL_VALUE, OTHERS_LABEL } from './constants';\n\n// Careful! This constant must match with the shader code of the Top expression\nconst MAX_TOP_BUCKETS = 16;\n\n/**\n * Get the top `n` properties, aggregating the rest into an \"others\" bucket category. The \"others\" label is by default CARTO_VL_OTHERS.\n * This can be overwriten by setting the \"others\" label as the third parameter.\n *\n * @param {Category} property - Column of the table\n * @param {number} n - Number of top properties to be returned, the maximum value is 16, values higher than that will result in an error\n * @param {string} othersLabel - Custom label for \"others\"\n * @return {Category}\n *\n * @example <caption>Use top 3 categories to define a color ramp.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.top(s.prop('category'), 3), s.palettes.VIVID)\n * });\n *\n * @example <caption>Use top 3 categories to define a color ramp. (String)</caption>\n * const viz = new carto.Viz(`\n *   color: ramp(top($category, 3), VIVID)\n * `);\n *\n * @example <caption>Set custom \"others\" label.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   color: s.ramp(s.top(s.prop('category'), 3, 'Others'), s.palettes.VIVID)\n * });\n *\n * @example <caption>Set custom \"others\" label. (String)</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz(`\n *   color: ramp(top($category, 3, 'Others'), VIVID)\n * `);\n *\n * @memberof carto.expressions\n * @name top\n * @function\n * @api\n */\nexport default class Top extends BaseExpression {\n    constructor (property, buckets, othersLabel = OTHERS_LABEL) {\n        checkMaxArguments(arguments, 3, 'top');\n\n        buckets = implicitCast(buckets);\n        othersLabel = implicitCast(othersLabel);\n\n        const children = { property, buckets, othersLabel };\n\n        for (let i = 0; i < MAX_TOP_BUCKETS; i++) {\n            children[`_top${i}`] = number(0);\n        }\n        super(children);\n        this.numBuckets = 0;\n        this.type = 'category';\n    }\n\n    get value () {\n        return this.eval();\n    }\n\n    eval (feature) {\n        const metaColumn = this._metadata.properties[this.property.propertyName];\n        const orderedCategoryNames = [...metaColumn.categories].sort((a, b) =>\n            b.frequency - a.frequency\n        );\n        const categoryName = this.property.eval(feature);\n        const index = orderedCategoryNames.findIndex(category => category.name === categoryName);\n        const divisor = this.numCategoriesWithoutOthers - 1 || 1;\n\n        return index >= this.numBuckets || index === -1\n            ? { label: OTHERS_LABEL, index: OTHERS_INDEX }\n            : { label: categoryName, index: index / divisor };\n    }\n\n    _bindMetadata (metadata) {\n        super._bindMetadata(metadata);\n\n        checkInstance('top', 'property', 0, Property, this.property);\n        checkType('top', 'property', 0, 'category', this.property);\n        checkFeatureIndependent('top', 'buckets', 1, this.buckets);\n        checkType('top', 'buckets', 1, 'number', this.buckets);\n        checkType('top', 'othersLabel', 2, 'category', this.othersLabel);\n        checkFeatureIndependent('top', 'othersLabel', 2, this.othersLabel);\n\n        this._metadata = metadata;\n        this._textureBuckets = null;\n        this.numBuckets = this.getNumBuckets(this.buckets);\n    }\n\n    get numCategories () {\n        return this.numBuckets + 1;\n    }\n\n    get numCategoriesWithoutOthers () {\n        return this.numCategories - 1;\n    }\n\n    getNumBuckets (buckets) {\n        let numBuckets = Math.round(buckets);\n\n        if (numBuckets > this.property.numCategories) {\n            numBuckets = this.property.numCategories;\n        }\n\n        if (numBuckets > MAX_TOP_BUCKETS) {\n            const prev = buckets;\n\n            throw new CartoValidationError(\n                `top() function has a limit of ${MAX_TOP_BUCKETS} buckets but '${prev}' buckets were specified.`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n\n        return numBuckets;\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const childSources = {};\n        this.childrenNames.forEach(name => { childSources[name] = this[name]._applyToShaderSource(getGLSLforProperty); });\n        return {\n            preface: this._prefaceCode(Object.values(childSources).map(s => s.preface).join('') + `\n            uniform float numCategoriesWithoutOthers${this._uid};\n\n            float top${this._uid}(float id){\n                float r;\n                if (${childSources._top0.inline} == id){\n                    r = 0.;\n                } else if (${childSources._top1.inline} == id){\n                    r = 1.;\n                } else if (${childSources._top2.inline} == id){\n                    r = 2.;\n                } else if (${childSources._top3.inline} == id){\n                    r = 3.;\n                } else if (${childSources._top4.inline} == id){\n                    r = 4.;\n                } else if (${childSources._top5.inline} == id){\n                    r = 5.;\n                } else if (${childSources._top6.inline} == id){\n                    r = 6.;\n                } else if (${childSources._top7.inline} == id){\n                    r = 7.;\n                } else if (${childSources._top8.inline} == id){\n                    r = 8.;\n                } else if (${childSources._top9.inline} == id){\n                    r = 9.;\n                } else if (${childSources._top10.inline} == id){\n                    r = 10.;\n                } else if (${childSources._top11.inline} == id){\n                    r = 11.;\n                } else if (${childSources._top12.inline} == id){\n                    r = 12.;\n                } else if (${childSources._top13.inline} == id){\n                    r = 13.;\n                } else if (${childSources._top14.inline} == id){\n                    r = 14.;\n                } else if (${childSources._top15.inline} == id){\n                    r = 15.;\n                }else{\n                    return ${OTHERS_GLSL_VALUE};\n                }\n                return r/(numCategoriesWithoutOthers${this._uid}-1.);\n            }`),\n            inline: `top${this._uid}(${childSources.property.inline})`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._numCategoriesLoc = gl.getUniformLocation(program, `numCategoriesWithoutOthers${this._uid}`);\n        super._postShaderCompile(program, gl);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        const buckets = this.numBuckets;\n        const metaColumn = this._metadata.properties[this.property.propertyName];\n\n        const orderedCategoryNames = [...metaColumn.categories].sort((a, b) =>\n            b.frequency - a.frequency\n        );\n\n        for (let i = 0; i < MAX_TOP_BUCKETS; i++) {\n            this[`_top${i}`].value = Number.POSITIVE_INFINITY;\n        }\n\n        orderedCategoryNames.forEach((cat, i) => {\n            if (i < buckets) {\n                this[`_top${i}`].value = this._metadata.categoryToID.get(cat.name);\n            }\n        });\n\n        gl.uniform1f(this._numCategoriesLoc, this.numCategoriesWithoutOthers);\n        super._preDraw(program, drawMetadata, gl);\n    }\n\n    getLegendData (options) {\n        const metaColumn = this._metadata.properties[this.property.propertyName];\n        const orderedCategoryNames = [...metaColumn.categories].sort((a, b) =>\n            b.frequency - a.frequency\n        );\n        const numBuckets = this.numBuckets;\n        const data = [];\n        const name = this.toString();\n        const divisor = this.numCategoriesWithoutOthers - 1 || 1;\n\n        orderedCategoryNames.forEach((category, i) => {\n            if (i < numBuckets) {\n                const key = category.name;\n                const value = i / divisor;\n                data.push({ key, value });\n            }\n        });\n\n        if (orderedCategoryNames.length > this.buckets) {\n            const othersLabel = options && options.othersLabel\n                ? options.othersLabel\n                : this.othersLabel.value;\n\n            data.push({\n                key: othersLabel,\n                value: OTHERS_INDEX\n            });\n        }\n\n        return { name, data };\n    }\n}\n","import BaseExpression from '../base';\nimport { checkType, implicitCast, checkMaxArguments } from '../utils';\n\n/**\n * Rotate. Define a rotation in degrees.\n *\n * Limitation: only supported in combination with `symbol:`.\n *\n * @param {Number} angle - angle to rotate in degrees in clockwise direction\n * @return {Transform}\n *\n * @example <caption>Rotate 30 degrees in clockwise direction.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   symbol: s.CROSS\n *   transform: s.rotate(30)\n * });\n *\n * @example <caption>Rotate 30 degrees in clockwise direction. (String)</caption>\n * const viz = new carto.Viz(`\n *   symbol: cross\n *   transform: rotate(30)\n * `);\n *\n * @example <caption>Rotate 30 degrees in counter-clockwise direction.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   symbol: s.CROSS\n *   transform: s.rotate(-30)\n * });\n *\n * @example <caption>Rotate 30 degrees in counter-clockwise direction. (String)</caption>\n * const viz = new carto.Viz(`\n *   symbol: cross\n *   transform: rotate(-30)\n * `);\n *\n * @memberof carto.expressions\n * @name rotate\n * @function\n * @api\n */\n\nexport default class Rotate extends BaseExpression {\n    constructor (input) {\n        checkMaxArguments(arguments, 1, 'rotate');\n\n        const angle = implicitCast(input);\n        super({ angle });\n        this.type = 'transformation';\n    }\n\n    get value () {\n        return this.angle.value;\n    }\n\n    eval (feature) {\n        return this.angle.eval(feature);\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        checkType('rotate', 'angle', 0, 'number', this.angle);\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const angle = this.angle._applyToShaderSource(getGLSLforProperty);\n        return {\n            preface: this._prefaceCode(`\n                ${angle.preface}\n\n                #ifndef DEGREES_TO_RADIANS\n                #define DEGREES_TO_RADIANS\n                float degreesToRadians(float degrees){\n                    return degrees/360.*2.*3.14159265359;\n                }\n                #endif\n                \n                vec2 rotate${this._uid}(vec2 p){\n                    float angle = degreesToRadians(${angle.inline});\n                    mat2 M = mat2(cos(angle), -sin(angle),\n                                  sin(angle),  cos(angle));\n                    return M * p;\n                }`),\n\n            inline: `rotate${this._uid}`\n        };\n    }\n}\n","import BaseExpression from '../base';\nimport { checkType, implicitCast, checkMaxArguments } from '../utils';\n\n/**\n * Translate. Define a translation:\n *\n * @param {number} x - first numeric expression that indicates the translation in the X direction.\n * @param {number} y - second numeric expression that indicates the translation in the Y direction.\n * @return {Translate} Numeric expression\n *\n * @example <caption>Apply an x, y translation</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   transform: s.translate(10, 20)\n * });\n *\n * @example <caption>Apply an x, y translation. (String)</caption>\n * const viz = new carto.Viz(`\n *   transform: translate(10, 20)\n * `);\n *\n * @memberof carto.expressions\n * @name translate\n * @function\n * @api\n */\n\nexport default class Translate extends BaseExpression {\n    constructor (x, y) {\n        checkMaxArguments(arguments, 2, 'translate');\n\n        x = implicitCast(x);\n        y = implicitCast(y);\n        super({ x, y });\n        this.type = 'transformation';\n    }\n\n    _applyToShaderSource (getGLSLforProperty) {\n        const x = this.x._applyToShaderSource(getGLSLforProperty);\n        const y = this.y._applyToShaderSource(getGLSLforProperty);\n        return {\n            preface: this._prefaceCode(`\n                ${x.preface}\n                ${y.preface}\n\n                vec2 translate${this._uid}(vec2 p){\n                    return p+vec2(${x.inline}, ${y.inline});\n                }`),\n\n            inline: `translate${this._uid}`\n        };\n    }\n\n    get value () {\n        return [this.x.value, this.y.value];\n    }\n\n    eval (feature) {\n        return [this.x.eval(feature), this.y.eval(feature)];\n    }\n\n    _bindMetadata (meta) {\n        super._bindMetadata(meta);\n        checkType('translate', 'x', 0, 'number', this.x);\n        checkType('translate', 'y', 1, 'number', this.y);\n    }\n}\n","import BaseExpression from './base';\nimport { checkNumber, checkMaxArguments, getStringErrorPreface } from './utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\n\n/**\n * Transition returns a number from zero to one based on the elapsed number of milliseconds since the viz was instantiated.\n * The animation is not cyclic. It will stick to one once the elapsed number of milliseconds reach the animation's duration.\n *\n * @param {number} duration - Animation duration in milliseconds\n * @return {Number}\n *\n * @memberof carto.expressions\n * @name transition\n * @function\n * @api\n */\n// TODO refactor to use uniformfloat class\nexport default class Transition extends BaseExpression {\n    constructor (duration) {\n        checkMaxArguments(arguments, 1, 'transition');\n        checkNumber('transition', 'duration', 0, duration);\n        if (duration < 0) {\n            const preface = getStringErrorPreface('transition', 'duration', 0);\n            throw new CartoValidationError(\n                `${preface} 'duration' must be greater than or equal to 0.`,\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n        }\n        super({});\n        this.aTime = Date.now();\n        this.bTime = this.aTime + Number(duration);\n        this.type = 'number';\n    }\n\n    get value () {\n        const time = Date.now();\n        this.mix = (time - this.aTime) / (this.bTime - this.aTime);\n        return Math.min(this.mix, 1.0);\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    isAnimated () {\n        return !this.mix || this.mix <= 1.0;\n    }\n\n    isPlaying () {\n        return this.isAnimated();\n    }\n\n    _applyToShaderSource () {\n        return {\n            preface: this._prefaceCode(`uniform float anim${this._uid};\\n`),\n            inline: `anim${this._uid}`\n        };\n    }\n\n    _postShaderCompile (program, gl) {\n        this._getBinding(program).uniformLocation = gl.getUniformLocation(program, `anim${this._uid}`);\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        const time = Date.now();\n        this.mix = (time - this.aTime) / (this.bTime - this.aTime);\n        if (this.mix > 1.0) {\n            gl.uniform1f(this._getBinding(program).uniformLocation, 1);\n        } else {\n            gl.uniform1f(this._getBinding(program).uniformLocation, this.mix);\n        }\n    }\n}\n","import { implicitCast, checkType, checkMaxArguments } from './utils';\nimport BaseExpression from './base';\nimport { FP32_DESIGNATED_NULL_VALUE } from './constants';\n\n/**\n * Compute the natural logarithm (base e) of a number x.\n *\n * @param {Number} x - Numeric expression to compute the natural logarithm\n * @return {Number}\n *\n * @example <caption>Natural Logarithm.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.log(10)  // 2.302585092994046\n * });\n *\n * @example <caption>Natural Logarithm. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: log(10)\n * `);\n *\n * @memberof carto.expressions\n * @name log\n * @function\n * @api\n */\nexport const Log = genUnaryOp('log', x => Math.log(x), x => `log(${x})`);\n\n/**\n * Compute the square root of a number x.\n *\n * @param {Number} x - Numeric expression to compute the square root\n * @return {Number}\n *\n * @example <caption>Square root.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.sqrt(4)  // 2\n * });\n *\n * @example <caption>Square root. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: sqrt(4)\n * `);\n *\n * @memberof carto.expressions\n * @name sqrt\n * @function\n * @api\n */\nexport const Sqrt = genUnaryOp('sqrt', x => Math.sqrt(x), x => `sqrt(${x})`);\n\n/**\n * Compute the sine of a number x.\n *\n * @param {Number} x - Numeric expression to compute the sine in radians\n * @return {Number}\n *\n * @example <caption>Sin.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.sin(Math.PI/2)  // 1\n * });\n *\n * @example <caption>Sin. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: sin(PI/2)\n * `);\n *\n * @memberof carto.expressions\n * @name sin\n * @function\n * @api\n */\nexport const Sin = genUnaryOp('sin', x => Math.sin(x), x => `sin(${x})`);\n\n/**\n * Compute the cosine of a number x.\n *\n * @param {Number} x - Numeric expression to compute the cosine in radians\n * @return {Number}\n *\n * @example <caption>Cos.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.cos(0)  // 1\n * });\n *\n * @example <caption>Cos. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: cos(0)\n * `);\n *\n * @memberof carto.expressions\n * @name cos\n * @function\n * @api\n */\nexport const Cos = genUnaryOp('cos', x => Math.cos(x), x => `cos(${x})`);\n\n/**\n * Compute the tangent of a number x.\n *\n * @param {Number} x - Numeric expression to compute the tangent in radians\n * @return {Number}\n *\n * @example <caption>Tan.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.tan(0)  // 0\n * });\n *\n * @example <caption>Tan. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: tan(0)\n * `);\n *\n * @memberof carto.expressions\n * @name tan\n * @function\n * @api\n */\nexport const Tan = genUnaryOp('tan', x => Math.tan(x), x => `tan(${x})`);\n\n/**\n * Compute the sign of a number x, indicating whether the number is positive, negative or zero\n * This means this function will return 1 if the number is positive, -1 if the number is negative\n * 0 if the number is 0 and -0 if the number is -0.\n *\n * @param {Number} x - Numeric expression to compute the sign\n * @return {Number}\n *\n * @example <caption>Sign.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.sign(100)  // 1\n * });\n *\n * @example <caption>Sign. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: sign(100)\n * `);\n *\n * @memberof carto.expressions\n * @name sign\n * @function\n * @api\n */\nexport const Sign = genUnaryOp('sign', x => Math.sign(x), x => `sign(${x})`);\n\n/**\n * Compute the absolute value of a number x.\n *\n * @param {Number} x - Numeric expression to compute the absolute value\n * @return {Number}\n *\n * @example <caption>Abs.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.abs(-100)  // 100\n * });\n *\n * @example <caption>Abs. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: abs(-100) // 100\n * `);\n *\n * @memberof carto.expressions\n * @name abs\n * @function\n * @api\n */\nexport const Abs = genUnaryOp('abs', x => Math.abs(x), x => `abs(${x})`);\n\n/**\n * Check if a numerical or categorical property is missing (NULL value).\n *\n * This returns a numeric expression where 0 means `false` and 1 means `true`.\n *\n * @example <caption>Filter NULL values of the `numeric` property.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.not(s.isNull(s.prop('numeric')))\n * });\n *\n * @example <caption>Filter NULL values of the `numeric` property. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: not(isNull($numeric))\n * `);\n *\n * @param {Number} x - Numeric expression to check\n * @return {Number}\n *\n * @memberof carto.expressions\n * @name isNull\n * @function\n * @api\n */\nexport const IsNull = genUnaryOp('isNull',\n    x => x === null ? 1 : 0,\n    x => `((${x} == ${FP32_DESIGNATED_NULL_VALUE.toFixed(20)}) ? 1. : 0.)`,\n    ['number', 'category']// TODO force property\n);\n\n/**\n * Compute the logical negation of the given expression.\n * This is internally computed as 1 - x preserving boolean behavior and allowing fuzzy logic.\n *\n *  - When x is equal to 1 not(x) will be evaluated to 0\n *  - When x is equal to 0 not(x) will be evaluated to 1\n *\n * @param {Number} x - Number to compute the not value\n * @return {Number}\n *\n * @example <caption>Not.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.not(0)  // 1\n * });\n *\n * @example <caption>Not. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: not(0)\n * `);\n *\n * @memberof carto.expressions\n * @name not\n * @function\n * @api\n */\nexport const Not = genUnaryOp('not', x => 1 - x, x => `(1.0 - ${x})`);\n\n/**\n * Compute the floor of the given expression.\n * Find the nearest integer less than or equal to the expression value.\n *\n *  - When x is equal to 0.8 floor(x) will be evaluated to 0\n *  - When x is equal to 1.3 floor(x) will be evaluated to 1\n *\n * @param {Number} x - Number to compute the floor value\n * @return {Number}\n *\n * @example <caption>Floor.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.floor(5.9)  // 5\n * });\n *\n * @example <caption>Floor. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: floor(5.9)\n * `);\n *\n * @memberof carto.expressions\n * @name floor\n * @function\n * @api\n */\nexport const Floor = genUnaryOp('floor', x => Math.floor(x), x => `floor(${x})`);\n\n/**\n * Compute the ceil of the given expression.\n * Find the nearest integer that is greater than or equal to the expression value.\n *\n *  - When x is equal to 0.8 ceil(x) will be evaluated to 1\n *  - When x is equal to 1.3 ceil(x) will be evaluated to 2\n *\n * @param {Number} x - Number to compute the ceil value\n * @return {Number}\n *\n * @example <caption>Ceil.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   width: s.ceil(5.1);  // 6\n * });\n *\n * @example <caption>Ceil. (String)</caption>\n * const viz = new carto.Viz(`\n *   width: ceil(5.1)\n * `);\n *\n * @memberof carto.expressions\n * @name ceil\n * @function\n * @api\n */\nexport const Ceil = genUnaryOp('ceil', x => Math.ceil(x), x => `ceil(${x})`);\n\nfunction genUnaryOp (name, jsFn, glsl, validTypes = 'number') {\n    return class UnaryOperation extends BaseExpression {\n        constructor (a) {\n            checkMaxArguments(arguments, 1, name);\n\n            a = implicitCast(a);\n            super({\n                a\n            });\n            this.type = 'number';\n            this.expressionName = name;\n            this.inlineMaker = inlines => glsl(inlines.a);\n        }\n\n        get value () {\n            return jsFn(this.a.value);\n        }\n\n        eval (feature) {\n            return jsFn(this.a.eval(feature));\n        }\n\n        _bindMetadata (meta) {\n            super._bindMetadata(meta);\n            checkType(name, 'x', 0, validTypes, this.a);\n        }\n    };\n}\n","import { number, category, list, rgba } from '../expressions';\nimport BaseExpression from './base';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\nimport CartoParsingError from '../../../errors/carto-parsing-error';\nimport { interpolateRGBAinCieLAB } from '../colorspaces';\n\nexport const DEFAULT = undefined;\n\nexport function checkMaxArguments (constructorArguments, maxArguments, expressionName) {\n    if (constructorArguments.length > maxArguments) {\n        throw new CartoValidationError(\n            `Expression '${expressionName}' accepts just ${maxArguments} arguments, but ${constructorArguments.length} were passed.`,\n            CartoValidationErrorTypes.TOO_MANY_ARGS\n        );\n    }\n}\n\nexport function checkMinArguments (constructorArguments, minArguments, expressionName) {\n    if (constructorArguments.length < minArguments) {\n        throw new CartoValidationError(\n            `Expression '${expressionName}' accepts at least ${minArguments} arguments, but ${constructorArguments.length} were passed.`,\n            CartoValidationErrorTypes.NOT_ENOUGH_ARGS\n        );\n    }\n}\n\nexport function checkExactNumberOfArguments (constructorArguments, numArguments, expressionName) {\n    if (constructorArguments.length !== numArguments) {\n        throw new CartoValidationError(\n            `Expression '${expressionName}' accepts exactly ${numArguments} arguments, but ${constructorArguments.length} were passed.`,\n            CartoValidationErrorTypes.WRONG_NUMBER_ARGS\n        );\n    }\n}\n\n// To support literals (string and numeric) out of the box we need to cast them implicitly on constructors\nexport function implicitCast (value) {\n    if (_isNumber(value)) {\n        return number(value);\n    }\n\n    if (typeof value === 'string') {\n        return category(value);\n    }\n\n    if (Array.isArray(value)) {\n        return list(value);\n    }\n\n    return value;\n}\n\nexport function hexToRgb (hex) {\n    // Evaluate #ABC\n    let result = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\n    if (result) {\n        return {\n            r: parseInt(result[1] + result[1], 16),\n            g: parseInt(result[2] + result[2], 16),\n            b: parseInt(result[3] + result[3], 16),\n            a: 1\n        };\n    }\n\n    // Evaluate #ABCD\n    result = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\n    if (result) {\n        return {\n            r: parseInt(result[1] + result[1], 16),\n            g: parseInt(result[2] + result[2], 16),\n            b: parseInt(result[3] + result[3], 16),\n            a: parseInt(result[4] + result[4], 16) / 255\n        };\n    }\n\n    // Evaluate #ABCDEF\n    result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (result) {\n        return {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n            a: 1\n        };\n    }\n\n    // Evaluate #ABCDEFAF\n    result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (result) {\n        return {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n            a: parseInt(result[4], 16) / 255\n        };\n    }\n\n    throw new CartoParsingError('Invalid hexadecimal color');\n}\n\nexport function noOverrideColor () {\n    return rgba(255, 255, 255, 0);\n}\n\nexport function getOrdinalFromIndex (index) {\n    const indexToOrdinal = {\n        1: 'first',\n        2: 'second',\n        3: 'third',\n        4: 'fourth'\n    };\n    return indexToOrdinal[index] || String(index);\n}\n\nexport function getStringErrorPreface (expressionName, parameterName, parameterIndex) {\n    return `${expressionName}(): invalid ${getOrdinalFromIndex(parameterIndex + 1)} parameter '${parameterName}'`;\n}\n\nexport function throwInvalidType (expressionName, parameterName, parameterIndex, expectedType, actualType) {\n    throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n        expected type was '${expectedType}', actual type was '${actualType}'`, CartoValidationErrorTypes.INCORRECT_TYPE);\n}\n\nexport function throwInvalidInstance (expressionName, parameterName, parameterIndex, expectedClass) {\n    const expectedClassNames = Array.isArray(expectedClass)\n        ? expectedClass.join(', ')\n        : expectedClass.name;\n    throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n    expected type was instance of '${expectedClassNames}'`, CartoValidationErrorTypes.INCORRECT_TYPE);\n}\n\nexport function throwInvalidNumber (expressionName, parameterName, parameterIndex, number) {\n    throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n    type of '${number}' is ${typeof number}, 'number' was expected`, CartoValidationErrorTypes.INCORRECT_TYPE);\n}\n\nexport function throwInvalidArray (expressionName, parameterName, parameterIndex, array) {\n    throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n    '${array}' is not an array`, CartoValidationErrorTypes.INCORRECT_TYPE);\n}\n\nexport function throwInvalidString (expressionName, parameterName, parameterIndex, str) {\n    throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n    expected type was 'string', but ${str}' is not a string`, CartoValidationErrorTypes.INCORRECT_TYPE);\n}\n\nexport function throwInvalidStringValue (expressionName, parameterName, parameterIndex, str, validValues) {\n    throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n    value '${str}' is not valid. It should be one of ${validValues.map(v => `'${v}'`).join(', ')}`, CartoValidationErrorTypes.INCORRECT_TYPE);\n}\n\n// Returns true if the argument is of a type that cannot be strictly checked at constructor time\nexport function isArgConstructorTimeTyped (arg) {\n    switch (arg) {\n        case 'number':\n        case 'number-list':\n        case 'number-property':\n        case 'category':\n        case 'category-list':\n        case 'category-property':\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport function checkExpression (expressionName, parameterName, parameterIndex, parameter) {\n    if (!(parameter instanceof BaseExpression)) {\n        throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n        '${parameter}' is not of type \"carto.expressions.Base\"`, CartoValidationErrorTypes.INCORRECT_TYPE);\n    }\n}\n\nexport function checkType (expressionName, parameterName, parameterIndex, expectedType, parameter) {\n    checkExpression(expressionName, parameterName, parameterIndex, parameter);\n    if (Array.isArray(expectedType)) {\n        const ok = expectedType.some(type =>\n            parameter.type === type\n        );\n        if (!ok) {\n            throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n            expected type was one of ${expectedType.join()}, actual type was '${parameter.type}'`, CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n    } else if (parameter.type !== expectedType) {\n        throwInvalidType(expressionName, parameterName, parameterIndex, expectedType, parameter.type);\n    }\n}\n\nexport function checkInstance (expressionName, parameterName, parameterIndex, expectedExpression, parameter) {\n    checkExpression(expressionName, parameterName, parameterIndex, parameter);\n\n    if (Array.isArray(expectedExpression)) {\n        const ok = expectedExpression.some(expression => {\n            return parameter.isA(expression);\n        });\n\n        if (!ok) {\n            throwInvalidInstance(expressionName, parameterName, parameterIndex, expectedExpression);\n        }\n    } else if (!(parameter.isA(expectedExpression))) {\n        throwInvalidInstance(expressionName, parameterName, parameterIndex, expectedExpression);\n    }\n}\n\nexport function checkNumber (expressionName, parameterName, parameterIndex, number) {\n    if (!_isNumber(number)) {\n        throwInvalidNumber(expressionName, parameterName, parameterIndex, number);\n    }\n}\n\nexport function checkString (expressionName, parameterName, parameterIndex, str) {\n    if (typeof str !== 'string') {\n        throwInvalidString(expressionName, parameterName, parameterIndex, str);\n    }\n}\n\nexport function checkStringValue (expressionName, parameterName, parameterIndex, str, validValues) {\n    if (typeof str !== 'string') {\n        throwInvalidString(expressionName, parameterName, parameterIndex, str);\n    } else if (!validValues.includes(str)) {\n        throwInvalidStringValue(expressionName, parameterName, parameterIndex, str, validValues);\n    }\n}\n\nexport function checkArray (expressionName, parameterName, parameterIndex, array) {\n    if (!Array.isArray(array)) {\n        throwInvalidArray(expressionName, parameterName, parameterIndex, array);\n    }\n}\n\nexport function checkFeatureIndependent (expressionName, parameterName, parameterIndex, parameter) {\n    if (parameter.isFeatureDependent()) {\n        throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n        parameter cannot be feature dependent`, CartoValidationErrorTypes.INCORRECT_VALUE);\n    }\n}\n\nexport function checkFeatureDependent (expressionName, parameterName, parameterIndex, parameter) {\n    if (!parameter.isFeatureDependent()) {\n        throw new CartoValidationError(`${getStringErrorPreface(expressionName, parameterName, parameterIndex)}\n        parameter must be feature dependent`, CartoValidationErrorTypes.INCORRECT_VALUE);\n    }\n}\n\nexport function clamp (x, min, max) {\n    return Math.min(Math.max(x, min), max);\n}\n\nexport function mix (x, y, a) {\n    if (typeof x === 'number') {\n        return _mixNumber(x, y, a);\n    }\n\n    if (x instanceof Date) {\n        return _mixDate(x, y, a);\n    }\n\n    return interpolateRGBAinCieLAB(x, y, a);\n}\n\nexport function fract (x) {\n    return x - Math.floor(x);\n}\n\nfunction _mixDate (x, y, a) {\n    const xTime = x.getTime();\n    const yTime = y.getTime();\n    const timeDiff = Math.abs(_mixNumber(xTime, yTime, a));\n\n    return new Date(timeDiff);\n}\n\nfunction _mixNumber (x, y, a) {\n    return x * (1 - a) + y * a;\n}\n\nfunction _isNumber (value) {\n    return Number.isFinite(value) || value === Infinity || value === -Infinity || Number.isNaN(value);\n}\n","import BaseExpression from './base';\nimport Property from './basic/property';\nimport ClusterTimeDimension from './aggregation/cluster/ClusterTimeDimension';\nimport ClusterAggregation from './aggregation/cluster/ClusterAggregation';\nimport ClusterCount from './aggregation/cluster/ClusterCount';\nimport { implicitCast } from './utils';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../errors/carto-validation-error';\nimport CartoRuntimeError from '../../../errors/carto-runtime-error';\nimport { genLightweightFeatureClass } from '../../../interactivity/lightweightFeature';\nimport { getCompoundFeature } from '../../../interactivity/commonFeature';\n\n/**\n * Generates a list of features in the viewport\n *\n * For each feature, the properties specified as arguments to this expression will be available.\n * Filtered features will not be present in the list.\n * This expression cannot be used for rendering, it can only be used in JavaScript code as in the example below.\n *\n * @param {...Property} properties - properties that will appear in the feature list\n * @return {ViewportFeatures} ViewportFeatures\n *\n * @example <caption>Define and use a list of features.</caption>\n * const source = carto.source.Dataset('data');\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   variables: {\n *     list: s.viewportFeatures(s.prop('value'), s.prop('category'))\n *   }\n * });\n * const layer = carto.Layer('layer', source, viz);\n * ...\n * layer.on('updated', () => {\n *   viz.variables.list.value.forEach(feature => {\n *     console.log('value:', feature.value, 'category:', feature.category);\n *   });\n * });\n *\n * @example <caption>Define and use a list of features. (String)</caption>\n * const source = carto.source.Dataset('data');\n * const viz = new carto.Viz(`\n *   \\@list: viewportFeatures($value, $category)\n * `);\n * const layer = carto.Layer('layer', source, viz);\n * ...\n * layer.on('updated', () => {\n *   viz.variables.list.value.forEach(feature => {\n *     console.log('value:', feature.value, 'category:', feature.category);\n *   });\n * });\n *\n * @memberof carto.expressions\n * @name viewportFeatures\n * @function\n * @api\n */\nexport default class ViewportFeatures extends BaseExpression {\n    constructor (...properties) {\n        properties = properties.map(p => implicitCast(p));\n\n        // We need to set all the properties as children of the expression\n        // in order for variables to be resolved.\n        // And as an additional bonus we don't need to define _getMinimumNeededSchema\n        super(_childrenFromProperties(properties));\n        this._value = [];\n        this.type = 'featureList';\n        this._isViewport = true;\n        this._requiredProperties = properties;\n        this._FeatureProxy = null;\n    }\n\n    _applyToShaderSource () {\n        throw new CartoRuntimeError('\\'viewportFeatures\\' cannot be used in visualizations.');\n    }\n\n    isFeatureDependent () {\n        return false;\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    set value (value) {\n        this._value = value;\n    }\n\n    eval () {\n        return this.value;\n    }\n\n    _resetViewportAgg (metadata, renderLayer) {\n        if (!this._FeatureProxy) {\n            if (!this._requiredProperties.every(p => validProperty(p))) {\n                throw new CartoValidationError('viewportFeatures arguments can only be properties', CartoValidationErrorTypes.INCORRECT_TYPE);\n            }\n\n            const propertyNames = this._requiredProperties.map((p) => {\n                return { property: p.propertyName, variable: p._variableName };\n            });\n\n            this._FeatureProxy = genLightweightFeatureClass(propertyNames, renderLayer);\n        }\n        this._value = [];\n    }\n\n    accumViewportAgg (featurePieces) {\n        featurePieces = Array.isArray(featurePieces) ? featurePieces : [featurePieces];\n\n        if (featurePieces.length === 1) {\n            this._value.push(new this._FeatureProxy(featurePieces[0]));\n        } else {\n            const pieces = featurePieces.map((piece) => { return new this._FeatureProxy(piece); });\n            const compoundFeature = getCompoundFeature(pieces);\n            this._value.push(compoundFeature);\n        }\n    }\n}\n\nfunction _childrenFromProperties (properties) {\n    let i = 0;\n    const childContainer = {};\n    properties.forEach(property => {\n        childContainer['p' + ++i] = property;\n    });\n    return childContainer;\n}\n\nfunction validProperty (property) {\n    const validExpressions = [Property, ClusterAggregation, ClusterCount, ClusterTimeDimension];\n    return validExpressions.some(expression => property.isA(expression));\n}\n","import BaseExpression from './base';\nimport { number } from '../expressions';\nimport { checkMaxArguments } from './utils';\n\n/**\n * Get the current zoom level.\n *\n * @return {Number}\n *\n * @example <caption>Only show feature at zoom levels less than 7.</caption>\n * const s = carto.expressions;\n * const viz = new carto.Viz({\n *   filter: s.lt(s.zoom(), 7)\n * });\n *\n * @example <caption>Only show feature at zoom levels less than 7. (String)</caption>\n * const viz = new carto.Viz(`\n *   filter: zoom() < 7\n * `);\n *\n * @memberof carto.expressions\n * @name zoom\n * @function\n * @api\n */\nexport default class Zoom extends BaseExpression {\n    constructor () {\n        checkMaxArguments(arguments, 0, 'zoom');\n\n        super({ zoom: number(0) });\n        this.type = 'number';\n        super.inlineMaker = inline => inline.zoom;\n    }\n\n    get value () {\n        return this.zoom.value;\n    }\n\n    eval () {\n        return this.zoom.value;\n    }\n\n    _preDraw (program, drawMetadata, gl) {\n        this.zoom.value = drawMetadata.zoomLevel;\n        this.zoom._preDraw(program, drawMetadata, gl);\n    }\n}\n","\nimport jsep from 'jsep';\nimport * as expressions from './expressions';\nimport { implicitCast } from './expressions/utils';\nimport { CSS_COLOR_NAMES } from './expressions/color/cssColorNames';\nimport NamedColor from './expressions/color/NamedColor';\nimport Hex from './expressions/color/hex';\nimport Base from './expressions/base';\nimport CartoParsingError from '../../errors/carto-parsing-error';\n\n// TODO use Schema classes\n\nconst aggFns = [];\n\nconst lowerCaseExpressions = {};\nObject.keys(expressions)\n    .filter(name => name[0] === name[0].toLowerCase()) // Only get expressions starting with lowercase\n    .map(name => { lowerCaseExpressions[name.toLocaleLowerCase()] = expressions[name]; });\n\nlowerCaseExpressions.true = expressions.TRUE;\nlowerCaseExpressions.false = expressions.FALSE;\nlowerCaseExpressions.align_center = expressions.ALIGN_CENTER;\nlowerCaseExpressions.align_bottom = expressions.ALIGN_BOTTOM;\n\nlowerCaseExpressions.pi = expressions.PI;\nlowerCaseExpressions.e = expressions.E;\nlowerCaseExpressions.hold = expressions.HOLD;\n\nlowerCaseExpressions.bicycle = expressions.BICYCLE;\nlowerCaseExpressions.building = expressions.BUILDING;\nlowerCaseExpressions.bus = expressions.BUS;\nlowerCaseExpressions.car = expressions.CAR;\nlowerCaseExpressions.circle = expressions.CIRCLE;\nlowerCaseExpressions.circle_outline = expressions.CIRCLE_OUTLINE;\nlowerCaseExpressions.cross = expressions.CROSS;\nlowerCaseExpressions.flag = expressions.FLAG;\nlowerCaseExpressions.house = expressions.HOUSE;\nlowerCaseExpressions.marker = expressions.MARKER;\nlowerCaseExpressions.marker_outline = expressions.MARKER_OUTLINE;\nlowerCaseExpressions.plus = expressions.PLUS;\nlowerCaseExpressions.square = expressions.SQUARE;\nlowerCaseExpressions.square_outline = expressions.SQUARE_OUTLINE;\nlowerCaseExpressions.star = expressions.STAR;\nlowerCaseExpressions.star_outline = expressions.STAR_OUTLINE;\nlowerCaseExpressions.triangle = expressions.TRIANGLE;\nlowerCaseExpressions.triangle_outline = expressions.TRIANGLE_OUTLINE;\n\nconst originalBaseBlendTo = Base.prototype.blendTo;\nBase.prototype.blendTo = function (final, ...args) {\n    if (typeof final === 'string') {\n        final = parseVizExpression(final);\n    }\n    return originalBaseBlendTo.bind(this)(final, ...args);\n};\n\nexport function parseVizExpression (str) {\n    prepareJsep();\n    const r = implicitCast(parseNode(jsep(str)));\n    cleanJsep();\n    return r;\n}\n\nexport function parseVizDefinition (str) {\n    prepareJsep();\n    const ast = jsep(cleanComments(str));\n    let vizSpec = { variables: {} };\n    if (ast.type === 'Compound') {\n        ast.body.map(node => parseVizNamedExpr(vizSpec, node));\n    } else {\n        parseVizNamedExpr(vizSpec, ast);\n    }\n    cleanJsep();\n    return vizSpec;\n}\n\nfunction parseVizNamedExpr (vizSpec, node) {\n    if (node.operator !== ':') {\n        throw new CartoParsingError('Invalid syntax.');\n    }\n\n    if (node.left.name.length && node.left.name[0] === '@') {\n        node.left.name = '__cartovl_variable_' + node.left.name.substr(1);\n    }\n\n    let name = node.left.name;\n\n    if (!name) {\n        throw new CartoParsingError('Invalid syntax.');\n    }\n\n    if (name.startsWith('__cartovl_variable_')) {\n        name = node.left.name.substr('__cartovl_variable_'.length);\n        if (name in vizSpec.variables) {\n            throw new CartoParsingError(`Variable '${name}' is already defined.`);\n        }\n\n        vizSpec.variables[name] = implicitCast(parseNode(node.right));\n    } else {\n        if (name in vizSpec) {\n            throw new CartoParsingError(`Property '${name}' is already defined.`);\n        }\n        const value = parseNode(node.right);\n        vizSpec[name] = (name === 'resolution') ? value : implicitCast(value);\n    }\n}\n\nfunction parseFunctionCall (node) {\n    const name = node.callee.name.toLowerCase();\n    if (aggFns.includes(name)) {\n        // node.arguments[0].name += '_' + name;\n        const args = node.arguments.map(arg => parseNode(arg));\n        return args[0];\n    }\n    const args = node.arguments.map(arg => parseNode(arg));\n    if (lowerCaseExpressions[name]) {\n        return lowerCaseExpressions[name](...args);\n    }\n    throw new CartoParsingError(`Invalid function name '${node.callee.name}'.`);\n}\n\nfunction parseBinaryOperation (node) {\n    const left = parseNode(node.left);\n    const right = parseNode(node.right);\n    switch (node.operator.toLowerCase()) {\n        case '*':\n            return expressions.mul(left, right);\n        case '/':\n            return expressions.div(left, right);\n        case '+':\n            return expressions.add(left, right);\n        case '-':\n            return expressions.sub(left, right);\n        case '%':\n            return expressions.mod(left, right);\n        case '^':\n            return expressions.pow(left, right);\n        case '>':\n            return expressions.greaterThan(left, right);\n        case '>=':\n            return expressions.greaterThanOrEqualTo(left, right);\n        case '<':\n            return expressions.lessThan(left, right);\n        case '<=':\n            return expressions.lessThanOrEqualTo(left, right);\n        case '==':\n            return expressions.equals(left, right);\n        case '!=':\n            return expressions.notEquals(left, right);\n        case 'and':\n            return expressions.and(left, right);\n        case 'or':\n            return expressions.or(left, right);\n        case 'in':\n            return expressions.in(left, right);\n        case 'nin':\n            return expressions.nin(left, right);\n        default:\n            throw new CartoParsingError(`Invalid binary operator '${node.operator}'.`);\n    }\n}\n\nfunction parseUnaryOperation (node) {\n    switch (node.operator) {\n        case '-':\n            return expressions.mul(-1, parseNode(node.argument));\n        case '+':\n            return parseNode(node.argument);\n        default:\n            throw new CartoParsingError(`Invalid unary operator '${node.operator}'.`);\n    }\n}\n\nfunction parseIdentifier (node) {\n    if (node.name.length && node.name[0] === '@') {\n        node.name = '__cartovl_variable_' + node.name.substr(1);\n    }\n    if (node.name.startsWith('__cartovl_variable_')) {\n        return expressions.variable(node.name.substr('__cartovl_variable_'.length));\n    } else if (node.name[0] === '#') {\n        return new Hex(node.name);\n    } else if (node.name[0] === '$') {\n        return expressions.property(node.name.substring(1));\n    } else if (expressions.palettes[node.name.toUpperCase()]) {\n        return expressions.palettes[node.name.toUpperCase()];\n    } else if (lowerCaseExpressions[node.name.toLowerCase()]) {\n        return lowerCaseExpressions[node.name.toLowerCase()];\n    } else if (CSS_COLOR_NAMES.includes(node.name.toLowerCase())) {\n        return new NamedColor(node.name.toLowerCase());\n    } else {\n        throw new CartoParsingError(`Invalid expression '${JSON.stringify(node)}'.`);\n    }\n}\n\nfunction parseNode (node) {\n    if (node.type === 'CallExpression') {\n        return parseFunctionCall(node);\n    } else if (node.type === 'Literal') {\n        return node.value;\n    } else if (node.type === 'ArrayExpression') {\n        return node.elements.map(e => parseNode(e));\n    } else if (node.type === 'BinaryExpression') {\n        return parseBinaryOperation(node);\n    } else if (node.type === 'UnaryExpression') {\n        return parseUnaryOperation(node);\n    } else if (node.type === 'Identifier') {\n        return parseIdentifier(node);\n    }\n    throw new CartoParsingError(`Invalid expression '${JSON.stringify(node)}'.`);\n}\n\nfunction prepareJsep () {\n    // jsep addBinaryOp pollutes its module scope, we need to remove the custom operators afterwards\n    jsep.addBinaryOp(':', 0);\n    jsep.addBinaryOp('^', 11);\n    jsep.addBinaryOp('or', 1);\n    jsep.addBinaryOp('OR', 1);\n    jsep.addBinaryOp('and', 2);\n    jsep.addBinaryOp('AND', 2);\n    jsep.addBinaryOp('in', 13);\n    jsep.addBinaryOp('IN', 1);\n    jsep.addBinaryOp('nin', 13);\n    jsep.addBinaryOp('NIN', 13);\n    jsep.addIdentifierChar('@');\n    jsep.addIdentifierChar('#');\n    jsep.removeLiteral('true');\n    jsep.removeLiteral('false');\n}\n\nfunction cleanJsep () {\n    jsep.removeBinaryOp('in');\n    jsep.removeBinaryOp('IN');\n    jsep.removeBinaryOp('nin');\n    jsep.removeBinaryOp('NIN');\n    jsep.removeBinaryOp('and');\n    jsep.removeBinaryOp('AND');\n    jsep.removeBinaryOp('or');\n    jsep.removeBinaryOp('OR');\n    jsep.removeBinaryOp('^');\n    jsep.removeBinaryOp(':');\n    jsep.removeIdentifierChar('@');\n    jsep.removeIdentifierChar('#');\n    jsep.addLiteral('true');\n    jsep.addLiteral('false');\n}\n\n/**\n * Remove comments from string\n * - // line comments\n * - /* block comments\n * - Keep comments inside single and double quotes tracking escape chars\n * Based on: https://j11y.io/javascript/removing-comments-in-javascript/\n */\nexport function cleanComments (str) {\n    const mode = {\n        singleQuote: false,\n        doubleQuote: false,\n        blockComment: false,\n        lineComment: false,\n        escape: 0\n    };\n\n    // Adding chars to avoid index checking\n    str = ('_' + str + '_').split('');\n\n    for (let i = 0, l = str.length; i < l; i++) {\n        if (mode.singleQuote) {\n            if (str[i] === '\\\\') {\n                mode.escape++;\n            } else if (str[i] === '\\'' && mode.escape % 2 === 0) {\n                mode.singleQuote = false;\n                mode.escape = 0;\n            }\n            continue;\n        }\n\n        if (mode.doubleQuote) {\n            if (str[i] === '\\\\') {\n                mode.escape++;\n            } else if (str[i] === '\"' && mode.escape % 2 === 0) {\n                mode.doubleQuote = false;\n                mode.escape = 0;\n            }\n            continue;\n        }\n\n        if (mode.blockComment) {\n            if (str[i] === '*' && str[i + 1] === '/') {\n                str[i + 1] = '';\n                mode.blockComment = false;\n            }\n            str[i] = '';\n            continue;\n        }\n\n        if (mode.lineComment) {\n            if (str[i + 1] === '\\n' || str[i + 1] === '\\r') {\n                mode.lineComment = false;\n            }\n            if (i + 1 < l) {\n                str[i] = '';\n            }\n            continue;\n        }\n\n        mode.doubleQuote = str[i] === '\"';\n        mode.singleQuote = str[i] === '\\'';\n\n        if (str[i] === '/') {\n            if (str[i + 1] === '*') {\n                str[i] = '';\n                mode.blockComment = true;\n                continue;\n            }\n            if (str[i + 1] === '/') {\n                str[i] = '';\n                mode.lineComment = true;\n                continue;\n            }\n        }\n    }\n\n    // Remove chars added before\n    return str.join('').slice(1, -1);\n}\n","import * as util from '../utils/util';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../src/errors/carto-validation-error';\n\nlet defaultAuth;\n\n/**\n * Set default authentication parameters: [user or username] and apiKey.\n *\n * @param {Object} auth\n * @param {String} auth.username - Name of the user. For backwards compatibility also `auth.user` is allowed\n * @param {String} auth.apiKey - API key used to authenticate against CARTO\n *\n * @memberof carto\n * @api\n */\nfunction setDefaultAuth (auth) {\n    checkAuth(auth);\n    defaultAuth = auth;\n}\n\n/**\n * Get default authentication\n * @return {Object}\n */\nfunction getDefaultAuth () {\n    return defaultAuth;\n}\n\n/**\n * Reset the default auth object\n */\nfunction cleanDefaultAuth () {\n    defaultAuth = undefined;\n}\n\n/**\n * Check a valid auth parameter.\n *\n * @param  {Object} auth\n */\nfunction checkAuth (auth) {\n    if (util.isUndefined(auth)) {\n        throw new CartoValidationError('\\'auth\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n    }\n    if (!util.isObject(auth)) {\n        throw new CartoValidationError('\\'auth\\' property must be an object.', CartoValidationErrorTypes.INCORRECT_TYPE);\n    }\n    auth.username = util.isUndefined(auth.username) ? auth.user : auth.username; // backwards compatibility\n    checkApiKey(auth.apiKey);\n    checkUsername(auth.username);\n}\n\nfunction checkApiKey (apiKey) {\n    if (util.isUndefined(apiKey)) {\n        throw new CartoValidationError('\\'apiKey\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n    }\n    if (!util.isString(apiKey)) {\n        throw new CartoValidationError('\\'apiKey\\' property must be a string.', CartoValidationErrorTypes.INCORRECT_TYPE);\n    }\n    if (apiKey === '') {\n        throw new CartoValidationError('\\'apiKey\\' property must be not empty.', CartoValidationErrorTypes.INCORRECT_VALUE);\n    }\n}\n\nfunction checkUsername (username) {\n    if (util.isUndefined(username)) {\n        throw new CartoValidationError('\\'username\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n    }\n    if (!util.isString(username)) {\n        throw new CartoValidationError('\\'username\\' property must be a string.', CartoValidationErrorTypes.INCORRECT_TYPE);\n    }\n    if (username === '') {\n        throw new CartoValidationError('\\'username\\' property must be not empty.', CartoValidationErrorTypes.INCORRECT_VALUE);\n    }\n}\n\nexport { setDefaultAuth, getDefaultAuth, checkAuth, cleanDefaultAuth };\n","import * as util from '../utils/util';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../src/errors/carto-validation-error';\n\nlet defaultConfig;\n\n/**\n * Set default configuration parameters\n *\n * @param {Object} config\n * @param {String} config.serverURL - Template URL of the CARTO Maps API server: `https://{user}.carto.com`\n *\n * @memberof carto\n * @api\n */\nfunction setDefaultConfig (config) {\n    checkConfig(config);\n    defaultConfig = config;\n}\n\n/**\n * Get default config\n * @return {Object}\n */\nfunction getDefaultConfig () {\n    return defaultConfig;\n}\n\n/**\n * Clean default config object\n */\nfunction cleanDefaultConfig () {\n    defaultConfig = undefined;\n}\n\n/**\n * Check a valid config parameter.\n *\n * @param  {Object} config\n */\nfunction checkConfig (config) {\n    if (config) {\n        if (!util.isObject(config)) {\n            throw new CartoValidationError('\\'config\\' property must be an object.', CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n        _checkServerURL(config.serverURL);\n    }\n}\n\nfunction _checkServerURL (serverURL) {\n    if (!util.isString(serverURL)) {\n        throw new CartoValidationError('\\'serverURL\\' property must be a string.', CartoValidationErrorTypes.INCORRECT_TYPE);\n    }\n}\n\nexport { setDefaultConfig, getDefaultConfig, checkConfig, cleanDefaultConfig };\n","export default class Base {\n    /**\n     * Base data source object.\n     *\n     * The current {@link carto.source|sources} available are: {@link carto.source.Dataset|Dataset}, {@link carto.source.SQL|SQL}, {@link carto.source.GeoJSON|GeoJSON} and {@link carto.source.MVT|MVT}\n     *\n     * Use a source to reference the data used in a {@link carto.Layer|layer}.\n     *\n     * @constructor Base\n     * @namespace carto.source\n     * @abstract\n     * @api\n     */\n}\n","import Base from './Base';\nimport Windshaft from '../client/windshaft';\nimport { getDefaultAuth, checkAuth } from '../setup/auth-service';\nimport { getDefaultConfig, checkConfig } from '../setup/config-service';\n\nconst DEFAULT_SERVER_URL_TEMPLATE = 'https://{user}.carto.com';\n\nexport default class BaseWindshaft extends Base {\n    constructor () {\n        super();\n        this._client = new Windshaft(this);\n    }\n\n    initialize (auth, config) {\n        this._initializeAuth(auth);\n        this._initializeConfig(config);\n\n        this._initializeServerURL();\n    }\n\n    _initializeAuth (auth) {\n        this._auth = auth || getDefaultAuth();\n        checkAuth(this._auth);\n\n        this._apiKey = this._auth.apiKey;\n        this._username = this._auth.username;\n    }\n\n    _initializeConfig (config) {\n        this._config = config || getDefaultConfig();\n        checkConfig(this._config);\n    }\n\n    _initializeServerURL () {\n        let url = (this._config && this._config.serverURL) || DEFAULT_SERVER_URL_TEMPLATE;\n        url = url.replace(/{user}/, this._username);\n        this._serverURL = url;\n    }\n\n    bindLayer (addDataframe) {\n        this._client.bindLayer(addDataframe);\n    }\n\n    requiresNewMetadata (viz) {\n        return this._client.requiresNewMetadata(viz);\n    }\n\n    requestMetadata (viz) {\n        return this._client.getMetadata(viz);\n    }\n\n    requestData (zoom, viewport) {\n        return this._client.getData(zoom, viewport);\n    }\n\n    free () {\n        this._client.free();\n    }\n}\n","import * as LRU from 'lru-cache';\n\nexport default class DataframeCache {\n    constructor () {\n        const lruOptions = {\n            max: 256,\n            // TODO improve cache length heuristic\n            length: () => 1,\n            maxAge: 1000 * 60 * 60,\n            dispose: (uid, dataframePromise) => {\n                dataframePromise.then(dataframe => {\n                    if (!dataframe.empty) {\n                        dataframe.free();\n                    }\n                });\n            }\n        };\n        this._cache = LRU(lruOptions);\n    }\n\n    // Get the promise of the dataframe with the provided unique ID, by querying the local cache, and using the fetch function as a fallback.\n    // The `fetch` function will be called with the provided `uid` and it is expected that it will return a promise to a Dataframe\n    get (uid, fetch) {\n        const cachedDataframe = this._cache.get(uid);\n        if (cachedDataframe) {\n            return cachedDataframe;\n        }\n\n        const dataframePromise = fetch(uid);\n        this._cache.set(uid, dataframePromise);\n        return dataframePromise;\n    }\n\n    free () {\n        this._cache.reset();\n    }\n}\n","import CartoValidationError, { CartoValidationErrorTypes } from '../../src/errors/carto-validation-error';\nimport util from '../utils/util';\nimport BaseWindshaft from './BaseWindshaft';\n\nexport default class Dataset extends BaseWindshaft {\n    /**\n     * A dataset defines the data that will be displayed in a layer and is equivalent\n     * to a table in the server.\n     *\n     * If you have a table named `european_cities` in your CARTO account you could load all the\n     * data in a layer using a `carto.source.Dataset`.\n     *\n     * If you want to load data applying a SQL query see {@link carto.source.SQL|carto.source.SQL}.\n     *\n     * Since tables in the server are protected you must provide valid credentials in order to get access to the data.\n     * This can be done {@link carto.setDefaultAuth|setting the default auth} in the carto object or providing an `auth`\n     * object with your username and apiKey.\n     *\n     * If your server is not hosted by CARTO you must add a third parameter that includes the serverURL. This can be done {@link carto.setDefaultConfig|setting the default config} in the carto object or providing a `config`\n     * object with your serverURL.\n     *\n     * The combination of different type of geometries on the same source is not supported. Valid geometry types are `points`, `lines` and `polygons`.\n     *\n     * @param {String} tableName - The name of an existing table\n     * @param {Object} auth\n     * @param {String} auth.apiKey - API key used to authenticate against CARTO\n     * @param {String} auth.user - Name of the user\n     * @param {Object} config\n     * @param {String} [config.serverURL='https://{user}.carto.com'] - URL of the CARTO Maps API server\n     *\n     * @example\n     * const source = new carto.source.Dataset('european_cities', {\n     *   apiKey: 'YOUR_API_KEY_HERE',\n     *   username: 'YOUR_USERNAME_HERE'\n     * });\n     *\n     * @throws CartoError\n     *\n     * @memberof carto.source\n     * @name Dataset\n     * @api\n     */\n    constructor (tableName, auth, config) {\n        super();\n        this._checkTableName(tableName);\n        this._tableName = tableName;\n        this.initialize(auth, config);\n    }\n\n    _getFromClause () {\n        return this._tableName;\n    }\n\n    _clone () {\n        return new Dataset(this._tableName, this._auth, this._config);\n    }\n\n    _checkTableName (tableName) {\n        if (util.isUndefined(tableName)) {\n            throw new CartoValidationError('\\'tableName\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n        }\n        if (!util.isString(tableName)) {\n            throw new CartoValidationError('\\'tableName\\' property must be a string.', CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n        if (tableName === '') {\n            throw new CartoValidationError('\\'tableName\\' property must be not empty.', CartoValidationErrorTypes.INCORRECT_VALUE);\n        }\n    }\n}\n","import * as rsys from '../client/rsys';\nimport Dataframe from '../renderer/dataframe/Dataframe';\nimport { DEFAULT_ID_PROPERTY } from '../renderer/Metadata';\n\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\n\nimport util from '../utils/util';\nimport Base from './Base';\n\nimport GeoJSONGeometryTransformer from './geojson/GeoJSONGeometryTransformer';\nimport { GeoJSONGeometryType, dataframeGeometryType } from './geojson/GeoJSONGeometryType';\nimport { GeoJSONMetadataBuilder } from './geojson/GeoJSOMetadataBuilder';\n\nconst DATAFRAME_PADDING = 1024;\nconst SAMPLE_SIZE_FOR_CENTER = 10;\n\nexport default class GeoJSON extends Base {\n    /**\n     * Create a carto.source.GeoJSON source from a GeoJSON object.\n     *\n     * @param {Object} data - A GeoJSON data object\n     * @param {Object} options - Options\n     * @param {array<string>} options.dateColumns - List of columns that contain dates.\n     *\n     * The combination of different type of geometries on the same source is not supported. Valid geometry types are `Point`, `LineString`, `MultiLineString`, `Polygon` and `MultiPolygon`.\n     *\n     * @example\n     * const source = new carto.source.GeoJSON({\n     *   \"type\": \"Feature\",\n     *   \"geometry\": {\n     *     \"type\": \"Point\",\n     *     \"coordinates\": [ 0, 0 ]\n     *   },\n     *   \"properties\": {\n     *     \"index\": 1\n     *   }\n     * });\n     *\n     * @throws CartoError\n     *\n     * @memberof carto.source\n     * @name GeoJSON\n     * @api\n     */\n    constructor (data, options = {}) {\n        super();\n\n        this._initializeData(data);\n        this._initializeMetadataHelpers(options);\n    }\n\n    _initializeData (data) {\n        this._checkData(data);\n\n        this._data = data;\n        this._features = this._featuresFromData();\n        this._geomType = this._getGeomType();\n        this._webMercatorCenter = this._getWebMercatorCoordsCenter();\n        this._geometryTransformer = new GeoJSONGeometryTransformer(this._webMercatorCenter);\n    }\n\n    _initializeMetadataHelpers (options) {\n        this._providedDateColumns = new Set(options.dateColumns);\n        this._boundColumns = new Set();\n\n        this._metadataBuilder = new GeoJSONMetadataBuilder(this._providedDateColumns, this._boundColumns);\n    }\n\n    /**\n     * Check geojson data is a proper object\n     */\n    _checkData (data) {\n        if (util.isUndefined(data)) {\n            throw new CartoValidationError('\\'data\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n        }\n        if (!util.isObject(data)) {\n            throw new CartoValidationError('\\'data\\' property must be an object.',\n                CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n    }\n\n    /**\n     * Get initialized Features from data\n     */\n    _featuresFromData () {\n        let features;\n\n        const dataType = this._data.type;\n        if (dataType === 'FeatureCollection') {\n            features = this._data.features;\n        } else if (dataType === 'Feature') {\n            features = [this._data];\n        } else {\n            throw new CartoValidationError('\\'data\\' property must be a GeoJSON object.', CartoValidationErrorTypes.INCORRECT_VALUE);\n        }\n\n        this._initializePropertiesIn(features);\n        return features;\n    }\n\n    /**\n     * Get the GeoJSONGeometryType from the first Feature\n     */\n    _getGeomType () {\n        return this._features[0].geometry.type;\n    }\n\n    /**\n     * Get an estimated center in WebMercator coordinates, based on a sample of the Features\n     * with SAMPLE_SIZE_FOR_CENTER\n     */\n    _getWebMercatorCoordsCenter () {\n        let x = 0;\n        let y = 0;\n        let nPoints = 0;\n        this._fetchFeatureGeometry({ sample: SAMPLE_SIZE_FOR_CENTER }, (_, geometry) => {\n            const samplePoint = this._samplePoint(geometry);\n            const sampleXY = util.projectToWebMercator({ lng: samplePoint[0], lat: samplePoint[1] });\n            x += sampleXY.x;\n            y += sampleXY.y;\n            nPoints += 1;\n        });\n\n        if (nPoints > 1) {\n            x /= nPoints;\n            y /= nPoints;\n        }\n\n        return { x, y };\n    }\n\n    /**\n     * Get the dataframe center in a local RSys.\n     */\n    _getDataframeCenter () {\n        const targetReferenceSystem = {\n            scale: util.WM_R,\n            center: { x: 0, y: 0 }\n        };\n        const { x: worldX, y: worldY } = this._webMercatorCenter;\n        return rsys.wToR(worldX, worldY, targetReferenceSystem);\n    }\n\n    bindLayer (addDataframe) {\n        this._addDataframe = addDataframe;\n    }\n\n    requestMetadata (viz) {\n        return Promise.resolve(this._computeMetadata(viz));\n    }\n\n    requestData () {\n        if (this._dataframe) {\n            const newProperties = this._decodeUnboundProperties();\n            this._dataframe.addProperties();\n\n            const newPropertyNames = Object.keys(newProperties);\n            newPropertyNames.forEach(propertyName => {\n                this._boundColumns.add(propertyName);\n            });\n\n            return Promise.resolve(newPropertyNames.length > 0);\n        }\n\n        this._dataframe = this._createNewDataframe();\n        return Promise.resolve(true);\n    }\n\n    _createNewDataframe () {\n        const dataframe = new Dataframe({\n            active: true,\n            center: this._getDataframeCenter(),\n            geom: this._decodeGeometry(),\n            properties: this._decodeUnboundProperties(),\n            scale: 1,\n            size: this._features.length,\n            type: dataframeGeometryType(this._geomType),\n            metadata: this._metadata\n        });\n\n        this._boundColumns = new Set(Object.keys(dataframe.properties));\n        this._addDataframe && this._addDataframe(dataframe);\n\n        return dataframe;\n    }\n\n    requiresNewMetadata () {\n        return false;\n    }\n\n    _clone () {\n        return new GeoJSON(this._data, { dateColumns: Array.from(this._providedDateColumns) });\n    }\n\n    _initializePropertiesIn (features) {\n        for (let i = 0; i < features.length; i++) {\n            features[i].properties = features[i].properties || {};\n        }\n    }\n\n    _computeMetadata (viz) {\n        this._metadata = this._metadataBuilder.buildFrom(viz, this._features);\n        return this._metadata;\n    }\n\n    _decodeUnboundProperties () {\n        const unboundProperties = this._getUnboundProperties();\n        const unboundFieldNames = Object.keys(unboundProperties);\n\n        for (let i = 0; i < this._features.length; i++) {\n            const f = this._features[i];\n            unboundFieldNames.forEach(name => {\n                if (name === DEFAULT_ID_PROPERTY && !Number.isFinite(f.properties[DEFAULT_ID_PROPERTY])) {\n                    f.properties[DEFAULT_ID_PROPERTY] = -i; // using negative ids for GeoJSON features\n                }\n                // note that GeoJSON does not support multi-value properties\n                unboundProperties[name][i] = this._metadata.codec(name).sourceToInternal(this._metadata, f.properties[name]);\n            });\n        }\n\n        return unboundProperties;\n    }\n\n    _getUnboundProperties () {\n        const allFields = this._metadataBuilder.getCurrentFields();\n\n        const properties = {};\n        allFields.forEach(name => {\n            if (this._boundColumns.has(name)) {\n                return;\n            }\n            // The dataframe expects to have a padding, adding DATAFRAME_PADDING empty values assures this condition is met\n            properties[name] = new Float32Array(this._features.length + DATAFRAME_PADDING);\n        });\n\n        return properties;\n    }\n\n    /**\n     * Take the geometry from every feature and invoke the callback with it.\n     * If custom options are specified, a 'sample' can be used to skip every 'X' features\n     */\n    _fetchFeatureGeometry (options = {}, callback) {\n        let geometry = null;\n        const DEFAULT_SAMPLE = 1; // every feature\n        const numFeatures = this._features.length;\n        const increment = options.sample ? Math.max(1, Math.floor(numFeatures / options.sample)) : DEFAULT_SAMPLE;\n\n        for (let i = 0; i < numFeatures; i += increment) {\n            const feature = this._features[i];\n            if (feature.type === 'Feature') {\n                callback(i, feature.geometry);\n            }\n        }\n        return geometry;\n    }\n\n    _allocGeometry () {\n        if (this._geomType === 'Point') {\n            return new Float32Array(this._features.length * 6);\n        }\n        return ([]);\n    }\n\n    _decodeGeometry () {\n        let geometries = this._allocGeometry();\n\n        this._fetchFeatureGeometry({}, (i, geometry) => {\n            const type = geometry.type;\n            const coordinates = geometry.coordinates;\n            const newGeomType = dataframeGeometryType(type);\n            const prevGeomType = dataframeGeometryType(this._geomType);\n            if (newGeomType !== prevGeomType) {\n                throw new CartoValidationError(\n                    `multiple geometry types not supported: found '${newGeomType}' instead of '${prevGeomType}'.`,\n                    CartoValidationErrorTypes.INCORRECT_TYPE\n                );\n            }\n            if (type === GeoJSONGeometryType.POINT) {\n                const point = this._geometryTransformer.computePoint(coordinates);\n                geometries[6 * i + 0] = point.x;\n                geometries[6 * i + 1] = point.y;\n                geometries[6 * i + 2] = point.x;\n                geometries[6 * i + 3] = point.y;\n                geometries[6 * i + 4] = point.x;\n                geometries[6 * i + 5] = point.y;\n            } else if (type === GeoJSONGeometryType.LINE_STRING) {\n                const line = this._geometryTransformer.computeLineString(coordinates);\n                geometries.push([line]);\n            } else if (type === GeoJSONGeometryType.MULTI_LINE_STRING) {\n                const multiline = this._geometryTransformer.computeMultiLineString(coordinates);\n                geometries.push(multiline);\n            } else if (type === GeoJSONGeometryType.POLYGON) {\n                const polygon = this._geometryTransformer.computePolygon(coordinates);\n                geometries.push([polygon]);\n            } else if (type === GeoJSONGeometryType.MULTI_POLYGON) {\n                const multipolygon = this._geometryTransformer.computeMultiPolygon(coordinates);\n                geometries.push(multipolygon);\n            }\n        });\n\n        return geometries;\n    }\n\n    _samplePoint (geometry) {\n        const type = geometry.type;\n\n        const coordinates = geometry.coordinates;\n        if (type === GeoJSONGeometryType.POINT) {\n            return coordinates;\n        } else if (type === GeoJSONGeometryType.LINE_STRING) {\n            return coordinates[0];\n        } else if (type === GeoJSONGeometryType.MULTI_LINE_STRING || type === GeoJSONGeometryType.POLYGON) {\n            return coordinates[0][0];\n        } else if (type === GeoJSONGeometryType.MULTI_POLYGON) {\n            return coordinates[0][0][0];\n        }\n    }\n\n    free () {\n    }\n}\n","\nimport Dataframe from '../renderer/dataframe/Dataframe';\nimport Metadata from '../renderer/Metadata';\nimport MVTMetadata from './MVTMetadata';\nimport Base from './Base';\nimport TileClient from './TileClient';\nimport Worker from './MVTWorkers.worker';\n\nexport default class MVT extends Base {\n    /**\n     * Create a carto.source.MVT.\n     *\n     * @param {string | string[]} templateURL - A string with the URL template of the MVT tiles in https://mytileserver.com/{z}/{x}/{y}.mvt format or a list of such templates. Usage of a list of templates with different domains is recommended since that allows the browser to make more requests in parallel.\n     * @param {MVTMetadata} [metadata] - Metadata of the source, declaring property name, types and optionally ranges.\n     * @param {MVTOptions} [options] - MVT source configuration, the default value will be valid for regular URL templates if the tiles are composed of only one layer\n     *\n     * The combination of different type of geometries on the same source is not supported. Valid geometry types are `points`, `lines` and `polygons`.\n     *\n     * @example\n     * // Usage with multiple templateURLs as recommended\n     * const metadata = new carto.source.mvt.Metadata([{ type: 'number', name: 'total_pop'}])\n     * const source = new carto.source.MVT(\n     *     [\n     *         \"https://server-a.tileserver.com/{z}/{x}/{y}.mvt\",\n     *         \"https://server-b.tileserver.com/{z}/{x}/{y}.mvt\",\n     *         \"https://server-c.tileserver.com/{z}/{x}/{y}.mvt\",\n     *         \"https://server-d.tileserver.com/{z}/{x}/{y}.mvt\"\n     *    ],\n     *    metadata\n     *);\n     *\n     * @throws CartoError\n     *\n     * @memberof carto.source\n     * @name MVT\n     * @api\n     */\n    constructor (templateURL, metadata = new MVTMetadata(), options) {\n        super();\n\n        this._templateURL = templateURL;\n        this._tileClient = new TileClient(templateURL);\n\n        this._initMetadata(metadata);\n        this._initOptions(options);\n\n        this._workerDispatch = {};\n        this._mID = 0;\n        this._workerName = 'MVT';\n    }\n\n    _initMetadata (metadata) {\n        if (!(metadata instanceof Metadata)) {\n            metadata = new MVTMetadata(metadata);\n        }\n\n        metadata.setCodecs();\n        this._metadata = metadata;\n    }\n\n    _initOptions (options) {\n        if (options === undefined) {\n            options = {\n                layerID: undefined,\n                viewportZoomToSourceZoom: Math.ceil,\n                maxZoom: undefined\n            };\n        }\n\n        options.viewportZoomToSourceZoom = options.viewportZoomToSourceZoom || Math.ceil;\n        this._options = options;\n    }\n\n    get _worker () {\n        if (!this._workerInstance) {\n            this._workerInstance = new Worker();\n            this._workerInstance.onmessage = this._receiveMessageFromWorker.bind(this);\n        }\n        return this._workerInstance;\n    }\n\n    _receiveMessageFromWorker (event) {\n        const { mID, dataframe } = event.data;\n        if (!dataframe.empty) {\n            this._updateMetadataWith(dataframe);\n        }\n        this._workerDispatch[mID](dataframe);\n    }\n\n    _updateMetadataWith (dataframe) {\n        Object.setPrototypeOf(dataframe, Dataframe.prototype);\n        const metadata = dataframe.metadata;\n\n        this._metadata.numCategories = metadata.numCategories;\n        this._metadata.categoryToID = metadata.categoryToID;\n        this._metadata.IDToCategory = metadata.IDToCategory;\n        this._metadata.geomType = metadata.geomType;\n\n        dataframe.metadata = this._metadata;\n    }\n\n    _clone () {\n        return new MVT(this._templateURL, JSON.parse(JSON.stringify(this._metadata)), this._options);\n    }\n\n    bindLayer (addDataframe) {\n        this._tileClient.bindLayer(addDataframe);\n    }\n\n    async requestMetadata () {\n        return this._metadata;\n    }\n\n    requestData (zoom, viewport) {\n        const urlToDataframeTransformer = this._urlToDataframeTransformer.bind(this);\n        const viewportZoomToSourceZoom = this._viewportZoomToSourceZoom.bind(this);\n\n        return this._tileClient.requestData(zoom, viewport,\n            urlToDataframeTransformer, viewportZoomToSourceZoom\n        );\n    }\n\n    _urlToDataframeTransformer (x, y, z, url) {\n        return new Promise(resolve => {\n            const validUrl = this._validUrlForWorker(url);\n            this._postMessageToWorker({ x, y, z }, validUrl);\n\n            this._metadataSent = true;\n            this._workerDispatch[this._mID] = resolve;\n            this._mID++;\n        });\n    }\n\n    _postMessageToWorker ({ x, y, z }, url) {\n        this._worker.postMessage({\n            x,\n            y,\n            z,\n            url,\n            layerID: this._options.layerID,\n            metadata: this._metadataSent ? undefined : this._metadata,\n            mID: this._mID,\n            workerName: this._workerName\n        });\n    }\n\n    _viewportZoomToSourceZoom (zoom) {\n        const maxZoom = this._options.maxZoom;\n        const sourceZoom = this._options.viewportZoomToSourceZoom(zoom);\n\n        if (maxZoom === undefined) {\n            return sourceZoom;\n        }\n\n        return Math.min(sourceZoom, maxZoom);\n    }\n\n    _validUrlForWorker (url) {\n        // Relative URLs don't work inside the Web Worker\n        if (url[0] === '.') {\n            let parts = window.location.pathname.split('/');\n            parts.pop();\n            const path = parts.join('/');\n            return `${window.location.protocol}//${window.location.host}/${path}/${url}`;\n        } else if (url[0] === '/') {\n            return `${window.location.protocol}//${window.location.host}${url}`;\n        }\n\n        return url;\n    }\n\n    free () {\n        this._tileClient.free();\n    }\n}\n\n/**\n * A MVTOptions object declares a MVT configuration\n *\n * @typedef {Object} MVTOptions\n * @property {String} layerID - layerID on the MVT tiles to decode, the parameter is optional if the MVT tiles only contain one layer\n * @property {function} [viewportZoomToSourceZoom=Math.ceil] - function to transform the viewport zoom into a zoom value to replace `{z}` in the MVT URL template, undefined defaults to `Math.ceil`\n * @property {number} maxZoom - limit MVT tile requests to this zoom level, undefined defaults to no limit\n *\n * @example <caption>Use layer `myAwesomeLayer` and request tiles up to zoom level 12.</caption>\n * const options = {\n *     layerID: 'myAwesomeLayer',\n *     maxZoom: 12\n * };\n *\n * @example <caption>Use layer `myAwesomeLayer` and request tiles only at zoom levels 4, 5 and 6.</caption>\n * const options = {\n *     layerID: 'myAwesomeLayer',\n *     viewportZoomToSourceZoom: zoom => Math.min(Math.max(Math.ceil(zoom), 4), 6)\n * };\n *\n * @example <caption>Use layer `myAwesomeLayer` and request tiles only at zoom levels 0,3,6,9...</caption>\n * const options = {\n *     layerID: 'myAwesomeLayer',\n *     viewportZoomToSourceZoom: zoom => Math.round(zoom / 3) * 3\n * };\n *\n * @api\n */\n\n/**\n * An MVTMetadata object declares metadata information of a a carto.Source.\n *\n * @typedef {Object} MVTMetadata\n * @property {MVTProperty} properties - property names, types and optionally ranges\n * @property {String} [idProperty='cartodb_id'] - property name of the property that should be used as ID\n *\n * @example <caption> Creating a MVTMetadata object</caption>\n * const metadata = {\n        properties: {\n          numfloors: { type: 'number' },\n          cartodb_id: { type: 'number' }\n        },\n        idProperty: 'cartodb_id',\n      };\n *\n * @api\n */\n\n/**\n * MVTProperty objects declare a property type and, optionally, additional information like numeric ranges.\n *\n * @typedef {Object} MVTProperty\n * @property {String} type - Valid values are 'number' and 'category', 'category' must be used if the MVT encodes the property as strings, regardless of the real type\n * @property {Number} min - With `type='number'` min specifies the minimum value in the dataset, this is used in global aggregation expressions\n * @property {Number} max - With `type='number'` max specifies the maximum value in the dataset, this is used in global aggregation expressions\n *\n * @api\n */\n","import Metadata from '../renderer/Metadata';\nimport MVTCodecFactory from '../codecs/mvt';\n\nexport default class MVTMetadata extends Metadata {\n    setCodecs () {\n        Object.keys(this.properties).forEach(propertyName => {\n            const property = this.properties[propertyName];\n            const type = property.type;\n            if (type !== 'geometry') {\n                property.codec = MVTCodecFactory(this, type, propertyName);\n            }\n        });\n    }\n}\n","module.exports = function() {\n  return require(\"!!/home/kursat/WebstormProjects/sandboxes/carto-vl/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"/*!\\n * CARTO VL js https://carto.com/\\n * Version: 1.4.3-alpha.0\\n * \\n */\\n/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./src/sources/MVTWorkers.worker.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./node_modules/@mapbox/point-geometry/index.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/@mapbox/point-geometry/index.js ***!\\n  \\\\******************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = Point;\\n\\n/**\\n * A standalone point geometry with useful accessor, comparison, and\\n * modification methods.\\n *\\n * @class Point\\n * @param {Number} x the x-coordinate. this could be longitude or screen\\n * pixels, or any other sort of unit.\\n * @param {Number} y the y-coordinate. this could be latitude or screen\\n * pixels, or any other sort of unit.\\n * @example\\n * var point = new Point(-77, 38);\\n */\\nfunction Point(x, y) {\\n    this.x = x;\\n    this.y = y;\\n}\\n\\nPoint.prototype = {\\n\\n    /**\\n     * Clone this point, returning a new point that can be modified\\n     * without affecting the old one.\\n     * @return {Point} the clone\\n     */\\n    clone: function() { return new Point(this.x, this.y); },\\n\\n    /**\\n     * Add this point's x & y coordinates to another point,\\n     * yielding a new point.\\n     * @param {Point} p the other point\\n     * @return {Point} output point\\n     */\\n    add:     function(p) { return this.clone()._add(p); },\\n\\n    /**\\n     * Subtract this point's x & y coordinates to from point,\\n     * yielding a new point.\\n     * @param {Point} p the other point\\n     * @return {Point} output point\\n     */\\n    sub:     function(p) { return this.clone()._sub(p); },\\n\\n    /**\\n     * Multiply this point's x & y coordinates by point,\\n     * yielding a new point.\\n     * @param {Point} p the other point\\n     * @return {Point} output point\\n     */\\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\\n\\n    /**\\n     * Divide this point's x & y coordinates by point,\\n     * yielding a new point.\\n     * @param {Point} p the other point\\n     * @return {Point} output point\\n     */\\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\\n\\n    /**\\n     * Multiply this point's x & y coordinates by a factor,\\n     * yielding a new point.\\n     * @param {Point} k factor\\n     * @return {Point} output point\\n     */\\n    mult:    function(k) { return this.clone()._mult(k); },\\n\\n    /**\\n     * Divide this point's x & y coordinates by a factor,\\n     * yielding a new point.\\n     * @param {Point} k factor\\n     * @return {Point} output point\\n     */\\n    div:     function(k) { return this.clone()._div(k); },\\n\\n    /**\\n     * Rotate this point around the 0, 0 origin by an angle a,\\n     * given in radians\\n     * @param {Number} a angle to rotate around, in radians\\n     * @return {Point} output point\\n     */\\n    rotate:  function(a) { return this.clone()._rotate(a); },\\n\\n    /**\\n     * Rotate this point around p point by an angle a,\\n     * given in radians\\n     * @param {Number} a angle to rotate around, in radians\\n     * @param {Point} p Point to rotate around\\n     * @return {Point} output point\\n     */\\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\\n\\n    /**\\n     * Multiply this point by a 4x1 transformation matrix\\n     * @param {Array<Number>} m transformation matrix\\n     * @return {Point} output point\\n     */\\n    matMult: function(m) { return this.clone()._matMult(m); },\\n\\n    /**\\n     * Calculate this point but as a unit vector from 0, 0, meaning\\n     * that the distance from the resulting point to the 0, 0\\n     * coordinate will be equal to 1 and the angle from the resulting\\n     * point to the 0, 0 coordinate will be the same as before.\\n     * @return {Point} unit vector point\\n     */\\n    unit:    function() { return this.clone()._unit(); },\\n\\n    /**\\n     * Compute a perpendicular point, where the new y coordinate\\n     * is the old x coordinate and the new x coordinate is the old y\\n     * coordinate multiplied by -1\\n     * @return {Point} perpendicular point\\n     */\\n    perp:    function() { return this.clone()._perp(); },\\n\\n    /**\\n     * Return a version of this point with the x & y coordinates\\n     * rounded to integers.\\n     * @return {Point} rounded point\\n     */\\n    round:   function() { return this.clone()._round(); },\\n\\n    /**\\n     * Return the magitude of this point: this is the Euclidean\\n     * distance from the 0, 0 coordinate to this point's x and y\\n     * coordinates.\\n     * @return {Number} magnitude\\n     */\\n    mag: function() {\\n        return Math.sqrt(this.x * this.x + this.y * this.y);\\n    },\\n\\n    /**\\n     * Judge whether this point is equal to another point, returning\\n     * true or false.\\n     * @param {Point} other the other point\\n     * @return {boolean} whether the points are equal\\n     */\\n    equals: function(other) {\\n        return this.x === other.x &&\\n               this.y === other.y;\\n    },\\n\\n    /**\\n     * Calculate the distance from this point to another point\\n     * @param {Point} p the other point\\n     * @return {Number} distance\\n     */\\n    dist: function(p) {\\n        return Math.sqrt(this.distSqr(p));\\n    },\\n\\n    /**\\n     * Calculate the distance from this point to another point,\\n     * without the square root step. Useful if you're comparing\\n     * relative distances.\\n     * @param {Point} p the other point\\n     * @return {Number} distance\\n     */\\n    distSqr: function(p) {\\n        var dx = p.x - this.x,\\n            dy = p.y - this.y;\\n        return dx * dx + dy * dy;\\n    },\\n\\n    /**\\n     * Get the angle from the 0, 0 coordinate to this point, in radians\\n     * coordinates.\\n     * @return {Number} angle\\n     */\\n    angle: function() {\\n        return Math.atan2(this.y, this.x);\\n    },\\n\\n    /**\\n     * Get the angle from this point to another point, in radians\\n     * @param {Point} b the other point\\n     * @return {Number} angle\\n     */\\n    angleTo: function(b) {\\n        return Math.atan2(this.y - b.y, this.x - b.x);\\n    },\\n\\n    /**\\n     * Get the angle between this point and another point, in radians\\n     * @param {Point} b the other point\\n     * @return {Number} angle\\n     */\\n    angleWith: function(b) {\\n        return this.angleWithSep(b.x, b.y);\\n    },\\n\\n    /*\\n     * Find the angle of the two vectors, solving the formula for\\n     * the cross product a x b = |a||b|sin(θ) for θ.\\n     * @param {Number} x the x-coordinate\\n     * @param {Number} y the y-coordinate\\n     * @return {Number} the angle in radians\\n     */\\n    angleWithSep: function(x, y) {\\n        return Math.atan2(\\n            this.x * y - this.y * x,\\n            this.x * x + this.y * y);\\n    },\\n\\n    _matMult: function(m) {\\n        var x = m[0] * this.x + m[1] * this.y,\\n            y = m[2] * this.x + m[3] * this.y;\\n        this.x = x;\\n        this.y = y;\\n        return this;\\n    },\\n\\n    _add: function(p) {\\n        this.x += p.x;\\n        this.y += p.y;\\n        return this;\\n    },\\n\\n    _sub: function(p) {\\n        this.x -= p.x;\\n        this.y -= p.y;\\n        return this;\\n    },\\n\\n    _mult: function(k) {\\n        this.x *= k;\\n        this.y *= k;\\n        return this;\\n    },\\n\\n    _div: function(k) {\\n        this.x /= k;\\n        this.y /= k;\\n        return this;\\n    },\\n\\n    _multByPoint: function(p) {\\n        this.x *= p.x;\\n        this.y *= p.y;\\n        return this;\\n    },\\n\\n    _divByPoint: function(p) {\\n        this.x /= p.x;\\n        this.y /= p.y;\\n        return this;\\n    },\\n\\n    _unit: function() {\\n        this._div(this.mag());\\n        return this;\\n    },\\n\\n    _perp: function() {\\n        var y = this.y;\\n        this.y = this.x;\\n        this.x = -y;\\n        return this;\\n    },\\n\\n    _rotate: function(angle) {\\n        var cos = Math.cos(angle),\\n            sin = Math.sin(angle),\\n            x = cos * this.x - sin * this.y,\\n            y = sin * this.x + cos * this.y;\\n        this.x = x;\\n        this.y = y;\\n        return this;\\n    },\\n\\n    _rotateAround: function(angle, p) {\\n        var cos = Math.cos(angle),\\n            sin = Math.sin(angle),\\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\\n        this.x = x;\\n        this.y = y;\\n        return this;\\n    },\\n\\n    _round: function() {\\n        this.x = Math.round(this.x);\\n        this.y = Math.round(this.y);\\n        return this;\\n    }\\n};\\n\\n/**\\n * Construct a point from an array if necessary, otherwise if the input\\n * is already a Point, or an unknown type, return it unchanged\\n * @param {Array<Number>|Point|*} a any kind of input value\\n * @return {Point} constructed point, or passed-through value.\\n * @example\\n * // this\\n * var point = Point.convert([0, 1]);\\n * // is equivalent to\\n * var point = new Point(0, 1);\\n */\\nPoint.convert = function (a) {\\n    if (a instanceof Point) {\\n        return a;\\n    }\\n    if (Array.isArray(a)) {\\n        return new Point(a[0], a[1]);\\n    }\\n    return a;\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/@mapbox/vector-tile/index.js\\\":\\n/*!***************************************************!*\\\\\\n  !*** ./node_modules/@mapbox/vector-tile/index.js ***!\\n  \\\\***************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nmodule.exports.VectorTile = __webpack_require__(/*! ./lib/vectortile.js */ \\\"./node_modules/@mapbox/vector-tile/lib/vectortile.js\\\");\\nmodule.exports.VectorTileFeature = __webpack_require__(/*! ./lib/vectortilefeature.js */ \\\"./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js\\\");\\nmodule.exports.VectorTileLayer = __webpack_require__(/*! ./lib/vectortilelayer.js */ \\\"./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js\\\");\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/@mapbox/vector-tile/lib/vectortile.js\\\":\\n/*!************************************************************!*\\\\\\n  !*** ./node_modules/@mapbox/vector-tile/lib/vectortile.js ***!\\n  \\\\************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar VectorTileLayer = __webpack_require__(/*! ./vectortilelayer */ \\\"./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js\\\");\\n\\nmodule.exports = VectorTile;\\n\\nfunction VectorTile(pbf, end) {\\n    this.layers = pbf.readFields(readTile, {}, end);\\n}\\n\\nfunction readTile(tag, layers, pbf) {\\n    if (tag === 3) {\\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\\n        if (layer.length) layers[layer.name] = layer;\\n    }\\n}\\n\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js\\\":\\n/*!*******************************************************************!*\\\\\\n  !*** ./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js ***!\\n  \\\\*******************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar Point = __webpack_require__(/*! @mapbox/point-geometry */ \\\"./node_modules/@mapbox/point-geometry/index.js\\\");\\n\\nmodule.exports = VectorTileFeature;\\n\\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\\n    // Public\\n    this.properties = {};\\n    this.extent = extent;\\n    this.type = 0;\\n\\n    // Private\\n    this._pbf = pbf;\\n    this._geometry = -1;\\n    this._keys = keys;\\n    this._values = values;\\n\\n    pbf.readFields(readFeature, this, end);\\n}\\n\\nfunction readFeature(tag, feature, pbf) {\\n    if (tag == 1) feature.id = pbf.readVarint();\\n    else if (tag == 2) readTag(pbf, feature);\\n    else if (tag == 3) feature.type = pbf.readVarint();\\n    else if (tag == 4) feature._geometry = pbf.pos;\\n}\\n\\nfunction readTag(pbf, feature) {\\n    var end = pbf.readVarint() + pbf.pos;\\n\\n    while (pbf.pos < end) {\\n        var key = feature._keys[pbf.readVarint()],\\n            value = feature._values[pbf.readVarint()];\\n        feature.properties[key] = value;\\n    }\\n}\\n\\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\\n\\nVectorTileFeature.prototype.loadGeometry = function() {\\n    var pbf = this._pbf;\\n    pbf.pos = this._geometry;\\n\\n    var end = pbf.readVarint() + pbf.pos,\\n        cmd = 1,\\n        length = 0,\\n        x = 0,\\n        y = 0,\\n        lines = [],\\n        line;\\n\\n    while (pbf.pos < end) {\\n        if (length <= 0) {\\n            var cmdLen = pbf.readVarint();\\n            cmd = cmdLen & 0x7;\\n            length = cmdLen >> 3;\\n        }\\n\\n        length--;\\n\\n        if (cmd === 1 || cmd === 2) {\\n            x += pbf.readSVarint();\\n            y += pbf.readSVarint();\\n\\n            if (cmd === 1) { // moveTo\\n                if (line) lines.push(line);\\n                line = [];\\n            }\\n\\n            line.push(new Point(x, y));\\n\\n        } else if (cmd === 7) {\\n\\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\\n            if (line) {\\n                line.push(line[0].clone()); // closePolygon\\n            }\\n\\n        } else {\\n            throw new Error('unknown command ' + cmd);\\n        }\\n    }\\n\\n    if (line) lines.push(line);\\n\\n    return lines;\\n};\\n\\nVectorTileFeature.prototype.bbox = function() {\\n    var pbf = this._pbf;\\n    pbf.pos = this._geometry;\\n\\n    var end = pbf.readVarint() + pbf.pos,\\n        cmd = 1,\\n        length = 0,\\n        x = 0,\\n        y = 0,\\n        x1 = Infinity,\\n        x2 = -Infinity,\\n        y1 = Infinity,\\n        y2 = -Infinity;\\n\\n    while (pbf.pos < end) {\\n        if (length <= 0) {\\n            var cmdLen = pbf.readVarint();\\n            cmd = cmdLen & 0x7;\\n            length = cmdLen >> 3;\\n        }\\n\\n        length--;\\n\\n        if (cmd === 1 || cmd === 2) {\\n            x += pbf.readSVarint();\\n            y += pbf.readSVarint();\\n            if (x < x1) x1 = x;\\n            if (x > x2) x2 = x;\\n            if (y < y1) y1 = y;\\n            if (y > y2) y2 = y;\\n\\n        } else if (cmd !== 7) {\\n            throw new Error('unknown command ' + cmd);\\n        }\\n    }\\n\\n    return [x1, y1, x2, y2];\\n};\\n\\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\\n    var size = this.extent * Math.pow(2, z),\\n        x0 = this.extent * x,\\n        y0 = this.extent * y,\\n        coords = this.loadGeometry(),\\n        type = VectorTileFeature.types[this.type],\\n        i, j;\\n\\n    function project(line) {\\n        for (var j = 0; j < line.length; j++) {\\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\\n            line[j] = [\\n                (p.x + x0) * 360 / size - 180,\\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\\n            ];\\n        }\\n    }\\n\\n    switch (this.type) {\\n    case 1:\\n        var points = [];\\n        for (i = 0; i < coords.length; i++) {\\n            points[i] = coords[i][0];\\n        }\\n        coords = points;\\n        project(coords);\\n        break;\\n\\n    case 2:\\n        for (i = 0; i < coords.length; i++) {\\n            project(coords[i]);\\n        }\\n        break;\\n\\n    case 3:\\n        coords = classifyRings(coords);\\n        for (i = 0; i < coords.length; i++) {\\n            for (j = 0; j < coords[i].length; j++) {\\n                project(coords[i][j]);\\n            }\\n        }\\n        break;\\n    }\\n\\n    if (coords.length === 1) {\\n        coords = coords[0];\\n    } else {\\n        type = 'Multi' + type;\\n    }\\n\\n    var result = {\\n        type: \\\"Feature\\\",\\n        geometry: {\\n            type: type,\\n            coordinates: coords\\n        },\\n        properties: this.properties\\n    };\\n\\n    if ('id' in this) {\\n        result.id = this.id;\\n    }\\n\\n    return result;\\n};\\n\\n// classifies an array of rings into polygons with outer rings and holes\\n\\nfunction classifyRings(rings) {\\n    var len = rings.length;\\n\\n    if (len <= 1) return [rings];\\n\\n    var polygons = [],\\n        polygon,\\n        ccw;\\n\\n    for (var i = 0; i < len; i++) {\\n        var area = signedArea(rings[i]);\\n        if (area === 0) continue;\\n\\n        if (ccw === undefined) ccw = area < 0;\\n\\n        if (ccw === area < 0) {\\n            if (polygon) polygons.push(polygon);\\n            polygon = [rings[i]];\\n\\n        } else {\\n            polygon.push(rings[i]);\\n        }\\n    }\\n    if (polygon) polygons.push(polygon);\\n\\n    return polygons;\\n}\\n\\nfunction signedArea(ring) {\\n    var sum = 0;\\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\\n        p1 = ring[i];\\n        p2 = ring[j];\\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\\n    }\\n    return sum;\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js\\\":\\n/*!*****************************************************************!*\\\\\\n  !*** ./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js ***!\\n  \\\\*****************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar VectorTileFeature = __webpack_require__(/*! ./vectortilefeature.js */ \\\"./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js\\\");\\n\\nmodule.exports = VectorTileLayer;\\n\\nfunction VectorTileLayer(pbf, end) {\\n    // Public\\n    this.version = 1;\\n    this.name = null;\\n    this.extent = 4096;\\n    this.length = 0;\\n\\n    // Private\\n    this._pbf = pbf;\\n    this._keys = [];\\n    this._values = [];\\n    this._features = [];\\n\\n    pbf.readFields(readLayer, this, end);\\n\\n    this.length = this._features.length;\\n}\\n\\nfunction readLayer(tag, layer, pbf) {\\n    if (tag === 15) layer.version = pbf.readVarint();\\n    else if (tag === 1) layer.name = pbf.readString();\\n    else if (tag === 5) layer.extent = pbf.readVarint();\\n    else if (tag === 2) layer._features.push(pbf.pos);\\n    else if (tag === 3) layer._keys.push(pbf.readString());\\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\\n}\\n\\nfunction readValueMessage(pbf) {\\n    var value = null,\\n        end = pbf.readVarint() + pbf.pos;\\n\\n    while (pbf.pos < end) {\\n        var tag = pbf.readVarint() >> 3;\\n\\n        value = tag === 1 ? pbf.readString() :\\n            tag === 2 ? pbf.readFloat() :\\n            tag === 3 ? pbf.readDouble() :\\n            tag === 4 ? pbf.readVarint64() :\\n            tag === 5 ? pbf.readVarint() :\\n            tag === 6 ? pbf.readSVarint() :\\n            tag === 7 ? pbf.readBoolean() : null;\\n    }\\n\\n    return value;\\n}\\n\\n// return feature `i` from this layer as a `VectorTileFeature`\\nVectorTileLayer.prototype.feature = function(i) {\\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\\n\\n    this._pbf.pos = this._features[i];\\n\\n    var end = this._pbf.readVarint() + this._pbf.pos;\\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/earcut/src/earcut.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./node_modules/earcut/src/earcut.js ***!\\n  \\\\*******************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = earcut;\\nmodule.exports.default = earcut;\\n\\nfunction earcut(data, holeIndices, dim) {\\n\\n    dim = dim || 2;\\n\\n    var hasHoles = holeIndices && holeIndices.length,\\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\\n        outerNode = linkedList(data, 0, outerLen, dim, true),\\n        triangles = [];\\n\\n    if (!outerNode) return triangles;\\n\\n    var minX, minY, maxX, maxY, x, y, invSize;\\n\\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\\n\\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\\n    if (data.length > 80 * dim) {\\n        minX = maxX = data[0];\\n        minY = maxY = data[1];\\n\\n        for (var i = dim; i < outerLen; i += dim) {\\n            x = data[i];\\n            y = data[i + 1];\\n            if (x < minX) minX = x;\\n            if (y < minY) minY = y;\\n            if (x > maxX) maxX = x;\\n            if (y > maxY) maxY = y;\\n        }\\n\\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\\n        invSize = Math.max(maxX - minX, maxY - minY);\\n        invSize = invSize !== 0 ? 1 / invSize : 0;\\n    }\\n\\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\\n\\n    return triangles;\\n}\\n\\n// create a circular doubly linked list from polygon points in the specified winding order\\nfunction linkedList(data, start, end, dim, clockwise) {\\n    var i, last;\\n\\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\\n    } else {\\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\\n    }\\n\\n    if (last && equals(last, last.next)) {\\n        removeNode(last);\\n        last = last.next;\\n    }\\n\\n    return last;\\n}\\n\\n// eliminate colinear or duplicate points\\nfunction filterPoints(start, end) {\\n    if (!start) return start;\\n    if (!end) end = start;\\n\\n    var p = start,\\n        again;\\n    do {\\n        again = false;\\n\\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\\n            removeNode(p);\\n            p = end = p.prev;\\n            if (p === p.next) break;\\n            again = true;\\n\\n        } else {\\n            p = p.next;\\n        }\\n    } while (again || p !== end);\\n\\n    return end;\\n}\\n\\n// main ear slicing loop which triangulates a polygon (given as a linked list)\\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\\n    if (!ear) return;\\n\\n    // interlink polygon nodes in z-order\\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\\n\\n    var stop = ear,\\n        prev, next;\\n\\n    // iterate through ears, slicing them one by one\\n    while (ear.prev !== ear.next) {\\n        prev = ear.prev;\\n        next = ear.next;\\n\\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\\n            // cut off the triangle\\n            triangles.push(prev.i / dim);\\n            triangles.push(ear.i / dim);\\n            triangles.push(next.i / dim);\\n\\n            removeNode(ear);\\n\\n            // skipping the next vertice leads to less sliver triangles\\n            ear = next.next;\\n            stop = next.next;\\n\\n            continue;\\n        }\\n\\n        ear = next;\\n\\n        // if we looped through the whole remaining polygon and can't find any more ears\\n        if (ear === stop) {\\n            // try filtering points and slicing again\\n            if (!pass) {\\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\\n\\n            // if this didn't work, try curing all small self-intersections locally\\n            } else if (pass === 1) {\\n                ear = cureLocalIntersections(ear, triangles, dim);\\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\\n\\n            // as a last resort, try splitting the remaining polygon into two\\n            } else if (pass === 2) {\\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\\n            }\\n\\n            break;\\n        }\\n    }\\n}\\n\\n// check whether a polygon node forms a valid ear with adjacent nodes\\nfunction isEar(ear) {\\n    var a = ear.prev,\\n        b = ear,\\n        c = ear.next;\\n\\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\\n\\n    // now make sure we don't have other points inside the potential ear\\n    var p = ear.next.next;\\n\\n    while (p !== ear.prev) {\\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\\n            area(p.prev, p, p.next) >= 0) return false;\\n        p = p.next;\\n    }\\n\\n    return true;\\n}\\n\\nfunction isEarHashed(ear, minX, minY, invSize) {\\n    var a = ear.prev,\\n        b = ear,\\n        c = ear.next;\\n\\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\\n\\n    // triangle bbox; min & max are calculated like this for speed\\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\\n\\n    // z-order range for the current triangle bbox;\\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\\n\\n    var p = ear.prevZ,\\n        n = ear.nextZ;\\n\\n    // look for points inside the triangle in both directions\\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\\n        if (p !== ear.prev && p !== ear.next &&\\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\\n            area(p.prev, p, p.next) >= 0) return false;\\n        p = p.prevZ;\\n\\n        if (n !== ear.prev && n !== ear.next &&\\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\\n            area(n.prev, n, n.next) >= 0) return false;\\n        n = n.nextZ;\\n    }\\n\\n    // look for remaining points in decreasing z-order\\n    while (p && p.z >= minZ) {\\n        if (p !== ear.prev && p !== ear.next &&\\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\\n            area(p.prev, p, p.next) >= 0) return false;\\n        p = p.prevZ;\\n    }\\n\\n    // look for remaining points in increasing z-order\\n    while (n && n.z <= maxZ) {\\n        if (n !== ear.prev && n !== ear.next &&\\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\\n            area(n.prev, n, n.next) >= 0) return false;\\n        n = n.nextZ;\\n    }\\n\\n    return true;\\n}\\n\\n// go through all polygon nodes and cure small local self-intersections\\nfunction cureLocalIntersections(start, triangles, dim) {\\n    var p = start;\\n    do {\\n        var a = p.prev,\\n            b = p.next.next;\\n\\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\\n\\n            triangles.push(a.i / dim);\\n            triangles.push(p.i / dim);\\n            triangles.push(b.i / dim);\\n\\n            // remove two nodes involved\\n            removeNode(p);\\n            removeNode(p.next);\\n\\n            p = start = b;\\n        }\\n        p = p.next;\\n    } while (p !== start);\\n\\n    return p;\\n}\\n\\n// try splitting polygon into two and triangulate them independently\\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\\n    // look for a valid diagonal that divides the polygon into two\\n    var a = start;\\n    do {\\n        var b = a.next.next;\\n        while (b !== a.prev) {\\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\\n                // split the polygon in two by the diagonal\\n                var c = splitPolygon(a, b);\\n\\n                // filter colinear points around the cuts\\n                a = filterPoints(a, a.next);\\n                c = filterPoints(c, c.next);\\n\\n                // run earcut on each half\\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\\n                return;\\n            }\\n            b = b.next;\\n        }\\n        a = a.next;\\n    } while (a !== start);\\n}\\n\\n// link every hole into the outer loop, producing a single-ring polygon without holes\\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\\n    var queue = [],\\n        i, len, start, end, list;\\n\\n    for (i = 0, len = holeIndices.length; i < len; i++) {\\n        start = holeIndices[i] * dim;\\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\\n        list = linkedList(data, start, end, dim, false);\\n        if (list === list.next) list.steiner = true;\\n        queue.push(getLeftmost(list));\\n    }\\n\\n    queue.sort(compareX);\\n\\n    // process holes from left to right\\n    for (i = 0; i < queue.length; i++) {\\n        eliminateHole(queue[i], outerNode);\\n        outerNode = filterPoints(outerNode, outerNode.next);\\n    }\\n\\n    return outerNode;\\n}\\n\\nfunction compareX(a, b) {\\n    return a.x - b.x;\\n}\\n\\n// find a bridge between vertices that connects hole with an outer ring and and link it\\nfunction eliminateHole(hole, outerNode) {\\n    outerNode = findHoleBridge(hole, outerNode);\\n    if (outerNode) {\\n        var b = splitPolygon(outerNode, hole);\\n        filterPoints(b, b.next);\\n    }\\n}\\n\\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\\nfunction findHoleBridge(hole, outerNode) {\\n    var p = outerNode,\\n        hx = hole.x,\\n        hy = hole.y,\\n        qx = -Infinity,\\n        m;\\n\\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\\n    // segment's endpoint with lesser x will be potential connection point\\n    do {\\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\\n            if (x <= hx && x > qx) {\\n                qx = x;\\n                if (x === hx) {\\n                    if (hy === p.y) return p;\\n                    if (hy === p.next.y) return p.next;\\n                }\\n                m = p.x < p.next.x ? p : p.next;\\n            }\\n        }\\n        p = p.next;\\n    } while (p !== outerNode);\\n\\n    if (!m) return null;\\n\\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\\n\\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\\n    // if there are no points found, we have a valid connection;\\n    // otherwise choose the point of the minimum angle with the ray as connection point\\n\\n    var stop = m,\\n        mx = m.x,\\n        my = m.y,\\n        tanMin = Infinity,\\n        tan;\\n\\n    p = m.next;\\n\\n    while (p !== stop) {\\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\\n\\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\\n\\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\\n                m = p;\\n                tanMin = tan;\\n            }\\n        }\\n\\n        p = p.next;\\n    }\\n\\n    return m;\\n}\\n\\n// interlink polygon nodes in z-order\\nfunction indexCurve(start, minX, minY, invSize) {\\n    var p = start;\\n    do {\\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\\n        p.prevZ = p.prev;\\n        p.nextZ = p.next;\\n        p = p.next;\\n    } while (p !== start);\\n\\n    p.prevZ.nextZ = null;\\n    p.prevZ = null;\\n\\n    sortLinked(p);\\n}\\n\\n// Simon Tatham's linked list merge sort algorithm\\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\\nfunction sortLinked(list) {\\n    var i, p, q, e, tail, numMerges, pSize, qSize,\\n        inSize = 1;\\n\\n    do {\\n        p = list;\\n        list = null;\\n        tail = null;\\n        numMerges = 0;\\n\\n        while (p) {\\n            numMerges++;\\n            q = p;\\n            pSize = 0;\\n            for (i = 0; i < inSize; i++) {\\n                pSize++;\\n                q = q.nextZ;\\n                if (!q) break;\\n            }\\n            qSize = inSize;\\n\\n            while (pSize > 0 || (qSize > 0 && q)) {\\n\\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\\n                    e = p;\\n                    p = p.nextZ;\\n                    pSize--;\\n                } else {\\n                    e = q;\\n                    q = q.nextZ;\\n                    qSize--;\\n                }\\n\\n                if (tail) tail.nextZ = e;\\n                else list = e;\\n\\n                e.prevZ = tail;\\n                tail = e;\\n            }\\n\\n            p = q;\\n        }\\n\\n        tail.nextZ = null;\\n        inSize *= 2;\\n\\n    } while (numMerges > 1);\\n\\n    return list;\\n}\\n\\n// z-order of a point given coords and inverse of the longer side of data bbox\\nfunction zOrder(x, y, minX, minY, invSize) {\\n    // coords are transformed into non-negative 15-bit integer range\\n    x = 32767 * (x - minX) * invSize;\\n    y = 32767 * (y - minY) * invSize;\\n\\n    x = (x | (x << 8)) & 0x00FF00FF;\\n    x = (x | (x << 4)) & 0x0F0F0F0F;\\n    x = (x | (x << 2)) & 0x33333333;\\n    x = (x | (x << 1)) & 0x55555555;\\n\\n    y = (y | (y << 8)) & 0x00FF00FF;\\n    y = (y | (y << 4)) & 0x0F0F0F0F;\\n    y = (y | (y << 2)) & 0x33333333;\\n    y = (y | (y << 1)) & 0x55555555;\\n\\n    return x | (y << 1);\\n}\\n\\n// find the leftmost node of a polygon ring\\nfunction getLeftmost(start) {\\n    var p = start,\\n        leftmost = start;\\n    do {\\n        if (p.x < leftmost.x) leftmost = p;\\n        p = p.next;\\n    } while (p !== start);\\n\\n    return leftmost;\\n}\\n\\n// check if a point lies within a convex triangle\\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\\n}\\n\\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\\nfunction isValidDiagonal(a, b) {\\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\\n}\\n\\n// signed area of a triangle\\nfunction area(p, q, r) {\\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\\n}\\n\\n// check if two points are equal\\nfunction equals(p1, p2) {\\n    return p1.x === p2.x && p1.y === p2.y;\\n}\\n\\n// check if two segments intersect\\nfunction intersects(p1, q1, p2, q2) {\\n    if ((equals(p1, q1) && equals(p2, q2)) ||\\n        (equals(p1, q2) && equals(p2, q1))) return true;\\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\\n}\\n\\n// check if a polygon diagonal intersects any polygon segments\\nfunction intersectsPolygon(a, b) {\\n    var p = a;\\n    do {\\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\\n                intersects(p, p.next, a, b)) return true;\\n        p = p.next;\\n    } while (p !== a);\\n\\n    return false;\\n}\\n\\n// check if a polygon diagonal is locally inside the polygon\\nfunction locallyInside(a, b) {\\n    return area(a.prev, a, a.next) < 0 ?\\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\\n}\\n\\n// check if the middle point of a polygon diagonal is inside the polygon\\nfunction middleInside(a, b) {\\n    var p = a,\\n        inside = false,\\n        px = (a.x + b.x) / 2,\\n        py = (a.y + b.y) / 2;\\n    do {\\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\\n            inside = !inside;\\n        p = p.next;\\n    } while (p !== a);\\n\\n    return inside;\\n}\\n\\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\\nfunction splitPolygon(a, b) {\\n    var a2 = new Node(a.i, a.x, a.y),\\n        b2 = new Node(b.i, b.x, b.y),\\n        an = a.next,\\n        bp = b.prev;\\n\\n    a.next = b;\\n    b.prev = a;\\n\\n    a2.next = an;\\n    an.prev = a2;\\n\\n    b2.next = a2;\\n    a2.prev = b2;\\n\\n    bp.next = b2;\\n    b2.prev = bp;\\n\\n    return b2;\\n}\\n\\n// create a node and optionally link it with previous one (in a circular doubly linked list)\\nfunction insertNode(i, x, y, last) {\\n    var p = new Node(i, x, y);\\n\\n    if (!last) {\\n        p.prev = p;\\n        p.next = p;\\n\\n    } else {\\n        p.next = last.next;\\n        p.prev = last;\\n        last.next.prev = p;\\n        last.next = p;\\n    }\\n    return p;\\n}\\n\\nfunction removeNode(p) {\\n    p.next.prev = p.prev;\\n    p.prev.next = p.next;\\n\\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\\n}\\n\\nfunction Node(i, x, y) {\\n    // vertice index in coordinates array\\n    this.i = i;\\n\\n    // vertex coordinates\\n    this.x = x;\\n    this.y = y;\\n\\n    // previous and next vertice nodes in a polygon ring\\n    this.prev = null;\\n    this.next = null;\\n\\n    // z-order curve value\\n    this.z = null;\\n\\n    // previous and next nodes in z-order\\n    this.prevZ = null;\\n    this.nextZ = null;\\n\\n    // indicates whether this is a steiner point\\n    this.steiner = false;\\n}\\n\\n// return a percentage difference between the polygon area and its triangulation area;\\n// used to verify correctness of triangulation\\nearcut.deviation = function (data, holeIndices, dim, triangles) {\\n    var hasHoles = holeIndices && holeIndices.length;\\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\\n\\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\\n    if (hasHoles) {\\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\\n            var start = holeIndices[i] * dim;\\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\\n        }\\n    }\\n\\n    var trianglesArea = 0;\\n    for (i = 0; i < triangles.length; i += 3) {\\n        var a = triangles[i] * dim;\\n        var b = triangles[i + 1] * dim;\\n        var c = triangles[i + 2] * dim;\\n        trianglesArea += Math.abs(\\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\\n    }\\n\\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\\n};\\n\\nfunction signedArea(data, start, end, dim) {\\n    var sum = 0;\\n    for (var i = start, j = end - dim; i < end; i += dim) {\\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\\n        j = i;\\n    }\\n    return sum;\\n}\\n\\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\\nearcut.flatten = function (data) {\\n    var dim = data[0][0].length,\\n        result = {vertices: [], holes: [], dimensions: dim},\\n        holeIndex = 0;\\n\\n    for (var i = 0; i < data.length; i++) {\\n        for (var j = 0; j < data[i].length; j++) {\\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\\n        }\\n        if (i > 0) {\\n            holeIndex += data[i - 1].length;\\n            result.holes.push(holeIndex);\\n        }\\n    }\\n    return result;\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix.js\\\":\\n/*!*************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix.js ***!\\n  \\\\*************************************************/\\n/*! exports provided: glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _gl_matrix_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gl-matrix/common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"glMatrix\\\", function() { return _gl_matrix_common_js__WEBPACK_IMPORTED_MODULE_0__; });\\n/* harmony import */ var _gl_matrix_mat2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gl-matrix/mat2.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat2.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"mat2\\\", function() { return _gl_matrix_mat2_js__WEBPACK_IMPORTED_MODULE_1__; });\\n/* harmony import */ var _gl_matrix_mat2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gl-matrix/mat2d.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat2d.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"mat2d\\\", function() { return _gl_matrix_mat2d_js__WEBPACK_IMPORTED_MODULE_2__; });\\n/* harmony import */ var _gl_matrix_mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gl-matrix/mat3.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat3.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"mat3\\\", function() { return _gl_matrix_mat3_js__WEBPACK_IMPORTED_MODULE_3__; });\\n/* harmony import */ var _gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gl-matrix/mat4.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat4.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"mat4\\\", function() { return _gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_4__; });\\n/* harmony import */ var _gl_matrix_quat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gl-matrix/quat.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/quat.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"quat\\\", function() { return _gl_matrix_quat_js__WEBPACK_IMPORTED_MODULE_5__; });\\n/* harmony import */ var _gl_matrix_quat2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gl-matrix/quat2.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/quat2.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"quat2\\\", function() { return _gl_matrix_quat2_js__WEBPACK_IMPORTED_MODULE_6__; });\\n/* harmony import */ var _gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gl-matrix/vec2.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec2.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"vec2\\\", function() { return _gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_7__; });\\n/* harmony import */ var _gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gl-matrix/vec3.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec3.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"vec3\\\", function() { return _gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_8__; });\\n/* harmony import */ var _gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gl-matrix/vec4.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec4.js\\\");\\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \\\"vec4\\\", function() { return _gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_9__; });\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\":\\n/*!********************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/common.js ***!\\n  \\\\********************************************************/\\n/*! exports provided: EPSILON, ARRAY_TYPE, RANDOM, setMatrixArrayType, toRadian, equals */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"EPSILON\\\", function() { return EPSILON; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARRAY_TYPE\\\", function() { return ARRAY_TYPE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"RANDOM\\\", function() { return RANDOM; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"setMatrixArrayType\\\", function() { return setMatrixArrayType; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"toRadian\\\", function() { return toRadian; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/**\\r\\n * Common utilities\\r\\n * @module glMatrix\\r\\n */\\r\\n\\r\\n// Configuration Constants\\r\\nvar EPSILON = 0.000001;\\r\\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\\r\\nvar RANDOM = Math.random;\\r\\n\\r\\n/**\\r\\n * Sets the type of array used when creating new vectors and matrices\\r\\n *\\r\\n * @param {Type} type Array type, such as Float32Array or Array\\r\\n */\\r\\nfunction setMatrixArrayType(type) {\\r\\n  ARRAY_TYPE = type;\\r\\n}\\r\\n\\r\\nvar degree = Math.PI / 180;\\r\\n\\r\\n/**\\r\\n * Convert Degree To Radian\\r\\n *\\r\\n * @param {Number} a Angle in Degrees\\r\\n */\\r\\nfunction toRadian(a) {\\r\\n  return a * degree;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Tests whether or not the arguments have approximately the same value, within an absolute\\r\\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\\r\\n * than or equal to 1.0, and a relative tolerance is used for larger values)\\r\\n *\\r\\n * @param {Number} a The first number to test.\\r\\n * @param {Number} b The second number to test.\\r\\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\\r\\n}\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat2.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/mat2.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, clone, copy, identity, fromValues, set, transpose, invert, adjoint, determinant, multiply, rotate, scale, fromRotation, fromScaling, str, frob, LDU, add, subtract, exactEquals, equals, multiplyScalar, multiplyScalarAndAdd, mul, sub */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transpose\\\", function() { return transpose; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"invert\\\", function() { return invert; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"adjoint\\\", function() { return adjoint; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"determinant\\\", function() { return determinant; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotate\\\", function() { return rotate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotation\\\", function() { return fromRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromScaling\\\", function() { return fromScaling; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"frob\\\", function() { return frob; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"LDU\\\", function() { return LDU; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalar\\\", function() { return multiplyScalar; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalarAndAdd\\\", function() { return multiplyScalarAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 2x2 Matrix\\r\\n * @module mat2\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new identity mat2\\r\\n *\\r\\n * @returns {mat2} a new 2x2 matrix\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n  }\\r\\n  out[0] = 1;\\r\\n  out[3] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new mat2 initialized with values from an existing matrix\\r\\n *\\r\\n * @param {mat2} a matrix to clone\\r\\n * @returns {mat2} a new 2x2 matrix\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one mat2 to another\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the source matrix\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set a mat2 to the identity matrix\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction identity(out) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create a new mat2 with the given values\\r\\n *\\r\\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\\r\\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\\r\\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\\r\\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\\r\\n * @returns {mat2} out A new 2x2 matrix\\r\\n */\\r\\nfunction fromValues(m00, m01, m10, m11) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  out[0] = m00;\\r\\n  out[1] = m01;\\r\\n  out[2] = m10;\\r\\n  out[3] = m11;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a mat2 to the given values\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\\r\\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\\r\\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\\r\\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction set(out, m00, m01, m10, m11) {\\r\\n  out[0] = m00;\\r\\n  out[1] = m01;\\r\\n  out[2] = m10;\\r\\n  out[3] = m11;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transpose the values of a mat2\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the source matrix\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction transpose(out, a) {\\r\\n  // If we are transposing ourselves we can skip a few steps but have to cache\\r\\n  // some values\\r\\n  if (out === a) {\\r\\n    var a1 = a[1];\\r\\n    out[1] = a[2];\\r\\n    out[2] = a1;\\r\\n  } else {\\r\\n    out[0] = a[0];\\r\\n    out[1] = a[2];\\r\\n    out[2] = a[1];\\r\\n    out[3] = a[3];\\r\\n  }\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Inverts a mat2\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the source matrix\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction invert(out, a) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n\\r\\n  // Calculate the determinant\\r\\n  var det = a0 * a3 - a2 * a1;\\r\\n\\r\\n  if (!det) {\\r\\n    return null;\\r\\n  }\\r\\n  det = 1.0 / det;\\r\\n\\r\\n  out[0] = a3 * det;\\r\\n  out[1] = -a1 * det;\\r\\n  out[2] = -a2 * det;\\r\\n  out[3] = a0 * det;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the adjugate of a mat2\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the source matrix\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction adjoint(out, a) {\\r\\n  // Caching this value is nessecary if out == a\\r\\n  var a0 = a[0];\\r\\n  out[0] = a[3];\\r\\n  out[1] = -a[1];\\r\\n  out[2] = -a[2];\\r\\n  out[3] = a0;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the determinant of a mat2\\r\\n *\\r\\n * @param {mat2} a the source matrix\\r\\n * @returns {Number} determinant of a\\r\\n */\\r\\nfunction determinant(a) {\\r\\n  return a[0] * a[3] - a[2] * a[1];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two mat2's\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the first operand\\r\\n * @param {mat2} b the second operand\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3];\\r\\n  out[0] = a0 * b0 + a2 * b1;\\r\\n  out[1] = a1 * b0 + a3 * b1;\\r\\n  out[2] = a0 * b2 + a2 * b3;\\r\\n  out[3] = a1 * b2 + a3 * b3;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a mat2 by the given angle\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction rotate(out, a, rad) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n  out[0] = a0 * c + a2 * s;\\r\\n  out[1] = a1 * c + a3 * s;\\r\\n  out[2] = a0 * -s + a2 * c;\\r\\n  out[3] = a1 * -s + a3 * c;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Scales the mat2 by the dimensions in the given vec2\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the matrix to rotate\\r\\n * @param {vec2} v the vec2 to scale the matrix by\\r\\n * @returns {mat2} out\\r\\n **/\\r\\nfunction scale(out, a, v) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var v0 = v[0],\\r\\n      v1 = v[1];\\r\\n  out[0] = a0 * v0;\\r\\n  out[1] = a1 * v0;\\r\\n  out[2] = a2 * v1;\\r\\n  out[3] = a3 * v1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a given angle\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat2.identity(dest);\\r\\n *     mat2.rotate(dest, dest, rad);\\r\\n *\\r\\n * @param {mat2} out mat2 receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction fromRotation(out, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n  out[0] = c;\\r\\n  out[1] = s;\\r\\n  out[2] = -s;\\r\\n  out[3] = c;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector scaling\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat2.identity(dest);\\r\\n *     mat2.scale(dest, dest, vec);\\r\\n *\\r\\n * @param {mat2} out mat2 receiving operation result\\r\\n * @param {vec2} v Scaling vector\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction fromScaling(out, v) {\\r\\n  out[0] = v[0];\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = v[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a mat2\\r\\n *\\r\\n * @param {mat2} a matrix to represent as a string\\r\\n * @returns {String} string representation of the matrix\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns Frobenius norm of a mat2\\r\\n *\\r\\n * @param {mat2} a the matrix to calculate Frobenius norm of\\r\\n * @returns {Number} Frobenius norm\\r\\n */\\r\\nfunction frob(a) {\\r\\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\\r\\n * @param {mat2} L the lower triangular matrix\\r\\n * @param {mat2} D the diagonal matrix\\r\\n * @param {mat2} U the upper triangular matrix\\r\\n * @param {mat2} a the input matrix to factorize\\r\\n */\\r\\n\\r\\nfunction LDU(L, D, U, a) {\\r\\n  L[2] = a[2] / a[0];\\r\\n  U[0] = a[0];\\r\\n  U[1] = a[1];\\r\\n  U[3] = a[3] - L[2] * U[1];\\r\\n  return [L, D, U];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat2's\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the first operand\\r\\n * @param {mat2} b the second operand\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  out[3] = a[3] + b[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts matrix b from matrix a\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the first operand\\r\\n * @param {mat2} b the second operand\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  out[2] = a[2] - b[2];\\r\\n  out[3] = a[3] - b[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {mat2} a The first matrix.\\r\\n * @param {mat2} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {mat2} a The first matrix.\\r\\n * @param {mat2} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiply each element of the matrix by a scalar.\\r\\n *\\r\\n * @param {mat2} out the receiving matrix\\r\\n * @param {mat2} a the matrix to scale\\r\\n * @param {Number} b amount to scale the matrix's elements by\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction multiplyScalar(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  out[3] = a[3] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\\r\\n *\\r\\n * @param {mat2} out the receiving vector\\r\\n * @param {mat2} a the first operand\\r\\n * @param {mat2} b the second operand\\r\\n * @param {Number} scale the amount to scale b's elements by before adding\\r\\n * @returns {mat2} out\\r\\n */\\r\\nfunction multiplyScalarAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  out[2] = a[2] + b[2] * scale;\\r\\n  out[3] = a[3] + b[3] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat2.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat2.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat2d.js\\\":\\n/*!*******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/mat2d.js ***!\\n  \\\\*******************************************************/\\n/*! exports provided: create, clone, copy, identity, fromValues, set, invert, determinant, multiply, rotate, scale, translate, fromRotation, fromScaling, fromTranslation, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"invert\\\", function() { return invert; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"determinant\\\", function() { return determinant; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotate\\\", function() { return rotate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"translate\\\", function() { return translate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotation\\\", function() { return fromRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromScaling\\\", function() { return fromScaling; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromTranslation\\\", function() { return fromTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"frob\\\", function() { return frob; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalar\\\", function() { return multiplyScalar; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalarAndAdd\\\", function() { return multiplyScalarAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 2x3 Matrix\\r\\n * @module mat2d\\r\\n *\\r\\n * @description\\r\\n * A mat2d contains six elements defined as:\\r\\n * <pre>\\r\\n * [a, c, tx,\\r\\n *  b, d, ty]\\r\\n * </pre>\\r\\n * This is a short form for the 3x3 matrix:\\r\\n * <pre>\\r\\n * [a, c, tx,\\r\\n *  b, d, ty,\\r\\n *  0, 0, 1]\\r\\n * </pre>\\r\\n * The last row is ignored so the array is shorter and operations are faster.\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new identity mat2d\\r\\n *\\r\\n * @returns {mat2d} a new 2x3 matrix\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](6);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n    out[4] = 0;\\r\\n    out[5] = 0;\\r\\n  }\\r\\n  out[0] = 1;\\r\\n  out[3] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new mat2d initialized with values from an existing matrix\\r\\n *\\r\\n * @param {mat2d} a matrix to clone\\r\\n * @returns {mat2d} a new 2x3 matrix\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](6);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one mat2d to another\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the source matrix\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set a mat2d to the identity matrix\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction identity(out) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 1;\\r\\n  out[4] = 0;\\r\\n  out[5] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create a new mat2d with the given values\\r\\n *\\r\\n * @param {Number} a Component A (index 0)\\r\\n * @param {Number} b Component B (index 1)\\r\\n * @param {Number} c Component C (index 2)\\r\\n * @param {Number} d Component D (index 3)\\r\\n * @param {Number} tx Component TX (index 4)\\r\\n * @param {Number} ty Component TY (index 5)\\r\\n * @returns {mat2d} A new mat2d\\r\\n */\\r\\nfunction fromValues(a, b, c, d, tx, ty) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](6);\\r\\n  out[0] = a;\\r\\n  out[1] = b;\\r\\n  out[2] = c;\\r\\n  out[3] = d;\\r\\n  out[4] = tx;\\r\\n  out[5] = ty;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a mat2d to the given values\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {Number} a Component A (index 0)\\r\\n * @param {Number} b Component B (index 1)\\r\\n * @param {Number} c Component C (index 2)\\r\\n * @param {Number} d Component D (index 3)\\r\\n * @param {Number} tx Component TX (index 4)\\r\\n * @param {Number} ty Component TY (index 5)\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction set(out, a, b, c, d, tx, ty) {\\r\\n  out[0] = a;\\r\\n  out[1] = b;\\r\\n  out[2] = c;\\r\\n  out[3] = d;\\r\\n  out[4] = tx;\\r\\n  out[5] = ty;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Inverts a mat2d\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the source matrix\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction invert(out, a) {\\r\\n  var aa = a[0],\\r\\n      ab = a[1],\\r\\n      ac = a[2],\\r\\n      ad = a[3];\\r\\n  var atx = a[4],\\r\\n      aty = a[5];\\r\\n\\r\\n  var det = aa * ad - ab * ac;\\r\\n  if (!det) {\\r\\n    return null;\\r\\n  }\\r\\n  det = 1.0 / det;\\r\\n\\r\\n  out[0] = ad * det;\\r\\n  out[1] = -ab * det;\\r\\n  out[2] = -ac * det;\\r\\n  out[3] = aa * det;\\r\\n  out[4] = (ac * aty - ad * atx) * det;\\r\\n  out[5] = (ab * atx - aa * aty) * det;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the determinant of a mat2d\\r\\n *\\r\\n * @param {mat2d} a the source matrix\\r\\n * @returns {Number} determinant of a\\r\\n */\\r\\nfunction determinant(a) {\\r\\n  return a[0] * a[3] - a[1] * a[2];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two mat2d's\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the first operand\\r\\n * @param {mat2d} b the second operand\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3],\\r\\n      b4 = b[4],\\r\\n      b5 = b[5];\\r\\n  out[0] = a0 * b0 + a2 * b1;\\r\\n  out[1] = a1 * b0 + a3 * b1;\\r\\n  out[2] = a0 * b2 + a2 * b3;\\r\\n  out[3] = a1 * b2 + a3 * b3;\\r\\n  out[4] = a0 * b4 + a2 * b5 + a4;\\r\\n  out[5] = a1 * b4 + a3 * b5 + a5;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a mat2d by the given angle\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction rotate(out, a, rad) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5];\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n  out[0] = a0 * c + a2 * s;\\r\\n  out[1] = a1 * c + a3 * s;\\r\\n  out[2] = a0 * -s + a2 * c;\\r\\n  out[3] = a1 * -s + a3 * c;\\r\\n  out[4] = a4;\\r\\n  out[5] = a5;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Scales the mat2d by the dimensions in the given vec2\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the matrix to translate\\r\\n * @param {vec2} v the vec2 to scale the matrix by\\r\\n * @returns {mat2d} out\\r\\n **/\\r\\nfunction scale(out, a, v) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5];\\r\\n  var v0 = v[0],\\r\\n      v1 = v[1];\\r\\n  out[0] = a0 * v0;\\r\\n  out[1] = a1 * v0;\\r\\n  out[2] = a2 * v1;\\r\\n  out[3] = a3 * v1;\\r\\n  out[4] = a4;\\r\\n  out[5] = a5;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Translates the mat2d by the dimensions in the given vec2\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the matrix to translate\\r\\n * @param {vec2} v the vec2 to translate the matrix by\\r\\n * @returns {mat2d} out\\r\\n **/\\r\\nfunction translate(out, a, v) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5];\\r\\n  var v0 = v[0],\\r\\n      v1 = v[1];\\r\\n  out[0] = a0;\\r\\n  out[1] = a1;\\r\\n  out[2] = a2;\\r\\n  out[3] = a3;\\r\\n  out[4] = a0 * v0 + a2 * v1 + a4;\\r\\n  out[5] = a1 * v0 + a3 * v1 + a5;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a given angle\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat2d.identity(dest);\\r\\n *     mat2d.rotate(dest, dest, rad);\\r\\n *\\r\\n * @param {mat2d} out mat2d receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction fromRotation(out, rad) {\\r\\n  var s = Math.sin(rad),\\r\\n      c = Math.cos(rad);\\r\\n  out[0] = c;\\r\\n  out[1] = s;\\r\\n  out[2] = -s;\\r\\n  out[3] = c;\\r\\n  out[4] = 0;\\r\\n  out[5] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector scaling\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat2d.identity(dest);\\r\\n *     mat2d.scale(dest, dest, vec);\\r\\n *\\r\\n * @param {mat2d} out mat2d receiving operation result\\r\\n * @param {vec2} v Scaling vector\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction fromScaling(out, v) {\\r\\n  out[0] = v[0];\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = v[1];\\r\\n  out[4] = 0;\\r\\n  out[5] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector translation\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat2d.identity(dest);\\r\\n *     mat2d.translate(dest, dest, vec);\\r\\n *\\r\\n * @param {mat2d} out mat2d receiving operation result\\r\\n * @param {vec2} v Translation vector\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction fromTranslation(out, v) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 1;\\r\\n  out[4] = v[0];\\r\\n  out[5] = v[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a mat2d\\r\\n *\\r\\n * @param {mat2d} a matrix to represent as a string\\r\\n * @returns {String} string representation of the matrix\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns Frobenius norm of a mat2d\\r\\n *\\r\\n * @param {mat2d} a the matrix to calculate Frobenius norm of\\r\\n * @returns {Number} Frobenius norm\\r\\n */\\r\\nfunction frob(a) {\\r\\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat2d's\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the first operand\\r\\n * @param {mat2d} b the second operand\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  out[3] = a[3] + b[3];\\r\\n  out[4] = a[4] + b[4];\\r\\n  out[5] = a[5] + b[5];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts matrix b from matrix a\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the first operand\\r\\n * @param {mat2d} b the second operand\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  out[2] = a[2] - b[2];\\r\\n  out[3] = a[3] - b[3];\\r\\n  out[4] = a[4] - b[4];\\r\\n  out[5] = a[5] - b[5];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiply each element of the matrix by a scalar.\\r\\n *\\r\\n * @param {mat2d} out the receiving matrix\\r\\n * @param {mat2d} a the matrix to scale\\r\\n * @param {Number} b amount to scale the matrix's elements by\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction multiplyScalar(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  out[3] = a[3] * b;\\r\\n  out[4] = a[4] * b;\\r\\n  out[5] = a[5] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\\r\\n *\\r\\n * @param {mat2d} out the receiving vector\\r\\n * @param {mat2d} a the first operand\\r\\n * @param {mat2d} b the second operand\\r\\n * @param {Number} scale the amount to scale b's elements by before adding\\r\\n * @returns {mat2d} out\\r\\n */\\r\\nfunction multiplyScalarAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  out[2] = a[2] + b[2] * scale;\\r\\n  out[3] = a[3] + b[3] * scale;\\r\\n  out[4] = a[4] + b[4] * scale;\\r\\n  out[5] = a[5] + b[5] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {mat2d} a The first matrix.\\r\\n * @param {mat2d} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {mat2d} a The first matrix.\\r\\n * @param {mat2d} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3],\\r\\n      b4 = b[4],\\r\\n      b5 = b[5];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat2d.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat2d.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat3.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/mat3.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, fromMat4, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, rotate, scale, fromTranslation, fromRotation, fromScaling, fromMat2d, fromQuat, normalFromMat4, projection, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromMat4\\\", function() { return fromMat4; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transpose\\\", function() { return transpose; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"invert\\\", function() { return invert; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"adjoint\\\", function() { return adjoint; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"determinant\\\", function() { return determinant; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"translate\\\", function() { return translate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotate\\\", function() { return rotate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromTranslation\\\", function() { return fromTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotation\\\", function() { return fromRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromScaling\\\", function() { return fromScaling; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromMat2d\\\", function() { return fromMat2d; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromQuat\\\", function() { return fromQuat; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"normalFromMat4\\\", function() { return normalFromMat4; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"projection\\\", function() { return projection; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"frob\\\", function() { return frob; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalar\\\", function() { return multiplyScalar; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalarAndAdd\\\", function() { return multiplyScalarAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 3x3 Matrix\\r\\n * @module mat3\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new identity mat3\\r\\n *\\r\\n * @returns {mat3} a new 3x3 matrix\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](9);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n    out[3] = 0;\\r\\n    out[5] = 0;\\r\\n    out[6] = 0;\\r\\n    out[7] = 0;\\r\\n  }\\r\\n  out[0] = 1;\\r\\n  out[4] = 1;\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copies the upper-left 3x3 values into the given mat3.\\r\\n *\\r\\n * @param {mat3} out the receiving 3x3 matrix\\r\\n * @param {mat4} a   the source 4x4 matrix\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction fromMat4(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[4];\\r\\n  out[4] = a[5];\\r\\n  out[5] = a[6];\\r\\n  out[6] = a[8];\\r\\n  out[7] = a[9];\\r\\n  out[8] = a[10];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new mat3 initialized with values from an existing matrix\\r\\n *\\r\\n * @param {mat3} a matrix to clone\\r\\n * @returns {mat3} a new 3x3 matrix\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](9);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  out[6] = a[6];\\r\\n  out[7] = a[7];\\r\\n  out[8] = a[8];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one mat3 to another\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the source matrix\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  out[6] = a[6];\\r\\n  out[7] = a[7];\\r\\n  out[8] = a[8];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create a new mat3 with the given values\\r\\n *\\r\\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\\r\\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\\r\\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\\r\\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\\r\\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\\r\\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\\r\\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\\r\\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\\r\\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\\r\\n * @returns {mat3} A new mat3\\r\\n */\\r\\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](9);\\r\\n  out[0] = m00;\\r\\n  out[1] = m01;\\r\\n  out[2] = m02;\\r\\n  out[3] = m10;\\r\\n  out[4] = m11;\\r\\n  out[5] = m12;\\r\\n  out[6] = m20;\\r\\n  out[7] = m21;\\r\\n  out[8] = m22;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a mat3 to the given values\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\\r\\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\\r\\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\\r\\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\\r\\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\\r\\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\\r\\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\\r\\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\\r\\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\\r\\n  out[0] = m00;\\r\\n  out[1] = m01;\\r\\n  out[2] = m02;\\r\\n  out[3] = m10;\\r\\n  out[4] = m11;\\r\\n  out[5] = m12;\\r\\n  out[6] = m20;\\r\\n  out[7] = m21;\\r\\n  out[8] = m22;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set a mat3 to the identity matrix\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction identity(out) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 1;\\r\\n  out[5] = 0;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transpose the values of a mat3\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the source matrix\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction transpose(out, a) {\\r\\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\\r\\n  if (out === a) {\\r\\n    var a01 = a[1],\\r\\n        a02 = a[2],\\r\\n        a12 = a[5];\\r\\n    out[1] = a[3];\\r\\n    out[2] = a[6];\\r\\n    out[3] = a01;\\r\\n    out[5] = a[7];\\r\\n    out[6] = a02;\\r\\n    out[7] = a12;\\r\\n  } else {\\r\\n    out[0] = a[0];\\r\\n    out[1] = a[3];\\r\\n    out[2] = a[6];\\r\\n    out[3] = a[1];\\r\\n    out[4] = a[4];\\r\\n    out[5] = a[7];\\r\\n    out[6] = a[2];\\r\\n    out[7] = a[5];\\r\\n    out[8] = a[8];\\r\\n  }\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Inverts a mat3\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the source matrix\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction invert(out, a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2];\\r\\n  var a10 = a[3],\\r\\n      a11 = a[4],\\r\\n      a12 = a[5];\\r\\n  var a20 = a[6],\\r\\n      a21 = a[7],\\r\\n      a22 = a[8];\\r\\n\\r\\n  var b01 = a22 * a11 - a12 * a21;\\r\\n  var b11 = -a22 * a10 + a12 * a20;\\r\\n  var b21 = a21 * a10 - a11 * a20;\\r\\n\\r\\n  // Calculate the determinant\\r\\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\\r\\n\\r\\n  if (!det) {\\r\\n    return null;\\r\\n  }\\r\\n  det = 1.0 / det;\\r\\n\\r\\n  out[0] = b01 * det;\\r\\n  out[1] = (-a22 * a01 + a02 * a21) * det;\\r\\n  out[2] = (a12 * a01 - a02 * a11) * det;\\r\\n  out[3] = b11 * det;\\r\\n  out[4] = (a22 * a00 - a02 * a20) * det;\\r\\n  out[5] = (-a12 * a00 + a02 * a10) * det;\\r\\n  out[6] = b21 * det;\\r\\n  out[7] = (-a21 * a00 + a01 * a20) * det;\\r\\n  out[8] = (a11 * a00 - a01 * a10) * det;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the adjugate of a mat3\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the source matrix\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction adjoint(out, a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2];\\r\\n  var a10 = a[3],\\r\\n      a11 = a[4],\\r\\n      a12 = a[5];\\r\\n  var a20 = a[6],\\r\\n      a21 = a[7],\\r\\n      a22 = a[8];\\r\\n\\r\\n  out[0] = a11 * a22 - a12 * a21;\\r\\n  out[1] = a02 * a21 - a01 * a22;\\r\\n  out[2] = a01 * a12 - a02 * a11;\\r\\n  out[3] = a12 * a20 - a10 * a22;\\r\\n  out[4] = a00 * a22 - a02 * a20;\\r\\n  out[5] = a02 * a10 - a00 * a12;\\r\\n  out[6] = a10 * a21 - a11 * a20;\\r\\n  out[7] = a01 * a20 - a00 * a21;\\r\\n  out[8] = a00 * a11 - a01 * a10;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the determinant of a mat3\\r\\n *\\r\\n * @param {mat3} a the source matrix\\r\\n * @returns {Number} determinant of a\\r\\n */\\r\\nfunction determinant(a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2];\\r\\n  var a10 = a[3],\\r\\n      a11 = a[4],\\r\\n      a12 = a[5];\\r\\n  var a20 = a[6],\\r\\n      a21 = a[7],\\r\\n      a22 = a[8];\\r\\n\\r\\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two mat3's\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the first operand\\r\\n * @param {mat3} b the second operand\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2];\\r\\n  var a10 = a[3],\\r\\n      a11 = a[4],\\r\\n      a12 = a[5];\\r\\n  var a20 = a[6],\\r\\n      a21 = a[7],\\r\\n      a22 = a[8];\\r\\n\\r\\n  var b00 = b[0],\\r\\n      b01 = b[1],\\r\\n      b02 = b[2];\\r\\n  var b10 = b[3],\\r\\n      b11 = b[4],\\r\\n      b12 = b[5];\\r\\n  var b20 = b[6],\\r\\n      b21 = b[7],\\r\\n      b22 = b[8];\\r\\n\\r\\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\\r\\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\\r\\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\\r\\n\\r\\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\\r\\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\\r\\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\\r\\n\\r\\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\\r\\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\\r\\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Translate a mat3 by the given vector\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the matrix to translate\\r\\n * @param {vec2} v vector to translate by\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction translate(out, a, v) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a10 = a[3],\\r\\n      a11 = a[4],\\r\\n      a12 = a[5],\\r\\n      a20 = a[6],\\r\\n      a21 = a[7],\\r\\n      a22 = a[8],\\r\\n      x = v[0],\\r\\n      y = v[1];\\r\\n\\r\\n  out[0] = a00;\\r\\n  out[1] = a01;\\r\\n  out[2] = a02;\\r\\n\\r\\n  out[3] = a10;\\r\\n  out[4] = a11;\\r\\n  out[5] = a12;\\r\\n\\r\\n  out[6] = x * a00 + y * a10 + a20;\\r\\n  out[7] = x * a01 + y * a11 + a21;\\r\\n  out[8] = x * a02 + y * a12 + a22;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a mat3 by the given angle\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction rotate(out, a, rad) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a10 = a[3],\\r\\n      a11 = a[4],\\r\\n      a12 = a[5],\\r\\n      a20 = a[6],\\r\\n      a21 = a[7],\\r\\n      a22 = a[8],\\r\\n      s = Math.sin(rad),\\r\\n      c = Math.cos(rad);\\r\\n\\r\\n  out[0] = c * a00 + s * a10;\\r\\n  out[1] = c * a01 + s * a11;\\r\\n  out[2] = c * a02 + s * a12;\\r\\n\\r\\n  out[3] = c * a10 - s * a00;\\r\\n  out[4] = c * a11 - s * a01;\\r\\n  out[5] = c * a12 - s * a02;\\r\\n\\r\\n  out[6] = a20;\\r\\n  out[7] = a21;\\r\\n  out[8] = a22;\\r\\n  return out;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Scales the mat3 by the dimensions in the given vec2\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the matrix to rotate\\r\\n * @param {vec2} v the vec2 to scale the matrix by\\r\\n * @returns {mat3} out\\r\\n **/\\r\\nfunction scale(out, a, v) {\\r\\n  var x = v[0],\\r\\n      y = v[1];\\r\\n\\r\\n  out[0] = x * a[0];\\r\\n  out[1] = x * a[1];\\r\\n  out[2] = x * a[2];\\r\\n\\r\\n  out[3] = y * a[3];\\r\\n  out[4] = y * a[4];\\r\\n  out[5] = y * a[5];\\r\\n\\r\\n  out[6] = a[6];\\r\\n  out[7] = a[7];\\r\\n  out[8] = a[8];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector translation\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat3.identity(dest);\\r\\n *     mat3.translate(dest, dest, vec);\\r\\n *\\r\\n * @param {mat3} out mat3 receiving operation result\\r\\n * @param {vec2} v Translation vector\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction fromTranslation(out, v) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 1;\\r\\n  out[5] = 0;\\r\\n  out[6] = v[0];\\r\\n  out[7] = v[1];\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a given angle\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat3.identity(dest);\\r\\n *     mat3.rotate(dest, dest, rad);\\r\\n *\\r\\n * @param {mat3} out mat3 receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction fromRotation(out, rad) {\\r\\n  var s = Math.sin(rad),\\r\\n      c = Math.cos(rad);\\r\\n\\r\\n  out[0] = c;\\r\\n  out[1] = s;\\r\\n  out[2] = 0;\\r\\n\\r\\n  out[3] = -s;\\r\\n  out[4] = c;\\r\\n  out[5] = 0;\\r\\n\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector scaling\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat3.identity(dest);\\r\\n *     mat3.scale(dest, dest, vec);\\r\\n *\\r\\n * @param {mat3} out mat3 receiving operation result\\r\\n * @param {vec2} v Scaling vector\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction fromScaling(out, v) {\\r\\n  out[0] = v[0];\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n\\r\\n  out[3] = 0;\\r\\n  out[4] = v[1];\\r\\n  out[5] = 0;\\r\\n\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copies the values from a mat2d into a mat3\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat2d} a the matrix to copy\\r\\n * @returns {mat3} out\\r\\n **/\\r\\nfunction fromMat2d(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = 0;\\r\\n\\r\\n  out[3] = a[2];\\r\\n  out[4] = a[3];\\r\\n  out[5] = 0;\\r\\n\\r\\n  out[6] = a[4];\\r\\n  out[7] = a[5];\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Calculates a 3x3 matrix from the given quaternion\\r\\n*\\r\\n* @param {mat3} out mat3 receiving operation result\\r\\n* @param {quat} q Quaternion to create matrix from\\r\\n*\\r\\n* @returns {mat3} out\\r\\n*/\\r\\nfunction fromQuat(out, q) {\\r\\n  var x = q[0],\\r\\n      y = q[1],\\r\\n      z = q[2],\\r\\n      w = q[3];\\r\\n  var x2 = x + x;\\r\\n  var y2 = y + y;\\r\\n  var z2 = z + z;\\r\\n\\r\\n  var xx = x * x2;\\r\\n  var yx = y * x2;\\r\\n  var yy = y * y2;\\r\\n  var zx = z * x2;\\r\\n  var zy = z * y2;\\r\\n  var zz = z * z2;\\r\\n  var wx = w * x2;\\r\\n  var wy = w * y2;\\r\\n  var wz = w * z2;\\r\\n\\r\\n  out[0] = 1 - yy - zz;\\r\\n  out[3] = yx - wz;\\r\\n  out[6] = zx + wy;\\r\\n\\r\\n  out[1] = yx + wz;\\r\\n  out[4] = 1 - xx - zz;\\r\\n  out[7] = zy - wx;\\r\\n\\r\\n  out[2] = zx - wy;\\r\\n  out[5] = zy + wx;\\r\\n  out[8] = 1 - xx - yy;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\\r\\n*\\r\\n* @param {mat3} out mat3 receiving operation result\\r\\n* @param {mat4} a Mat4 to derive the normal matrix from\\r\\n*\\r\\n* @returns {mat3} out\\r\\n*/\\r\\nfunction normalFromMat4(out, a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a03 = a[3];\\r\\n  var a10 = a[4],\\r\\n      a11 = a[5],\\r\\n      a12 = a[6],\\r\\n      a13 = a[7];\\r\\n  var a20 = a[8],\\r\\n      a21 = a[9],\\r\\n      a22 = a[10],\\r\\n      a23 = a[11];\\r\\n  var a30 = a[12],\\r\\n      a31 = a[13],\\r\\n      a32 = a[14],\\r\\n      a33 = a[15];\\r\\n\\r\\n  var b00 = a00 * a11 - a01 * a10;\\r\\n  var b01 = a00 * a12 - a02 * a10;\\r\\n  var b02 = a00 * a13 - a03 * a10;\\r\\n  var b03 = a01 * a12 - a02 * a11;\\r\\n  var b04 = a01 * a13 - a03 * a11;\\r\\n  var b05 = a02 * a13 - a03 * a12;\\r\\n  var b06 = a20 * a31 - a21 * a30;\\r\\n  var b07 = a20 * a32 - a22 * a30;\\r\\n  var b08 = a20 * a33 - a23 * a30;\\r\\n  var b09 = a21 * a32 - a22 * a31;\\r\\n  var b10 = a21 * a33 - a23 * a31;\\r\\n  var b11 = a22 * a33 - a23 * a32;\\r\\n\\r\\n  // Calculate the determinant\\r\\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n\\r\\n  if (!det) {\\r\\n    return null;\\r\\n  }\\r\\n  det = 1.0 / det;\\r\\n\\r\\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\\r\\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\\r\\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\\r\\n\\r\\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\\r\\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\\r\\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\\r\\n\\r\\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\\r\\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\\r\\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a 2D projection matrix with the given bounds\\r\\n *\\r\\n * @param {mat3} out mat3 frustum matrix will be written into\\r\\n * @param {number} width Width of your gl context\\r\\n * @param {number} height Height of gl context\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction projection(out, width, height) {\\r\\n  out[0] = 2 / width;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = -2 / height;\\r\\n  out[5] = 0;\\r\\n  out[6] = -1;\\r\\n  out[7] = 1;\\r\\n  out[8] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a mat3\\r\\n *\\r\\n * @param {mat3} a matrix to represent as a string\\r\\n * @returns {String} string representation of the matrix\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns Frobenius norm of a mat3\\r\\n *\\r\\n * @param {mat3} a the matrix to calculate Frobenius norm of\\r\\n * @returns {Number} Frobenius norm\\r\\n */\\r\\nfunction frob(a) {\\r\\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat3's\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the first operand\\r\\n * @param {mat3} b the second operand\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  out[3] = a[3] + b[3];\\r\\n  out[4] = a[4] + b[4];\\r\\n  out[5] = a[5] + b[5];\\r\\n  out[6] = a[6] + b[6];\\r\\n  out[7] = a[7] + b[7];\\r\\n  out[8] = a[8] + b[8];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts matrix b from matrix a\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the first operand\\r\\n * @param {mat3} b the second operand\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  out[2] = a[2] - b[2];\\r\\n  out[3] = a[3] - b[3];\\r\\n  out[4] = a[4] - b[4];\\r\\n  out[5] = a[5] - b[5];\\r\\n  out[6] = a[6] - b[6];\\r\\n  out[7] = a[7] - b[7];\\r\\n  out[8] = a[8] - b[8];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiply each element of the matrix by a scalar.\\r\\n *\\r\\n * @param {mat3} out the receiving matrix\\r\\n * @param {mat3} a the matrix to scale\\r\\n * @param {Number} b amount to scale the matrix's elements by\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction multiplyScalar(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  out[3] = a[3] * b;\\r\\n  out[4] = a[4] * b;\\r\\n  out[5] = a[5] * b;\\r\\n  out[6] = a[6] * b;\\r\\n  out[7] = a[7] * b;\\r\\n  out[8] = a[8] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\\r\\n *\\r\\n * @param {mat3} out the receiving vector\\r\\n * @param {mat3} a the first operand\\r\\n * @param {mat3} b the second operand\\r\\n * @param {Number} scale the amount to scale b's elements by before adding\\r\\n * @returns {mat3} out\\r\\n */\\r\\nfunction multiplyScalarAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  out[2] = a[2] + b[2] * scale;\\r\\n  out[3] = a[3] + b[3] * scale;\\r\\n  out[4] = a[4] + b[4] * scale;\\r\\n  out[5] = a[5] + b[5] * scale;\\r\\n  out[6] = a[6] + b[6] * scale;\\r\\n  out[7] = a[7] + b[7] * scale;\\r\\n  out[8] = a[8] + b[8] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {mat3} a The first matrix.\\r\\n * @param {mat3} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {mat3} a The first matrix.\\r\\n * @param {mat3} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5],\\r\\n      a6 = a[6],\\r\\n      a7 = a[7],\\r\\n      a8 = a[8];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3],\\r\\n      b4 = b[4],\\r\\n      b5 = b[5],\\r\\n      b6 = b[6],\\r\\n      b7 = b[7],\\r\\n      b8 = b[8];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a8), Math.abs(b8));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat3.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat3.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat4.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/mat4.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, scale, rotate, rotateX, rotateY, rotateZ, fromTranslation, fromScaling, fromRotation, fromXRotation, fromYRotation, fromZRotation, fromRotationTranslation, fromQuat2, getTranslation, getScaling, getRotation, fromRotationTranslationScale, fromRotationTranslationScaleOrigin, fromQuat, frustum, perspective, perspectiveFromFieldOfView, ortho, lookAt, targetTo, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transpose\\\", function() { return transpose; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"invert\\\", function() { return invert; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"adjoint\\\", function() { return adjoint; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"determinant\\\", function() { return determinant; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"translate\\\", function() { return translate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotate\\\", function() { return rotate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateX\\\", function() { return rotateX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateY\\\", function() { return rotateY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateZ\\\", function() { return rotateZ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromTranslation\\\", function() { return fromTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromScaling\\\", function() { return fromScaling; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotation\\\", function() { return fromRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromXRotation\\\", function() { return fromXRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromYRotation\\\", function() { return fromYRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromZRotation\\\", function() { return fromZRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotationTranslation\\\", function() { return fromRotationTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromQuat2\\\", function() { return fromQuat2; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getTranslation\\\", function() { return getTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getScaling\\\", function() { return getScaling; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getRotation\\\", function() { return getRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotationTranslationScale\\\", function() { return fromRotationTranslationScale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotationTranslationScaleOrigin\\\", function() { return fromRotationTranslationScaleOrigin; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromQuat\\\", function() { return fromQuat; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"frustum\\\", function() { return frustum; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"perspective\\\", function() { return perspective; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"perspectiveFromFieldOfView\\\", function() { return perspectiveFromFieldOfView; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ortho\\\", function() { return ortho; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"lookAt\\\", function() { return lookAt; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"targetTo\\\", function() { return targetTo; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"frob\\\", function() { return frob; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalar\\\", function() { return multiplyScalar; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiplyScalarAndAdd\\\", function() { return multiplyScalarAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\\r\\n * @module mat4\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new identity mat4\\r\\n *\\r\\n * @returns {mat4} a new 4x4 matrix\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](16);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n    out[3] = 0;\\r\\n    out[4] = 0;\\r\\n    out[6] = 0;\\r\\n    out[7] = 0;\\r\\n    out[8] = 0;\\r\\n    out[9] = 0;\\r\\n    out[11] = 0;\\r\\n    out[12] = 0;\\r\\n    out[13] = 0;\\r\\n    out[14] = 0;\\r\\n  }\\r\\n  out[0] = 1;\\r\\n  out[5] = 1;\\r\\n  out[10] = 1;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new mat4 initialized with values from an existing matrix\\r\\n *\\r\\n * @param {mat4} a matrix to clone\\r\\n * @returns {mat4} a new 4x4 matrix\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](16);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  out[6] = a[6];\\r\\n  out[7] = a[7];\\r\\n  out[8] = a[8];\\r\\n  out[9] = a[9];\\r\\n  out[10] = a[10];\\r\\n  out[11] = a[11];\\r\\n  out[12] = a[12];\\r\\n  out[13] = a[13];\\r\\n  out[14] = a[14];\\r\\n  out[15] = a[15];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one mat4 to another\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the source matrix\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  out[6] = a[6];\\r\\n  out[7] = a[7];\\r\\n  out[8] = a[8];\\r\\n  out[9] = a[9];\\r\\n  out[10] = a[10];\\r\\n  out[11] = a[11];\\r\\n  out[12] = a[12];\\r\\n  out[13] = a[13];\\r\\n  out[14] = a[14];\\r\\n  out[15] = a[15];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create a new mat4 with the given values\\r\\n *\\r\\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\\r\\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\\r\\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\\r\\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\\r\\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\\r\\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\\r\\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\\r\\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\\r\\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\\r\\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\\r\\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\\r\\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\\r\\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\\r\\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\\r\\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\\r\\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\\r\\n * @returns {mat4} A new mat4\\r\\n */\\r\\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](16);\\r\\n  out[0] = m00;\\r\\n  out[1] = m01;\\r\\n  out[2] = m02;\\r\\n  out[3] = m03;\\r\\n  out[4] = m10;\\r\\n  out[5] = m11;\\r\\n  out[6] = m12;\\r\\n  out[7] = m13;\\r\\n  out[8] = m20;\\r\\n  out[9] = m21;\\r\\n  out[10] = m22;\\r\\n  out[11] = m23;\\r\\n  out[12] = m30;\\r\\n  out[13] = m31;\\r\\n  out[14] = m32;\\r\\n  out[15] = m33;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a mat4 to the given values\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\\r\\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\\r\\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\\r\\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\\r\\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\\r\\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\\r\\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\\r\\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\\r\\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\\r\\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\\r\\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\\r\\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\\r\\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\\r\\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\\r\\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\\r\\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\\r\\n  out[0] = m00;\\r\\n  out[1] = m01;\\r\\n  out[2] = m02;\\r\\n  out[3] = m03;\\r\\n  out[4] = m10;\\r\\n  out[5] = m11;\\r\\n  out[6] = m12;\\r\\n  out[7] = m13;\\r\\n  out[8] = m20;\\r\\n  out[9] = m21;\\r\\n  out[10] = m22;\\r\\n  out[11] = m23;\\r\\n  out[12] = m30;\\r\\n  out[13] = m31;\\r\\n  out[14] = m32;\\r\\n  out[15] = m33;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set a mat4 to the identity matrix\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction identity(out) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = 1;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = 0;\\r\\n  out[10] = 1;\\r\\n  out[11] = 0;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transpose the values of a mat4\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the source matrix\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction transpose(out, a) {\\r\\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\\r\\n  if (out === a) {\\r\\n    var a01 = a[1],\\r\\n        a02 = a[2],\\r\\n        a03 = a[3];\\r\\n    var a12 = a[6],\\r\\n        a13 = a[7];\\r\\n    var a23 = a[11];\\r\\n\\r\\n    out[1] = a[4];\\r\\n    out[2] = a[8];\\r\\n    out[3] = a[12];\\r\\n    out[4] = a01;\\r\\n    out[6] = a[9];\\r\\n    out[7] = a[13];\\r\\n    out[8] = a02;\\r\\n    out[9] = a12;\\r\\n    out[11] = a[14];\\r\\n    out[12] = a03;\\r\\n    out[13] = a13;\\r\\n    out[14] = a23;\\r\\n  } else {\\r\\n    out[0] = a[0];\\r\\n    out[1] = a[4];\\r\\n    out[2] = a[8];\\r\\n    out[3] = a[12];\\r\\n    out[4] = a[1];\\r\\n    out[5] = a[5];\\r\\n    out[6] = a[9];\\r\\n    out[7] = a[13];\\r\\n    out[8] = a[2];\\r\\n    out[9] = a[6];\\r\\n    out[10] = a[10];\\r\\n    out[11] = a[14];\\r\\n    out[12] = a[3];\\r\\n    out[13] = a[7];\\r\\n    out[14] = a[11];\\r\\n    out[15] = a[15];\\r\\n  }\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Inverts a mat4\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the source matrix\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction invert(out, a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a03 = a[3];\\r\\n  var a10 = a[4],\\r\\n      a11 = a[5],\\r\\n      a12 = a[6],\\r\\n      a13 = a[7];\\r\\n  var a20 = a[8],\\r\\n      a21 = a[9],\\r\\n      a22 = a[10],\\r\\n      a23 = a[11];\\r\\n  var a30 = a[12],\\r\\n      a31 = a[13],\\r\\n      a32 = a[14],\\r\\n      a33 = a[15];\\r\\n\\r\\n  var b00 = a00 * a11 - a01 * a10;\\r\\n  var b01 = a00 * a12 - a02 * a10;\\r\\n  var b02 = a00 * a13 - a03 * a10;\\r\\n  var b03 = a01 * a12 - a02 * a11;\\r\\n  var b04 = a01 * a13 - a03 * a11;\\r\\n  var b05 = a02 * a13 - a03 * a12;\\r\\n  var b06 = a20 * a31 - a21 * a30;\\r\\n  var b07 = a20 * a32 - a22 * a30;\\r\\n  var b08 = a20 * a33 - a23 * a30;\\r\\n  var b09 = a21 * a32 - a22 * a31;\\r\\n  var b10 = a21 * a33 - a23 * a31;\\r\\n  var b11 = a22 * a33 - a23 * a32;\\r\\n\\r\\n  // Calculate the determinant\\r\\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n\\r\\n  if (!det) {\\r\\n    return null;\\r\\n  }\\r\\n  det = 1.0 / det;\\r\\n\\r\\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\\r\\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\\r\\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\\r\\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\\r\\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\\r\\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\\r\\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\\r\\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\\r\\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\\r\\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\\r\\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\\r\\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\\r\\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\\r\\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\\r\\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\\r\\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the adjugate of a mat4\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the source matrix\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction adjoint(out, a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a03 = a[3];\\r\\n  var a10 = a[4],\\r\\n      a11 = a[5],\\r\\n      a12 = a[6],\\r\\n      a13 = a[7];\\r\\n  var a20 = a[8],\\r\\n      a21 = a[9],\\r\\n      a22 = a[10],\\r\\n      a23 = a[11];\\r\\n  var a30 = a[12],\\r\\n      a31 = a[13],\\r\\n      a32 = a[14],\\r\\n      a33 = a[15];\\r\\n\\r\\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\\r\\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\\r\\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\\r\\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\\r\\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\\r\\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\\r\\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\\r\\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\\r\\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\\r\\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\\r\\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\\r\\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\\r\\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\\r\\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\\r\\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\\r\\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the determinant of a mat4\\r\\n *\\r\\n * @param {mat4} a the source matrix\\r\\n * @returns {Number} determinant of a\\r\\n */\\r\\nfunction determinant(a) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a03 = a[3];\\r\\n  var a10 = a[4],\\r\\n      a11 = a[5],\\r\\n      a12 = a[6],\\r\\n      a13 = a[7];\\r\\n  var a20 = a[8],\\r\\n      a21 = a[9],\\r\\n      a22 = a[10],\\r\\n      a23 = a[11];\\r\\n  var a30 = a[12],\\r\\n      a31 = a[13],\\r\\n      a32 = a[14],\\r\\n      a33 = a[15];\\r\\n\\r\\n  var b00 = a00 * a11 - a01 * a10;\\r\\n  var b01 = a00 * a12 - a02 * a10;\\r\\n  var b02 = a00 * a13 - a03 * a10;\\r\\n  var b03 = a01 * a12 - a02 * a11;\\r\\n  var b04 = a01 * a13 - a03 * a11;\\r\\n  var b05 = a02 * a13 - a03 * a12;\\r\\n  var b06 = a20 * a31 - a21 * a30;\\r\\n  var b07 = a20 * a32 - a22 * a30;\\r\\n  var b08 = a20 * a33 - a23 * a30;\\r\\n  var b09 = a21 * a32 - a22 * a31;\\r\\n  var b10 = a21 * a33 - a23 * a31;\\r\\n  var b11 = a22 * a33 - a23 * a32;\\r\\n\\r\\n  // Calculate the determinant\\r\\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two mat4s\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the first operand\\r\\n * @param {mat4} b the second operand\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  var a00 = a[0],\\r\\n      a01 = a[1],\\r\\n      a02 = a[2],\\r\\n      a03 = a[3];\\r\\n  var a10 = a[4],\\r\\n      a11 = a[5],\\r\\n      a12 = a[6],\\r\\n      a13 = a[7];\\r\\n  var a20 = a[8],\\r\\n      a21 = a[9],\\r\\n      a22 = a[10],\\r\\n      a23 = a[11];\\r\\n  var a30 = a[12],\\r\\n      a31 = a[13],\\r\\n      a32 = a[14],\\r\\n      a33 = a[15];\\r\\n\\r\\n  // Cache only the current line of the second matrix\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3];\\r\\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\\r\\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\\r\\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\\r\\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\\r\\n\\r\\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\\r\\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\\r\\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\\r\\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\\r\\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\\r\\n\\r\\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\\r\\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\\r\\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\\r\\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\\r\\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\\r\\n\\r\\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\\r\\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\\r\\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\\r\\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\\r\\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Translate a mat4 by the given vector\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to translate\\r\\n * @param {vec3} v vector to translate by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction translate(out, a, v) {\\r\\n  var x = v[0],\\r\\n      y = v[1],\\r\\n      z = v[2];\\r\\n  var a00 = void 0,\\r\\n      a01 = void 0,\\r\\n      a02 = void 0,\\r\\n      a03 = void 0;\\r\\n  var a10 = void 0,\\r\\n      a11 = void 0,\\r\\n      a12 = void 0,\\r\\n      a13 = void 0;\\r\\n  var a20 = void 0,\\r\\n      a21 = void 0,\\r\\n      a22 = void 0,\\r\\n      a23 = void 0;\\r\\n\\r\\n  if (a === out) {\\r\\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\\r\\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\\r\\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\\r\\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\\r\\n  } else {\\r\\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\\r\\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\\r\\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\\r\\n\\r\\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\\r\\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\\r\\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\\r\\n\\r\\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\\r\\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\\r\\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\\r\\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\\r\\n  }\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to scale\\r\\n * @param {vec3} v the vec3 to scale the matrix by\\r\\n * @returns {mat4} out\\r\\n **/\\r\\nfunction scale(out, a, v) {\\r\\n  var x = v[0],\\r\\n      y = v[1],\\r\\n      z = v[2];\\r\\n\\r\\n  out[0] = a[0] * x;\\r\\n  out[1] = a[1] * x;\\r\\n  out[2] = a[2] * x;\\r\\n  out[3] = a[3] * x;\\r\\n  out[4] = a[4] * y;\\r\\n  out[5] = a[5] * y;\\r\\n  out[6] = a[6] * y;\\r\\n  out[7] = a[7] * y;\\r\\n  out[8] = a[8] * z;\\r\\n  out[9] = a[9] * z;\\r\\n  out[10] = a[10] * z;\\r\\n  out[11] = a[11] * z;\\r\\n  out[12] = a[12];\\r\\n  out[13] = a[13];\\r\\n  out[14] = a[14];\\r\\n  out[15] = a[15];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a mat4 by the given angle around the given axis\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @param {vec3} axis the axis to rotate around\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction rotate(out, a, rad, axis) {\\r\\n  var x = axis[0],\\r\\n      y = axis[1],\\r\\n      z = axis[2];\\r\\n  var len = Math.sqrt(x * x + y * y + z * z);\\r\\n  var s = void 0,\\r\\n      c = void 0,\\r\\n      t = void 0;\\r\\n  var a00 = void 0,\\r\\n      a01 = void 0,\\r\\n      a02 = void 0,\\r\\n      a03 = void 0;\\r\\n  var a10 = void 0,\\r\\n      a11 = void 0,\\r\\n      a12 = void 0,\\r\\n      a13 = void 0;\\r\\n  var a20 = void 0,\\r\\n      a21 = void 0,\\r\\n      a22 = void 0,\\r\\n      a23 = void 0;\\r\\n  var b00 = void 0,\\r\\n      b01 = void 0,\\r\\n      b02 = void 0;\\r\\n  var b10 = void 0,\\r\\n      b11 = void 0,\\r\\n      b12 = void 0;\\r\\n  var b20 = void 0,\\r\\n      b21 = void 0,\\r\\n      b22 = void 0;\\r\\n\\r\\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"]) {\\r\\n    return null;\\r\\n  }\\r\\n\\r\\n  len = 1 / len;\\r\\n  x *= len;\\r\\n  y *= len;\\r\\n  z *= len;\\r\\n\\r\\n  s = Math.sin(rad);\\r\\n  c = Math.cos(rad);\\r\\n  t = 1 - c;\\r\\n\\r\\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\\r\\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\\r\\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\\r\\n\\r\\n  // Construct the elements of the rotation matrix\\r\\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\\r\\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\\r\\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\\r\\n\\r\\n  // Perform rotation-specific matrix multiplication\\r\\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\\r\\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\\r\\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\\r\\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\\r\\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\\r\\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\\r\\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\\r\\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\\r\\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\\r\\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\\r\\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\\r\\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\\r\\n\\r\\n  if (a !== out) {\\r\\n    // If the source and destination differ, copy the unchanged last row\\r\\n    out[12] = a[12];\\r\\n    out[13] = a[13];\\r\\n    out[14] = a[14];\\r\\n    out[15] = a[15];\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a matrix by the given angle around the X axis\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction rotateX(out, a, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n  var a10 = a[4];\\r\\n  var a11 = a[5];\\r\\n  var a12 = a[6];\\r\\n  var a13 = a[7];\\r\\n  var a20 = a[8];\\r\\n  var a21 = a[9];\\r\\n  var a22 = a[10];\\r\\n  var a23 = a[11];\\r\\n\\r\\n  if (a !== out) {\\r\\n    // If the source and destination differ, copy the unchanged rows\\r\\n    out[0] = a[0];\\r\\n    out[1] = a[1];\\r\\n    out[2] = a[2];\\r\\n    out[3] = a[3];\\r\\n    out[12] = a[12];\\r\\n    out[13] = a[13];\\r\\n    out[14] = a[14];\\r\\n    out[15] = a[15];\\r\\n  }\\r\\n\\r\\n  // Perform axis-specific matrix multiplication\\r\\n  out[4] = a10 * c + a20 * s;\\r\\n  out[5] = a11 * c + a21 * s;\\r\\n  out[6] = a12 * c + a22 * s;\\r\\n  out[7] = a13 * c + a23 * s;\\r\\n  out[8] = a20 * c - a10 * s;\\r\\n  out[9] = a21 * c - a11 * s;\\r\\n  out[10] = a22 * c - a12 * s;\\r\\n  out[11] = a23 * c - a13 * s;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a matrix by the given angle around the Y axis\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction rotateY(out, a, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n  var a00 = a[0];\\r\\n  var a01 = a[1];\\r\\n  var a02 = a[2];\\r\\n  var a03 = a[3];\\r\\n  var a20 = a[8];\\r\\n  var a21 = a[9];\\r\\n  var a22 = a[10];\\r\\n  var a23 = a[11];\\r\\n\\r\\n  if (a !== out) {\\r\\n    // If the source and destination differ, copy the unchanged rows\\r\\n    out[4] = a[4];\\r\\n    out[5] = a[5];\\r\\n    out[6] = a[6];\\r\\n    out[7] = a[7];\\r\\n    out[12] = a[12];\\r\\n    out[13] = a[13];\\r\\n    out[14] = a[14];\\r\\n    out[15] = a[15];\\r\\n  }\\r\\n\\r\\n  // Perform axis-specific matrix multiplication\\r\\n  out[0] = a00 * c - a20 * s;\\r\\n  out[1] = a01 * c - a21 * s;\\r\\n  out[2] = a02 * c - a22 * s;\\r\\n  out[3] = a03 * c - a23 * s;\\r\\n  out[8] = a00 * s + a20 * c;\\r\\n  out[9] = a01 * s + a21 * c;\\r\\n  out[10] = a02 * s + a22 * c;\\r\\n  out[11] = a03 * s + a23 * c;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a matrix by the given angle around the Z axis\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to rotate\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction rotateZ(out, a, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n  var a00 = a[0];\\r\\n  var a01 = a[1];\\r\\n  var a02 = a[2];\\r\\n  var a03 = a[3];\\r\\n  var a10 = a[4];\\r\\n  var a11 = a[5];\\r\\n  var a12 = a[6];\\r\\n  var a13 = a[7];\\r\\n\\r\\n  if (a !== out) {\\r\\n    // If the source and destination differ, copy the unchanged last row\\r\\n    out[8] = a[8];\\r\\n    out[9] = a[9];\\r\\n    out[10] = a[10];\\r\\n    out[11] = a[11];\\r\\n    out[12] = a[12];\\r\\n    out[13] = a[13];\\r\\n    out[14] = a[14];\\r\\n    out[15] = a[15];\\r\\n  }\\r\\n\\r\\n  // Perform axis-specific matrix multiplication\\r\\n  out[0] = a00 * c + a10 * s;\\r\\n  out[1] = a01 * c + a11 * s;\\r\\n  out[2] = a02 * c + a12 * s;\\r\\n  out[3] = a03 * c + a13 * s;\\r\\n  out[4] = a10 * c - a00 * s;\\r\\n  out[5] = a11 * c - a01 * s;\\r\\n  out[6] = a12 * c - a02 * s;\\r\\n  out[7] = a13 * c - a03 * s;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector translation\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.translate(dest, dest, vec);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {vec3} v Translation vector\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromTranslation(out, v) {\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = 1;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = 0;\\r\\n  out[10] = 1;\\r\\n  out[11] = 0;\\r\\n  out[12] = v[0];\\r\\n  out[13] = v[1];\\r\\n  out[14] = v[2];\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a vector scaling\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.scale(dest, dest, vec);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {vec3} v Scaling vector\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromScaling(out, v) {\\r\\n  out[0] = v[0];\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = v[1];\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = 0;\\r\\n  out[10] = v[2];\\r\\n  out[11] = 0;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a given angle around a given axis\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.rotate(dest, dest, rad, axis);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @param {vec3} axis the axis to rotate around\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromRotation(out, rad, axis) {\\r\\n  var x = axis[0],\\r\\n      y = axis[1],\\r\\n      z = axis[2];\\r\\n  var len = Math.sqrt(x * x + y * y + z * z);\\r\\n  var s = void 0,\\r\\n      c = void 0,\\r\\n      t = void 0;\\r\\n\\r\\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"]) {\\r\\n    return null;\\r\\n  }\\r\\n\\r\\n  len = 1 / len;\\r\\n  x *= len;\\r\\n  y *= len;\\r\\n  z *= len;\\r\\n\\r\\n  s = Math.sin(rad);\\r\\n  c = Math.cos(rad);\\r\\n  t = 1 - c;\\r\\n\\r\\n  // Perform rotation-specific matrix multiplication\\r\\n  out[0] = x * x * t + c;\\r\\n  out[1] = y * x * t + z * s;\\r\\n  out[2] = z * x * t - y * s;\\r\\n  out[3] = 0;\\r\\n  out[4] = x * y * t - z * s;\\r\\n  out[5] = y * y * t + c;\\r\\n  out[6] = z * y * t + x * s;\\r\\n  out[7] = 0;\\r\\n  out[8] = x * z * t + y * s;\\r\\n  out[9] = y * z * t - x * s;\\r\\n  out[10] = z * z * t + c;\\r\\n  out[11] = 0;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from the given angle around the X axis\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.rotateX(dest, dest, rad);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromXRotation(out, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n\\r\\n  // Perform axis-specific matrix multiplication\\r\\n  out[0] = 1;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = c;\\r\\n  out[6] = s;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = -s;\\r\\n  out[10] = c;\\r\\n  out[11] = 0;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from the given angle around the Y axis\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.rotateY(dest, dest, rad);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromYRotation(out, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n\\r\\n  // Perform axis-specific matrix multiplication\\r\\n  out[0] = c;\\r\\n  out[1] = 0;\\r\\n  out[2] = -s;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = 1;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = s;\\r\\n  out[9] = 0;\\r\\n  out[10] = c;\\r\\n  out[11] = 0;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from the given angle around the Z axis\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.rotateZ(dest, dest, rad);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {Number} rad the angle to rotate the matrix by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromZRotation(out, rad) {\\r\\n  var s = Math.sin(rad);\\r\\n  var c = Math.cos(rad);\\r\\n\\r\\n  // Perform axis-specific matrix multiplication\\r\\n  out[0] = c;\\r\\n  out[1] = s;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = -s;\\r\\n  out[5] = c;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = 0;\\r\\n  out[10] = 1;\\r\\n  out[11] = 0;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a quaternion rotation and vector translation\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.translate(dest, vec);\\r\\n *     let quatMat = mat4.create();\\r\\n *     quat4.toMat4(quat, quatMat);\\r\\n *     mat4.multiply(dest, quatMat);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {quat4} q Rotation quaternion\\r\\n * @param {vec3} v Translation vector\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromRotationTranslation(out, q, v) {\\r\\n  // Quaternion math\\r\\n  var x = q[0],\\r\\n      y = q[1],\\r\\n      z = q[2],\\r\\n      w = q[3];\\r\\n  var x2 = x + x;\\r\\n  var y2 = y + y;\\r\\n  var z2 = z + z;\\r\\n\\r\\n  var xx = x * x2;\\r\\n  var xy = x * y2;\\r\\n  var xz = x * z2;\\r\\n  var yy = y * y2;\\r\\n  var yz = y * z2;\\r\\n  var zz = z * z2;\\r\\n  var wx = w * x2;\\r\\n  var wy = w * y2;\\r\\n  var wz = w * z2;\\r\\n\\r\\n  out[0] = 1 - (yy + zz);\\r\\n  out[1] = xy + wz;\\r\\n  out[2] = xz - wy;\\r\\n  out[3] = 0;\\r\\n  out[4] = xy - wz;\\r\\n  out[5] = 1 - (xx + zz);\\r\\n  out[6] = yz + wx;\\r\\n  out[7] = 0;\\r\\n  out[8] = xz + wy;\\r\\n  out[9] = yz - wx;\\r\\n  out[10] = 1 - (xx + yy);\\r\\n  out[11] = 0;\\r\\n  out[12] = v[0];\\r\\n  out[13] = v[1];\\r\\n  out[14] = v[2];\\r\\n  out[15] = 1;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new mat4 from a dual quat.\\r\\n *\\r\\n * @param {mat4} out Matrix\\r\\n * @param {quat2} a Dual Quaternion\\r\\n * @returns {mat4} mat4 receiving operation result\\r\\n */\\r\\nfunction fromQuat2(out, a) {\\r\\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](3);\\r\\n  var bx = -a[0],\\r\\n      by = -a[1],\\r\\n      bz = -a[2],\\r\\n      bw = a[3],\\r\\n      ax = a[4],\\r\\n      ay = a[5],\\r\\n      az = a[6],\\r\\n      aw = a[7];\\r\\n\\r\\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\\r\\n  //Only scale if it makes sense\\r\\n  if (magnitude > 0) {\\r\\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\\r\\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\\r\\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\\r\\n  } else {\\r\\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\\r\\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\\r\\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\\r\\n  }\\r\\n  fromRotationTranslation(out, a, translation);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the translation vector component of a transformation\\r\\n *  matrix. If a matrix is built with fromRotationTranslation,\\r\\n *  the returned vector will be the same as the translation vector\\r\\n *  originally supplied.\\r\\n * @param  {vec3} out Vector to receive translation component\\r\\n * @param  {mat4} mat Matrix to be decomposed (input)\\r\\n * @return {vec3} out\\r\\n */\\r\\nfunction getTranslation(out, mat) {\\r\\n  out[0] = mat[12];\\r\\n  out[1] = mat[13];\\r\\n  out[2] = mat[14];\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the scaling factor component of a transformation\\r\\n *  matrix. If a matrix is built with fromRotationTranslationScale\\r\\n *  with a normalized Quaternion paramter, the returned vector will be\\r\\n *  the same as the scaling vector\\r\\n *  originally supplied.\\r\\n * @param  {vec3} out Vector to receive scaling factor component\\r\\n * @param  {mat4} mat Matrix to be decomposed (input)\\r\\n * @return {vec3} out\\r\\n */\\r\\nfunction getScaling(out, mat) {\\r\\n  var m11 = mat[0];\\r\\n  var m12 = mat[1];\\r\\n  var m13 = mat[2];\\r\\n  var m21 = mat[4];\\r\\n  var m22 = mat[5];\\r\\n  var m23 = mat[6];\\r\\n  var m31 = mat[8];\\r\\n  var m32 = mat[9];\\r\\n  var m33 = mat[10];\\r\\n\\r\\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\\r\\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\\r\\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a quaternion representing the rotational component\\r\\n *  of a transformation matrix. If a matrix is built with\\r\\n *  fromRotationTranslation, the returned quaternion will be the\\r\\n *  same as the quaternion originally supplied.\\r\\n * @param {quat} out Quaternion to receive the rotation component\\r\\n * @param {mat4} mat Matrix to be decomposed (input)\\r\\n * @return {quat} out\\r\\n */\\r\\nfunction getRotation(out, mat) {\\r\\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\\r\\n  var trace = mat[0] + mat[5] + mat[10];\\r\\n  var S = 0;\\r\\n\\r\\n  if (trace > 0) {\\r\\n    S = Math.sqrt(trace + 1.0) * 2;\\r\\n    out[3] = 0.25 * S;\\r\\n    out[0] = (mat[6] - mat[9]) / S;\\r\\n    out[1] = (mat[8] - mat[2]) / S;\\r\\n    out[2] = (mat[1] - mat[4]) / S;\\r\\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\\r\\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\\r\\n    out[3] = (mat[6] - mat[9]) / S;\\r\\n    out[0] = 0.25 * S;\\r\\n    out[1] = (mat[1] + mat[4]) / S;\\r\\n    out[2] = (mat[8] + mat[2]) / S;\\r\\n  } else if (mat[5] > mat[10]) {\\r\\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\\r\\n    out[3] = (mat[8] - mat[2]) / S;\\r\\n    out[0] = (mat[1] + mat[4]) / S;\\r\\n    out[1] = 0.25 * S;\\r\\n    out[2] = (mat[6] + mat[9]) / S;\\r\\n  } else {\\r\\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\\r\\n    out[3] = (mat[1] - mat[4]) / S;\\r\\n    out[0] = (mat[8] + mat[2]) / S;\\r\\n    out[1] = (mat[6] + mat[9]) / S;\\r\\n    out[2] = 0.25 * S;\\r\\n  }\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.translate(dest, vec);\\r\\n *     let quatMat = mat4.create();\\r\\n *     quat4.toMat4(quat, quatMat);\\r\\n *     mat4.multiply(dest, quatMat);\\r\\n *     mat4.scale(dest, scale)\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {quat4} q Rotation quaternion\\r\\n * @param {vec3} v Translation vector\\r\\n * @param {vec3} s Scaling vector\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromRotationTranslationScale(out, q, v, s) {\\r\\n  // Quaternion math\\r\\n  var x = q[0],\\r\\n      y = q[1],\\r\\n      z = q[2],\\r\\n      w = q[3];\\r\\n  var x2 = x + x;\\r\\n  var y2 = y + y;\\r\\n  var z2 = z + z;\\r\\n\\r\\n  var xx = x * x2;\\r\\n  var xy = x * y2;\\r\\n  var xz = x * z2;\\r\\n  var yy = y * y2;\\r\\n  var yz = y * z2;\\r\\n  var zz = z * z2;\\r\\n  var wx = w * x2;\\r\\n  var wy = w * y2;\\r\\n  var wz = w * z2;\\r\\n  var sx = s[0];\\r\\n  var sy = s[1];\\r\\n  var sz = s[2];\\r\\n\\r\\n  out[0] = (1 - (yy + zz)) * sx;\\r\\n  out[1] = (xy + wz) * sx;\\r\\n  out[2] = (xz - wy) * sx;\\r\\n  out[3] = 0;\\r\\n  out[4] = (xy - wz) * sy;\\r\\n  out[5] = (1 - (xx + zz)) * sy;\\r\\n  out[6] = (yz + wx) * sy;\\r\\n  out[7] = 0;\\r\\n  out[8] = (xz + wy) * sz;\\r\\n  out[9] = (yz - wx) * sz;\\r\\n  out[10] = (1 - (xx + yy)) * sz;\\r\\n  out[11] = 0;\\r\\n  out[12] = v[0];\\r\\n  out[13] = v[1];\\r\\n  out[14] = v[2];\\r\\n  out[15] = 1;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\\r\\n * This is equivalent to (but much faster than):\\r\\n *\\r\\n *     mat4.identity(dest);\\r\\n *     mat4.translate(dest, vec);\\r\\n *     mat4.translate(dest, origin);\\r\\n *     let quatMat = mat4.create();\\r\\n *     quat4.toMat4(quat, quatMat);\\r\\n *     mat4.multiply(dest, quatMat);\\r\\n *     mat4.scale(dest, scale)\\r\\n *     mat4.translate(dest, negativeOrigin);\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {quat4} q Rotation quaternion\\r\\n * @param {vec3} v Translation vector\\r\\n * @param {vec3} s Scaling vector\\r\\n * @param {vec3} o The origin vector around which to scale and rotate\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\\r\\n  // Quaternion math\\r\\n  var x = q[0],\\r\\n      y = q[1],\\r\\n      z = q[2],\\r\\n      w = q[3];\\r\\n  var x2 = x + x;\\r\\n  var y2 = y + y;\\r\\n  var z2 = z + z;\\r\\n\\r\\n  var xx = x * x2;\\r\\n  var xy = x * y2;\\r\\n  var xz = x * z2;\\r\\n  var yy = y * y2;\\r\\n  var yz = y * z2;\\r\\n  var zz = z * z2;\\r\\n  var wx = w * x2;\\r\\n  var wy = w * y2;\\r\\n  var wz = w * z2;\\r\\n\\r\\n  var sx = s[0];\\r\\n  var sy = s[1];\\r\\n  var sz = s[2];\\r\\n\\r\\n  var ox = o[0];\\r\\n  var oy = o[1];\\r\\n  var oz = o[2];\\r\\n\\r\\n  var out0 = (1 - (yy + zz)) * sx;\\r\\n  var out1 = (xy + wz) * sx;\\r\\n  var out2 = (xz - wy) * sx;\\r\\n  var out4 = (xy - wz) * sy;\\r\\n  var out5 = (1 - (xx + zz)) * sy;\\r\\n  var out6 = (yz + wx) * sy;\\r\\n  var out8 = (xz + wy) * sz;\\r\\n  var out9 = (yz - wx) * sz;\\r\\n  var out10 = (1 - (xx + yy)) * sz;\\r\\n\\r\\n  out[0] = out0;\\r\\n  out[1] = out1;\\r\\n  out[2] = out2;\\r\\n  out[3] = 0;\\r\\n  out[4] = out4;\\r\\n  out[5] = out5;\\r\\n  out[6] = out6;\\r\\n  out[7] = 0;\\r\\n  out[8] = out8;\\r\\n  out[9] = out9;\\r\\n  out[10] = out10;\\r\\n  out[11] = 0;\\r\\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\\r\\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\\r\\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\\r\\n  out[15] = 1;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates a 4x4 matrix from the given quaternion\\r\\n *\\r\\n * @param {mat4} out mat4 receiving operation result\\r\\n * @param {quat} q Quaternion to create matrix from\\r\\n *\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction fromQuat(out, q) {\\r\\n  var x = q[0],\\r\\n      y = q[1],\\r\\n      z = q[2],\\r\\n      w = q[3];\\r\\n  var x2 = x + x;\\r\\n  var y2 = y + y;\\r\\n  var z2 = z + z;\\r\\n\\r\\n  var xx = x * x2;\\r\\n  var yx = y * x2;\\r\\n  var yy = y * y2;\\r\\n  var zx = z * x2;\\r\\n  var zy = z * y2;\\r\\n  var zz = z * z2;\\r\\n  var wx = w * x2;\\r\\n  var wy = w * y2;\\r\\n  var wz = w * z2;\\r\\n\\r\\n  out[0] = 1 - yy - zz;\\r\\n  out[1] = yx + wz;\\r\\n  out[2] = zx - wy;\\r\\n  out[3] = 0;\\r\\n\\r\\n  out[4] = yx - wz;\\r\\n  out[5] = 1 - xx - zz;\\r\\n  out[6] = zy + wx;\\r\\n  out[7] = 0;\\r\\n\\r\\n  out[8] = zx + wy;\\r\\n  out[9] = zy - wx;\\r\\n  out[10] = 1 - xx - yy;\\r\\n  out[11] = 0;\\r\\n\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = 0;\\r\\n  out[15] = 1;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a frustum matrix with the given bounds\\r\\n *\\r\\n * @param {mat4} out mat4 frustum matrix will be written into\\r\\n * @param {Number} left Left bound of the frustum\\r\\n * @param {Number} right Right bound of the frustum\\r\\n * @param {Number} bottom Bottom bound of the frustum\\r\\n * @param {Number} top Top bound of the frustum\\r\\n * @param {Number} near Near bound of the frustum\\r\\n * @param {Number} far Far bound of the frustum\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction frustum(out, left, right, bottom, top, near, far) {\\r\\n  var rl = 1 / (right - left);\\r\\n  var tb = 1 / (top - bottom);\\r\\n  var nf = 1 / (near - far);\\r\\n  out[0] = near * 2 * rl;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = near * 2 * tb;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = (right + left) * rl;\\r\\n  out[9] = (top + bottom) * tb;\\r\\n  out[10] = (far + near) * nf;\\r\\n  out[11] = -1;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[14] = far * near * 2 * nf;\\r\\n  out[15] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a perspective projection matrix with the given bounds.\\r\\n * Passing null/undefined/no value for far will generate infinite projection matrix.\\r\\n *\\r\\n * @param {mat4} out mat4 frustum matrix will be written into\\r\\n * @param {number} fovy Vertical field of view in radians\\r\\n * @param {number} aspect Aspect ratio. typically viewport width/height\\r\\n * @param {number} near Near bound of the frustum\\r\\n * @param {number} far Far bound of the frustum, can be null or Infinity\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction perspective(out, fovy, aspect, near, far) {\\r\\n  var f = 1.0 / Math.tan(fovy / 2),\\r\\n      nf = void 0;\\r\\n  out[0] = f / aspect;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = f;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = 0;\\r\\n  out[11] = -1;\\r\\n  out[12] = 0;\\r\\n  out[13] = 0;\\r\\n  out[15] = 0;\\r\\n  if (far != null && far !== Infinity) {\\r\\n    nf = 1 / (near - far);\\r\\n    out[10] = (far + near) * nf;\\r\\n    out[14] = 2 * far * near * nf;\\r\\n  } else {\\r\\n    out[10] = -1;\\r\\n    out[14] = -2 * near;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a perspective projection matrix with the given field of view.\\r\\n * This is primarily useful for generating projection matrices to be used\\r\\n * with the still experiemental WebVR API.\\r\\n *\\r\\n * @param {mat4} out mat4 frustum matrix will be written into\\r\\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\\r\\n * @param {number} near Near bound of the frustum\\r\\n * @param {number} far Far bound of the frustum\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\\r\\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\\r\\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\\r\\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\\r\\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\\r\\n  var xScale = 2.0 / (leftTan + rightTan);\\r\\n  var yScale = 2.0 / (upTan + downTan);\\r\\n\\r\\n  out[0] = xScale;\\r\\n  out[1] = 0.0;\\r\\n  out[2] = 0.0;\\r\\n  out[3] = 0.0;\\r\\n  out[4] = 0.0;\\r\\n  out[5] = yScale;\\r\\n  out[6] = 0.0;\\r\\n  out[7] = 0.0;\\r\\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\\r\\n  out[9] = (upTan - downTan) * yScale * 0.5;\\r\\n  out[10] = far / (near - far);\\r\\n  out[11] = -1.0;\\r\\n  out[12] = 0.0;\\r\\n  out[13] = 0.0;\\r\\n  out[14] = far * near / (near - far);\\r\\n  out[15] = 0.0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a orthogonal projection matrix with the given bounds\\r\\n *\\r\\n * @param {mat4} out mat4 frustum matrix will be written into\\r\\n * @param {number} left Left bound of the frustum\\r\\n * @param {number} right Right bound of the frustum\\r\\n * @param {number} bottom Bottom bound of the frustum\\r\\n * @param {number} top Top bound of the frustum\\r\\n * @param {number} near Near bound of the frustum\\r\\n * @param {number} far Far bound of the frustum\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction ortho(out, left, right, bottom, top, near, far) {\\r\\n  var lr = 1 / (left - right);\\r\\n  var bt = 1 / (bottom - top);\\r\\n  var nf = 1 / (near - far);\\r\\n  out[0] = -2 * lr;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 0;\\r\\n  out[4] = 0;\\r\\n  out[5] = -2 * bt;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  out[8] = 0;\\r\\n  out[9] = 0;\\r\\n  out[10] = 2 * nf;\\r\\n  out[11] = 0;\\r\\n  out[12] = (left + right) * lr;\\r\\n  out[13] = (top + bottom) * bt;\\r\\n  out[14] = (far + near) * nf;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\\r\\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\\r\\n *\\r\\n * @param {mat4} out mat4 frustum matrix will be written into\\r\\n * @param {vec3} eye Position of the viewer\\r\\n * @param {vec3} center Point the viewer is looking at\\r\\n * @param {vec3} up vec3 pointing up\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction lookAt(out, eye, center, up) {\\r\\n  var x0 = void 0,\\r\\n      x1 = void 0,\\r\\n      x2 = void 0,\\r\\n      y0 = void 0,\\r\\n      y1 = void 0,\\r\\n      y2 = void 0,\\r\\n      z0 = void 0,\\r\\n      z1 = void 0,\\r\\n      z2 = void 0,\\r\\n      len = void 0;\\r\\n  var eyex = eye[0];\\r\\n  var eyey = eye[1];\\r\\n  var eyez = eye[2];\\r\\n  var upx = up[0];\\r\\n  var upy = up[1];\\r\\n  var upz = up[2];\\r\\n  var centerx = center[0];\\r\\n  var centery = center[1];\\r\\n  var centerz = center[2];\\r\\n\\r\\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"]) {\\r\\n    return identity(out);\\r\\n  }\\r\\n\\r\\n  z0 = eyex - centerx;\\r\\n  z1 = eyey - centery;\\r\\n  z2 = eyez - centerz;\\r\\n\\r\\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\\r\\n  z0 *= len;\\r\\n  z1 *= len;\\r\\n  z2 *= len;\\r\\n\\r\\n  x0 = upy * z2 - upz * z1;\\r\\n  x1 = upz * z0 - upx * z2;\\r\\n  x2 = upx * z1 - upy * z0;\\r\\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\\r\\n  if (!len) {\\r\\n    x0 = 0;\\r\\n    x1 = 0;\\r\\n    x2 = 0;\\r\\n  } else {\\r\\n    len = 1 / len;\\r\\n    x0 *= len;\\r\\n    x1 *= len;\\r\\n    x2 *= len;\\r\\n  }\\r\\n\\r\\n  y0 = z1 * x2 - z2 * x1;\\r\\n  y1 = z2 * x0 - z0 * x2;\\r\\n  y2 = z0 * x1 - z1 * x0;\\r\\n\\r\\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\\r\\n  if (!len) {\\r\\n    y0 = 0;\\r\\n    y1 = 0;\\r\\n    y2 = 0;\\r\\n  } else {\\r\\n    len = 1 / len;\\r\\n    y0 *= len;\\r\\n    y1 *= len;\\r\\n    y2 *= len;\\r\\n  }\\r\\n\\r\\n  out[0] = x0;\\r\\n  out[1] = y0;\\r\\n  out[2] = z0;\\r\\n  out[3] = 0;\\r\\n  out[4] = x1;\\r\\n  out[5] = y1;\\r\\n  out[6] = z1;\\r\\n  out[7] = 0;\\r\\n  out[8] = x2;\\r\\n  out[9] = y2;\\r\\n  out[10] = z2;\\r\\n  out[11] = 0;\\r\\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\\r\\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\\r\\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\\r\\n  out[15] = 1;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a matrix that makes something look at something else.\\r\\n *\\r\\n * @param {mat4} out mat4 frustum matrix will be written into\\r\\n * @param {vec3} eye Position of the viewer\\r\\n * @param {vec3} center Point the viewer is looking at\\r\\n * @param {vec3} up vec3 pointing up\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction targetTo(out, eye, target, up) {\\r\\n  var eyex = eye[0],\\r\\n      eyey = eye[1],\\r\\n      eyez = eye[2],\\r\\n      upx = up[0],\\r\\n      upy = up[1],\\r\\n      upz = up[2];\\r\\n\\r\\n  var z0 = eyex - target[0],\\r\\n      z1 = eyey - target[1],\\r\\n      z2 = eyez - target[2];\\r\\n\\r\\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\\r\\n  if (len > 0) {\\r\\n    len = 1 / Math.sqrt(len);\\r\\n    z0 *= len;\\r\\n    z1 *= len;\\r\\n    z2 *= len;\\r\\n  }\\r\\n\\r\\n  var x0 = upy * z2 - upz * z1,\\r\\n      x1 = upz * z0 - upx * z2,\\r\\n      x2 = upx * z1 - upy * z0;\\r\\n\\r\\n  len = x0 * x0 + x1 * x1 + x2 * x2;\\r\\n  if (len > 0) {\\r\\n    len = 1 / Math.sqrt(len);\\r\\n    x0 *= len;\\r\\n    x1 *= len;\\r\\n    x2 *= len;\\r\\n  }\\r\\n\\r\\n  out[0] = x0;\\r\\n  out[1] = x1;\\r\\n  out[2] = x2;\\r\\n  out[3] = 0;\\r\\n  out[4] = z1 * x2 - z2 * x1;\\r\\n  out[5] = z2 * x0 - z0 * x2;\\r\\n  out[6] = z0 * x1 - z1 * x0;\\r\\n  out[7] = 0;\\r\\n  out[8] = z0;\\r\\n  out[9] = z1;\\r\\n  out[10] = z2;\\r\\n  out[11] = 0;\\r\\n  out[12] = eyex;\\r\\n  out[13] = eyey;\\r\\n  out[14] = eyez;\\r\\n  out[15] = 1;\\r\\n  return out;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a mat4\\r\\n *\\r\\n * @param {mat4} a matrix to represent as a string\\r\\n * @returns {String} string representation of the matrix\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns Frobenius norm of a mat4\\r\\n *\\r\\n * @param {mat4} a the matrix to calculate Frobenius norm of\\r\\n * @returns {Number} Frobenius norm\\r\\n */\\r\\nfunction frob(a) {\\r\\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat4's\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the first operand\\r\\n * @param {mat4} b the second operand\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  out[3] = a[3] + b[3];\\r\\n  out[4] = a[4] + b[4];\\r\\n  out[5] = a[5] + b[5];\\r\\n  out[6] = a[6] + b[6];\\r\\n  out[7] = a[7] + b[7];\\r\\n  out[8] = a[8] + b[8];\\r\\n  out[9] = a[9] + b[9];\\r\\n  out[10] = a[10] + b[10];\\r\\n  out[11] = a[11] + b[11];\\r\\n  out[12] = a[12] + b[12];\\r\\n  out[13] = a[13] + b[13];\\r\\n  out[14] = a[14] + b[14];\\r\\n  out[15] = a[15] + b[15];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts matrix b from matrix a\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the first operand\\r\\n * @param {mat4} b the second operand\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  out[2] = a[2] - b[2];\\r\\n  out[3] = a[3] - b[3];\\r\\n  out[4] = a[4] - b[4];\\r\\n  out[5] = a[5] - b[5];\\r\\n  out[6] = a[6] - b[6];\\r\\n  out[7] = a[7] - b[7];\\r\\n  out[8] = a[8] - b[8];\\r\\n  out[9] = a[9] - b[9];\\r\\n  out[10] = a[10] - b[10];\\r\\n  out[11] = a[11] - b[11];\\r\\n  out[12] = a[12] - b[12];\\r\\n  out[13] = a[13] - b[13];\\r\\n  out[14] = a[14] - b[14];\\r\\n  out[15] = a[15] - b[15];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiply each element of the matrix by a scalar.\\r\\n *\\r\\n * @param {mat4} out the receiving matrix\\r\\n * @param {mat4} a the matrix to scale\\r\\n * @param {Number} b amount to scale the matrix's elements by\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction multiplyScalar(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  out[3] = a[3] * b;\\r\\n  out[4] = a[4] * b;\\r\\n  out[5] = a[5] * b;\\r\\n  out[6] = a[6] * b;\\r\\n  out[7] = a[7] * b;\\r\\n  out[8] = a[8] * b;\\r\\n  out[9] = a[9] * b;\\r\\n  out[10] = a[10] * b;\\r\\n  out[11] = a[11] * b;\\r\\n  out[12] = a[12] * b;\\r\\n  out[13] = a[13] * b;\\r\\n  out[14] = a[14] * b;\\r\\n  out[15] = a[15] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\\r\\n *\\r\\n * @param {mat4} out the receiving vector\\r\\n * @param {mat4} a the first operand\\r\\n * @param {mat4} b the second operand\\r\\n * @param {Number} scale the amount to scale b's elements by before adding\\r\\n * @returns {mat4} out\\r\\n */\\r\\nfunction multiplyScalarAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  out[2] = a[2] + b[2] * scale;\\r\\n  out[3] = a[3] + b[3] * scale;\\r\\n  out[4] = a[4] + b[4] * scale;\\r\\n  out[5] = a[5] + b[5] * scale;\\r\\n  out[6] = a[6] + b[6] * scale;\\r\\n  out[7] = a[7] + b[7] * scale;\\r\\n  out[8] = a[8] + b[8] * scale;\\r\\n  out[9] = a[9] + b[9] * scale;\\r\\n  out[10] = a[10] + b[10] * scale;\\r\\n  out[11] = a[11] + b[11] * scale;\\r\\n  out[12] = a[12] + b[12] * scale;\\r\\n  out[13] = a[13] + b[13] * scale;\\r\\n  out[14] = a[14] + b[14] * scale;\\r\\n  out[15] = a[15] + b[15] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {mat4} a The first matrix.\\r\\n * @param {mat4} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the matrices have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {mat4} a The first matrix.\\r\\n * @param {mat4} b The second matrix.\\r\\n * @returns {Boolean} True if the matrices are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var a4 = a[4],\\r\\n      a5 = a[5],\\r\\n      a6 = a[6],\\r\\n      a7 = a[7];\\r\\n  var a8 = a[8],\\r\\n      a9 = a[9],\\r\\n      a10 = a[10],\\r\\n      a11 = a[11];\\r\\n  var a12 = a[12],\\r\\n      a13 = a[13],\\r\\n      a14 = a[14],\\r\\n      a15 = a[15];\\r\\n\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3];\\r\\n  var b4 = b[4],\\r\\n      b5 = b[5],\\r\\n      b6 = b[6],\\r\\n      b7 = b[7];\\r\\n  var b8 = b[8],\\r\\n      b9 = b[9],\\r\\n      b10 = b[10],\\r\\n      b11 = b[11];\\r\\n  var b12 = b[12],\\r\\n      b13 = b[13],\\r\\n      b14 = b[14],\\r\\n      b15 = b[15];\\r\\n\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a15), Math.abs(b15));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat4.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link mat4.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/quat.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/quat.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, identity, setAxisAngle, getAxisAngle, multiply, rotateX, rotateY, rotateZ, calculateW, slerp, random, invert, conjugate, fromMat3, fromEuler, str, clone, fromValues, copy, set, add, mul, scale, dot, lerp, length, len, squaredLength, sqrLen, normalize, exactEquals, equals, rotationTo, sqlerp, setAxes */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"setAxisAngle\\\", function() { return setAxisAngle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getAxisAngle\\\", function() { return getAxisAngle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateX\\\", function() { return rotateX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateY\\\", function() { return rotateY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateZ\\\", function() { return rotateZ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"calculateW\\\", function() { return calculateW; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"slerp\\\", function() { return slerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"random\\\", function() { return random; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"invert\\\", function() { return invert; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"conjugate\\\", function() { return conjugate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromMat3\\\", function() { return fromMat3; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromEuler\\\", function() { return fromEuler; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dot\\\", function() { return dot; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"lerp\\\", function() { return lerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"length\\\", function() { return length; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"len\\\", function() { return len; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredLength\\\", function() { return squaredLength; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrLen\\\", function() { return sqrLen; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"normalize\\\", function() { return normalize; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotationTo\\\", function() { return rotationTo; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqlerp\\\", function() { return sqlerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"setAxes\\\", function() { return setAxes; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat3.js\\\");\\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec3.js\\\");\\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec4.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec4.js\\\");\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/**\\r\\n * Quaternion\\r\\n * @module quat\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new identity quat\\r\\n *\\r\\n * @returns {quat} a new quaternion\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[0] = 0;\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n  }\\r\\n  out[3] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set a quat to the identity quaternion\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction identity(out) {\\r\\n  out[0] = 0;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 1;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Sets a quat from the given angle and rotation axis,\\r\\n * then returns it.\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {vec3} axis the axis around which to rotate\\r\\n * @param {Number} rad the angle in radians\\r\\n * @returns {quat} out\\r\\n **/\\r\\nfunction setAxisAngle(out, axis, rad) {\\r\\n  rad = rad * 0.5;\\r\\n  var s = Math.sin(rad);\\r\\n  out[0] = s * axis[0];\\r\\n  out[1] = s * axis[1];\\r\\n  out[2] = s * axis[2];\\r\\n  out[3] = Math.cos(rad);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gets the rotation axis and angle for a given\\r\\n *  quaternion. If a quaternion is created with\\r\\n *  setAxisAngle, this method will return the same\\r\\n *  values as providied in the original parameter list\\r\\n *  OR functionally equivalent values.\\r\\n * Example: The quaternion formed by axis [0, 0, 1] and\\r\\n *  angle -90 is the same as the quaternion formed by\\r\\n *  [0, 0, 1] and 270. This method favors the latter.\\r\\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\\r\\n * @param  {quat} q     Quaternion to be decomposed\\r\\n * @return {Number}     Angle, in radians, of the rotation\\r\\n */\\r\\nfunction getAxisAngle(out_axis, q) {\\r\\n  var rad = Math.acos(q[3]) * 2.0;\\r\\n  var s = Math.sin(rad / 2.0);\\r\\n  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"]) {\\r\\n    out_axis[0] = q[0] / s;\\r\\n    out_axis[1] = q[1] / s;\\r\\n    out_axis[2] = q[2] / s;\\r\\n  } else {\\r\\n    // If s is zero, return any axis (no rotation - axis does not matter)\\r\\n    out_axis[0] = 1;\\r\\n    out_axis[1] = 0;\\r\\n    out_axis[2] = 0;\\r\\n  }\\r\\n  return rad;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two quat's\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a the first operand\\r\\n * @param {quat} b the second operand\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  var ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2],\\r\\n      aw = a[3];\\r\\n  var bx = b[0],\\r\\n      by = b[1],\\r\\n      bz = b[2],\\r\\n      bw = b[3];\\r\\n\\r\\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\\r\\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\\r\\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\\r\\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a quaternion by the given angle about the X axis\\r\\n *\\r\\n * @param {quat} out quat receiving operation result\\r\\n * @param {quat} a quat to rotate\\r\\n * @param {number} rad angle (in radians) to rotate\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction rotateX(out, a, rad) {\\r\\n  rad *= 0.5;\\r\\n\\r\\n  var ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2],\\r\\n      aw = a[3];\\r\\n  var bx = Math.sin(rad),\\r\\n      bw = Math.cos(rad);\\r\\n\\r\\n  out[0] = ax * bw + aw * bx;\\r\\n  out[1] = ay * bw + az * bx;\\r\\n  out[2] = az * bw - ay * bx;\\r\\n  out[3] = aw * bw - ax * bx;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a quaternion by the given angle about the Y axis\\r\\n *\\r\\n * @param {quat} out quat receiving operation result\\r\\n * @param {quat} a quat to rotate\\r\\n * @param {number} rad angle (in radians) to rotate\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction rotateY(out, a, rad) {\\r\\n  rad *= 0.5;\\r\\n\\r\\n  var ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2],\\r\\n      aw = a[3];\\r\\n  var by = Math.sin(rad),\\r\\n      bw = Math.cos(rad);\\r\\n\\r\\n  out[0] = ax * bw - az * by;\\r\\n  out[1] = ay * bw + aw * by;\\r\\n  out[2] = az * bw + ax * by;\\r\\n  out[3] = aw * bw - ay * by;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a quaternion by the given angle about the Z axis\\r\\n *\\r\\n * @param {quat} out quat receiving operation result\\r\\n * @param {quat} a quat to rotate\\r\\n * @param {number} rad angle (in radians) to rotate\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction rotateZ(out, a, rad) {\\r\\n  rad *= 0.5;\\r\\n\\r\\n  var ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2],\\r\\n      aw = a[3];\\r\\n  var bz = Math.sin(rad),\\r\\n      bw = Math.cos(rad);\\r\\n\\r\\n  out[0] = ax * bw + ay * bz;\\r\\n  out[1] = ay * bw - ax * bz;\\r\\n  out[2] = az * bw + aw * bz;\\r\\n  out[3] = aw * bw - az * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the W component of a quat from the X, Y, and Z components.\\r\\n * Assumes that quaternion is 1 unit in length.\\r\\n * Any existing W component will be ignored.\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a quat to calculate W component of\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction calculateW(out, a) {\\r\\n  var x = a[0],\\r\\n      y = a[1],\\r\\n      z = a[2];\\r\\n\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  out[2] = z;\\r\\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Performs a spherical linear interpolation between two quat\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a the first operand\\r\\n * @param {quat} b the second operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction slerp(out, a, b, t) {\\r\\n  // benchmarks:\\r\\n  //    http://jsperf.com/quaternion-slerp-implementations\\r\\n  var ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2],\\r\\n      aw = a[3];\\r\\n  var bx = b[0],\\r\\n      by = b[1],\\r\\n      bz = b[2],\\r\\n      bw = b[3];\\r\\n\\r\\n  var omega = void 0,\\r\\n      cosom = void 0,\\r\\n      sinom = void 0,\\r\\n      scale0 = void 0,\\r\\n      scale1 = void 0;\\r\\n\\r\\n  // calc cosine\\r\\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\\r\\n  // adjust signs (if necessary)\\r\\n  if (cosom < 0.0) {\\r\\n    cosom = -cosom;\\r\\n    bx = -bx;\\r\\n    by = -by;\\r\\n    bz = -bz;\\r\\n    bw = -bw;\\r\\n  }\\r\\n  // calculate coefficients\\r\\n  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"]) {\\r\\n    // standard case (slerp)\\r\\n    omega = Math.acos(cosom);\\r\\n    sinom = Math.sin(omega);\\r\\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\\r\\n    scale1 = Math.sin(t * omega) / sinom;\\r\\n  } else {\\r\\n    // \\\"from\\\" and \\\"to\\\" quaternions are very close\\r\\n    //  ... so we can do a linear interpolation\\r\\n    scale0 = 1.0 - t;\\r\\n    scale1 = t;\\r\\n  }\\r\\n  // calculate final values\\r\\n  out[0] = scale0 * ax + scale1 * bx;\\r\\n  out[1] = scale0 * ay + scale1 * by;\\r\\n  out[2] = scale0 * az + scale1 * bz;\\r\\n  out[3] = scale0 * aw + scale1 * bw;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a random quaternion\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction random(out) {\\r\\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\\r\\n  // TODO: Calling random 3 times is probably not the fastest solution\\r\\n  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]();\\r\\n  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]();\\r\\n  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]();\\r\\n\\r\\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\\r\\n  var sqrtU1 = Math.sqrt(u1);\\r\\n\\r\\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\\r\\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\\r\\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\\r\\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the inverse of a quat\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a quat to calculate inverse of\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction invert(out, a) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\\r\\n  var invDot = dot ? 1.0 / dot : 0;\\r\\n\\r\\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\\r\\n\\r\\n  out[0] = -a0 * invDot;\\r\\n  out[1] = -a1 * invDot;\\r\\n  out[2] = -a2 * invDot;\\r\\n  out[3] = a3 * invDot;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the conjugate of a quat\\r\\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a quat to calculate conjugate of\\r\\n * @returns {quat} out\\r\\n */\\r\\nfunction conjugate(out, a) {\\r\\n  out[0] = -a[0];\\r\\n  out[1] = -a[1];\\r\\n  out[2] = -a[2];\\r\\n  out[3] = a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a quaternion from the given 3x3 rotation matrix.\\r\\n *\\r\\n * NOTE: The resultant quaternion is not normalized, so you should be sure\\r\\n * to renormalize the quaternion yourself where necessary.\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {mat3} m rotation matrix\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nfunction fromMat3(out, m) {\\r\\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\\r\\n  // article \\\"Quaternion Calculus and Fast Animation\\\".\\r\\n  var fTrace = m[0] + m[4] + m[8];\\r\\n  var fRoot = void 0;\\r\\n\\r\\n  if (fTrace > 0.0) {\\r\\n    // |w| > 1/2, may as well choose w > 1/2\\r\\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\\r\\n    out[3] = 0.5 * fRoot;\\r\\n    fRoot = 0.5 / fRoot; // 1/(4w)\\r\\n    out[0] = (m[5] - m[7]) * fRoot;\\r\\n    out[1] = (m[6] - m[2]) * fRoot;\\r\\n    out[2] = (m[1] - m[3]) * fRoot;\\r\\n  } else {\\r\\n    // |w| <= 1/2\\r\\n    var i = 0;\\r\\n    if (m[4] > m[0]) i = 1;\\r\\n    if (m[8] > m[i * 3 + i]) i = 2;\\r\\n    var j = (i + 1) % 3;\\r\\n    var k = (i + 2) % 3;\\r\\n\\r\\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\\r\\n    out[i] = 0.5 * fRoot;\\r\\n    fRoot = 0.5 / fRoot;\\r\\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\\r\\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\\r\\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\\r\\n  }\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a quaternion from the given euler angle x, y, z.\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {x} Angle to rotate around X axis in degrees.\\r\\n * @param {y} Angle to rotate around Y axis in degrees.\\r\\n * @param {z} Angle to rotate around Z axis in degrees.\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nfunction fromEuler(out, x, y, z) {\\r\\n  var halfToRad = 0.5 * Math.PI / 180.0;\\r\\n  x *= halfToRad;\\r\\n  y *= halfToRad;\\r\\n  z *= halfToRad;\\r\\n\\r\\n  var sx = Math.sin(x);\\r\\n  var cx = Math.cos(x);\\r\\n  var sy = Math.sin(y);\\r\\n  var cy = Math.cos(y);\\r\\n  var sz = Math.sin(z);\\r\\n  var cz = Math.cos(z);\\r\\n\\r\\n  out[0] = sx * cy * cz - cx * sy * sz;\\r\\n  out[1] = cx * sy * cz + sx * cy * sz;\\r\\n  out[2] = cx * cy * sz - sx * sy * cz;\\r\\n  out[3] = cx * cy * cz + sx * sy * sz;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a quatenion\\r\\n *\\r\\n * @param {quat} a vector to represent as a string\\r\\n * @returns {String} string representation of the vector\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new quat initialized with values from an existing quaternion\\r\\n *\\r\\n * @param {quat} a quaternion to clone\\r\\n * @returns {quat} a new quaternion\\r\\n * @function\\r\\n */\\r\\nvar clone = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"clone\\\"];\\r\\n\\r\\n/**\\r\\n * Creates a new quat initialized with the given values\\r\\n *\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @param {Number} z Z component\\r\\n * @param {Number} w W component\\r\\n * @returns {quat} a new quaternion\\r\\n * @function\\r\\n */\\r\\nvar fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"fromValues\\\"];\\r\\n\\r\\n/**\\r\\n * Copy the values from one quat to another\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a the source quaternion\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nvar copy = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"copy\\\"];\\r\\n\\r\\n/**\\r\\n * Set the components of a quat to the given values\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @param {Number} z Z component\\r\\n * @param {Number} w W component\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nvar set = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"set\\\"];\\r\\n\\r\\n/**\\r\\n * Adds two quat's\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a the first operand\\r\\n * @param {quat} b the second operand\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nvar add = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"add\\\"];\\r\\n\\r\\n/**\\r\\n * Alias for {@link quat.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Scales a quat by a scalar number\\r\\n *\\r\\n * @param {quat} out the receiving vector\\r\\n * @param {quat} a the vector to scale\\r\\n * @param {Number} b amount to scale the vector by\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nvar scale = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"scale\\\"];\\r\\n\\r\\n/**\\r\\n * Calculates the dot product of two quat's\\r\\n *\\r\\n * @param {quat} a the first operand\\r\\n * @param {quat} b the second operand\\r\\n * @returns {Number} dot product of a and b\\r\\n * @function\\r\\n */\\r\\nvar dot = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"dot\\\"];\\r\\n\\r\\n/**\\r\\n * Performs a linear interpolation between two quat's\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a the first operand\\r\\n * @param {quat} b the second operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nvar lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"lerp\\\"];\\r\\n\\r\\n/**\\r\\n * Calculates the length of a quat\\r\\n *\\r\\n * @param {quat} a vector to calculate length of\\r\\n * @returns {Number} length of a\\r\\n */\\r\\nvar length = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"length\\\"];\\r\\n\\r\\n/**\\r\\n * Alias for {@link quat.length}\\r\\n * @function\\r\\n */\\r\\nvar len = length;\\r\\n\\r\\n/**\\r\\n * Calculates the squared length of a quat\\r\\n *\\r\\n * @param {quat} a vector to calculate squared length of\\r\\n * @returns {Number} squared length of a\\r\\n * @function\\r\\n */\\r\\nvar squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"squaredLength\\\"];\\r\\n\\r\\n/**\\r\\n * Alias for {@link quat.squaredLength}\\r\\n * @function\\r\\n */\\r\\nvar sqrLen = squaredLength;\\r\\n\\r\\n/**\\r\\n * Normalize a quat\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a quaternion to normalize\\r\\n * @returns {quat} out\\r\\n * @function\\r\\n */\\r\\nvar normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"normalize\\\"];\\r\\n\\r\\n/**\\r\\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {quat} a The first quaternion.\\r\\n * @param {quat} b The second quaternion.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nvar exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"exactEquals\\\"];\\r\\n\\r\\n/**\\r\\n * Returns whether or not the quaternions have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {quat} a The first vector.\\r\\n * @param {quat} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nvar equals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\\\"equals\\\"];\\r\\n\\r\\n/**\\r\\n * Sets a quaternion to represent the shortest rotation from one\\r\\n * vector to another.\\r\\n *\\r\\n * Both vectors are assumed to be unit length.\\r\\n *\\r\\n * @param {quat} out the receiving quaternion.\\r\\n * @param {vec3} a the initial vector\\r\\n * @param {vec3} b the destination vector\\r\\n * @returns {quat} out\\r\\n */\\r\\nvar rotationTo = function () {\\r\\n  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"create\\\"]();\\r\\n  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"fromValues\\\"](1, 0, 0);\\r\\n  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"fromValues\\\"](0, 1, 0);\\r\\n\\r\\n  return function (out, a, b) {\\r\\n    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"dot\\\"](a, b);\\r\\n    if (dot < -0.999999) {\\r\\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"cross\\\"](tmpvec3, xUnitVec3, a);\\r\\n      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"len\\\"](tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"cross\\\"](tmpvec3, yUnitVec3, a);\\r\\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"normalize\\\"](tmpvec3, tmpvec3);\\r\\n      setAxisAngle(out, tmpvec3, Math.PI);\\r\\n      return out;\\r\\n    } else if (dot > 0.999999) {\\r\\n      out[0] = 0;\\r\\n      out[1] = 0;\\r\\n      out[2] = 0;\\r\\n      out[3] = 1;\\r\\n      return out;\\r\\n    } else {\\r\\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\\\"cross\\\"](tmpvec3, a, b);\\r\\n      out[0] = tmpvec3[0];\\r\\n      out[1] = tmpvec3[1];\\r\\n      out[2] = tmpvec3[2];\\r\\n      out[3] = 1 + dot;\\r\\n      return normalize(out, out);\\r\\n    }\\r\\n  };\\r\\n}();\\r\\n\\r\\n/**\\r\\n * Performs a spherical linear interpolation with two control points\\r\\n *\\r\\n * @param {quat} out the receiving quaternion\\r\\n * @param {quat} a the first operand\\r\\n * @param {quat} b the second operand\\r\\n * @param {quat} c the third operand\\r\\n * @param {quat} d the fourth operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {quat} out\\r\\n */\\r\\nvar sqlerp = function () {\\r\\n  var temp1 = create();\\r\\n  var temp2 = create();\\r\\n\\r\\n  return function (out, a, b, c, d, t) {\\r\\n    slerp(temp1, a, d, t);\\r\\n    slerp(temp2, b, c, t);\\r\\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\\r\\n\\r\\n    return out;\\r\\n  };\\r\\n}();\\r\\n\\r\\n/**\\r\\n * Sets the specified quaternion with values corresponding to the given\\r\\n * axes. Each axis is a vec3 and is expected to be unit length and\\r\\n * perpendicular to all other specified axes.\\r\\n *\\r\\n * @param {vec3} view  the vector representing the viewing direction\\r\\n * @param {vec3} right the vector representing the local \\\"right\\\" direction\\r\\n * @param {vec3} up    the vector representing the local \\\"up\\\" direction\\r\\n * @returns {quat} out\\r\\n */\\r\\nvar setAxes = function () {\\r\\n  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_1__[\\\"create\\\"]();\\r\\n\\r\\n  return function (out, view, right, up) {\\r\\n    matr[0] = right[0];\\r\\n    matr[3] = right[1];\\r\\n    matr[6] = right[2];\\r\\n\\r\\n    matr[1] = up[0];\\r\\n    matr[4] = up[1];\\r\\n    matr[7] = up[2];\\r\\n\\r\\n    matr[2] = -view[0];\\r\\n    matr[5] = -view[1];\\r\\n    matr[8] = -view[2];\\r\\n\\r\\n    return normalize(out, fromMat3(out, matr));\\r\\n  };\\r\\n}();\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/quat2.js\\\":\\n/*!*******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/quat2.js ***!\\n  \\\\*******************************************************/\\n/*! exports provided: create, clone, fromValues, fromRotationTranslationValues, fromRotationTranslation, fromTranslation, fromRotation, fromMat4, copy, identity, set, getReal, getDual, setReal, setDual, getTranslation, translate, rotateX, rotateY, rotateZ, rotateByQuatAppend, rotateByQuatPrepend, rotateAroundAxis, add, multiply, mul, scale, dot, lerp, invert, conjugate, length, len, squaredLength, sqrLen, normalize, str, exactEquals, equals */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotationTranslationValues\\\", function() { return fromRotationTranslationValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotationTranslation\\\", function() { return fromRotationTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromTranslation\\\", function() { return fromTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromRotation\\\", function() { return fromRotation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromMat4\\\", function() { return fromMat4; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getReal\\\", function() { return getReal; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getDual\\\", function() { return getDual; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"setReal\\\", function() { return setReal; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"setDual\\\", function() { return setDual; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getTranslation\\\", function() { return getTranslation; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"translate\\\", function() { return translate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateX\\\", function() { return rotateX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateY\\\", function() { return rotateY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateZ\\\", function() { return rotateZ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateByQuatAppend\\\", function() { return rotateByQuatAppend; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateByQuatPrepend\\\", function() { return rotateByQuatPrepend; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateAroundAxis\\\", function() { return rotateAroundAxis; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dot\\\", function() { return dot; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"lerp\\\", function() { return lerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"invert\\\", function() { return invert; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"conjugate\\\", function() { return conjugate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"length\\\", function() { return length; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"len\\\", function() { return len; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredLength\\\", function() { return squaredLength; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrLen\\\", function() { return sqrLen; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"normalize\\\", function() { return normalize; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/quat.js\\\");\\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/mat4.js\\\");\\n\\r\\n\\r\\n\\r\\n\\r\\n/**\\r\\n * Dual Quaternion<br>\\r\\n * Format: [real, dual]<br>\\r\\n * Quaternion format: XYZW<br>\\r\\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\\r\\n * @module quat2\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new identity dual quat\\r\\n *\\r\\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\\r\\n */\\r\\nfunction create() {\\r\\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](8);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    dq[0] = 0;\\r\\n    dq[1] = 0;\\r\\n    dq[2] = 0;\\r\\n    dq[4] = 0;\\r\\n    dq[5] = 0;\\r\\n    dq[6] = 0;\\r\\n    dq[7] = 0;\\r\\n  }\\r\\n  dq[3] = 1;\\r\\n  return dq;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new quat initialized with values from an existing quaternion\\r\\n *\\r\\n * @param {quat2} a dual quaternion to clone\\r\\n * @returns {quat2} new dual quaternion\\r\\n * @function\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](8);\\r\\n  dq[0] = a[0];\\r\\n  dq[1] = a[1];\\r\\n  dq[2] = a[2];\\r\\n  dq[3] = a[3];\\r\\n  dq[4] = a[4];\\r\\n  dq[5] = a[5];\\r\\n  dq[6] = a[6];\\r\\n  dq[7] = a[7];\\r\\n  return dq;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new dual quat initialized with the given values\\r\\n *\\r\\n * @param {Number} x1 X component\\r\\n * @param {Number} y1 Y component\\r\\n * @param {Number} z1 Z component\\r\\n * @param {Number} w1 W component\\r\\n * @param {Number} x2 X component\\r\\n * @param {Number} y2 Y component\\r\\n * @param {Number} z2 Z component\\r\\n * @param {Number} w2 W component\\r\\n * @returns {quat2} new dual quaternion\\r\\n * @function\\r\\n */\\r\\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\\r\\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](8);\\r\\n  dq[0] = x1;\\r\\n  dq[1] = y1;\\r\\n  dq[2] = z1;\\r\\n  dq[3] = w1;\\r\\n  dq[4] = x2;\\r\\n  dq[5] = y2;\\r\\n  dq[6] = z2;\\r\\n  dq[7] = w2;\\r\\n  return dq;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new dual quat from the given values (quat and translation)\\r\\n *\\r\\n * @param {Number} x1 X component\\r\\n * @param {Number} y1 Y component\\r\\n * @param {Number} z1 Z component\\r\\n * @param {Number} w1 W component\\r\\n * @param {Number} x2 X component (translation)\\r\\n * @param {Number} y2 Y component (translation)\\r\\n * @param {Number} z2 Z component (translation)\\r\\n * @returns {quat2} new dual quaternion\\r\\n * @function\\r\\n */\\r\\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\\r\\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](8);\\r\\n  dq[0] = x1;\\r\\n  dq[1] = y1;\\r\\n  dq[2] = z1;\\r\\n  dq[3] = w1;\\r\\n  var ax = x2 * 0.5,\\r\\n      ay = y2 * 0.5,\\r\\n      az = z2 * 0.5;\\r\\n  dq[4] = ax * w1 + ay * z1 - az * y1;\\r\\n  dq[5] = ay * w1 + az * x1 - ax * z1;\\r\\n  dq[6] = az * w1 + ax * y1 - ay * x1;\\r\\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\\r\\n  return dq;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a dual quat from a quaternion and a translation\\r\\n *\\r\\n * @param {quat2} dual quaternion receiving operation result\\r\\n * @param {quat} q quaternion\\r\\n * @param {vec3} t tranlation vector\\r\\n * @returns {quat2} dual quaternion receiving operation result\\r\\n * @function\\r\\n */\\r\\nfunction fromRotationTranslation(out, q, t) {\\r\\n  var ax = t[0] * 0.5,\\r\\n      ay = t[1] * 0.5,\\r\\n      az = t[2] * 0.5,\\r\\n      bx = q[0],\\r\\n      by = q[1],\\r\\n      bz = q[2],\\r\\n      bw = q[3];\\r\\n  out[0] = bx;\\r\\n  out[1] = by;\\r\\n  out[2] = bz;\\r\\n  out[3] = bw;\\r\\n  out[4] = ax * bw + ay * bz - az * by;\\r\\n  out[5] = ay * bw + az * bx - ax * bz;\\r\\n  out[6] = az * bw + ax * by - ay * bx;\\r\\n  out[7] = -ax * bx - ay * by - az * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a dual quat from a translation\\r\\n *\\r\\n * @param {quat2} dual quaternion receiving operation result\\r\\n * @param {vec3} t translation vector\\r\\n * @returns {quat2} dual quaternion receiving operation result\\r\\n * @function\\r\\n */\\r\\nfunction fromTranslation(out, t) {\\r\\n  out[0] = 0;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 1;\\r\\n  out[4] = t[0] * 0.5;\\r\\n  out[5] = t[1] * 0.5;\\r\\n  out[6] = t[2] * 0.5;\\r\\n  out[7] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a dual quat from a quaternion\\r\\n *\\r\\n * @param {quat2} dual quaternion receiving operation result\\r\\n * @param {quat} q the quaternion\\r\\n * @returns {quat2} dual quaternion receiving operation result\\r\\n * @function\\r\\n */\\r\\nfunction fromRotation(out, q) {\\r\\n  out[0] = q[0];\\r\\n  out[1] = q[1];\\r\\n  out[2] = q[2];\\r\\n  out[3] = q[3];\\r\\n  out[4] = 0;\\r\\n  out[5] = 0;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new dual quat from a matrix (4x4)\\r\\n *\\r\\n * @param {quat2} out the dual quaternion\\r\\n * @param {mat4} a the matrix\\r\\n * @returns {quat2} dual quat receiving operation result\\r\\n * @function\\r\\n */\\r\\nfunction fromMat4(out, a) {\\r\\n  //TODO Optimize this\\r\\n  var outer = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"create\\\"]();\\r\\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__[\\\"getRotation\\\"](outer, a);\\r\\n  var t = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](3);\\r\\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__[\\\"getTranslation\\\"](t, a);\\r\\n  fromRotationTranslation(out, outer, t);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one dual quat to another\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the source dual quaternion\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = a[4];\\r\\n  out[5] = a[5];\\r\\n  out[6] = a[6];\\r\\n  out[7] = a[7];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set a dual quat to the identity dual quaternion\\r\\n *\\r\\n * @param {quat2} out the receiving quaternion\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction identity(out) {\\r\\n  out[0] = 0;\\r\\n  out[1] = 0;\\r\\n  out[2] = 0;\\r\\n  out[3] = 1;\\r\\n  out[4] = 0;\\r\\n  out[5] = 0;\\r\\n  out[6] = 0;\\r\\n  out[7] = 0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a dual quat to the given values\\r\\n *\\r\\n * @param {quat2} out the receiving quaternion\\r\\n * @param {Number} x1 X component\\r\\n * @param {Number} y1 Y component\\r\\n * @param {Number} z1 Z component\\r\\n * @param {Number} w1 W component\\r\\n * @param {Number} x2 X component\\r\\n * @param {Number} y2 Y component\\r\\n * @param {Number} z2 Z component\\r\\n * @param {Number} w2 W component\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\\r\\n  out[0] = x1;\\r\\n  out[1] = y1;\\r\\n  out[2] = z1;\\r\\n  out[3] = w1;\\r\\n\\r\\n  out[4] = x2;\\r\\n  out[5] = y2;\\r\\n  out[6] = z2;\\r\\n  out[7] = w2;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gets the real part of a dual quat\\r\\n * @param  {quat} out real part\\r\\n * @param  {quat2} a Dual Quaternion\\r\\n * @return {quat} real part\\r\\n */\\r\\nvar getReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"copy\\\"];\\r\\n\\r\\n/**\\r\\n * Gets the dual part of a dual quat\\r\\n * @param  {quat} out dual part\\r\\n * @param  {quat2} a Dual Quaternion\\r\\n * @return {quat} dual part\\r\\n */\\r\\nfunction getDual(out, a) {\\r\\n  out[0] = a[4];\\r\\n  out[1] = a[5];\\r\\n  out[2] = a[6];\\r\\n  out[3] = a[7];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the real component of a dual quat to the given quaternion\\r\\n *\\r\\n * @param {quat2} out the receiving quaternion\\r\\n * @param {quat} q a quaternion representing the real part\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nvar setReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"copy\\\"];\\r\\n\\r\\n/**\\r\\n * Set the dual component of a dual quat to the given quaternion\\r\\n *\\r\\n * @param {quat2} out the receiving quaternion\\r\\n * @param {quat} q a quaternion representing the dual part\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nfunction setDual(out, q) {\\r\\n  out[4] = q[0];\\r\\n  out[5] = q[1];\\r\\n  out[6] = q[2];\\r\\n  out[7] = q[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gets the translation of a normalized dual quat\\r\\n * @param  {vec3} out translation\\r\\n * @param  {quat2} a Dual Quaternion to be decomposed\\r\\n * @return {vec3} translation\\r\\n */\\r\\nfunction getTranslation(out, a) {\\r\\n  var ax = a[4],\\r\\n      ay = a[5],\\r\\n      az = a[6],\\r\\n      aw = a[7],\\r\\n      bx = -a[0],\\r\\n      by = -a[1],\\r\\n      bz = -a[2],\\r\\n      bw = a[3];\\r\\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\\r\\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\\r\\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Translates a dual quat by the given vector\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the dual quaternion to translate\\r\\n * @param {vec3} v vector to translate by\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction translate(out, a, v) {\\r\\n  var ax1 = a[0],\\r\\n      ay1 = a[1],\\r\\n      az1 = a[2],\\r\\n      aw1 = a[3],\\r\\n      bx1 = v[0] * 0.5,\\r\\n      by1 = v[1] * 0.5,\\r\\n      bz1 = v[2] * 0.5,\\r\\n      ax2 = a[4],\\r\\n      ay2 = a[5],\\r\\n      az2 = a[6],\\r\\n      aw2 = a[7];\\r\\n  out[0] = ax1;\\r\\n  out[1] = ay1;\\r\\n  out[2] = az1;\\r\\n  out[3] = aw1;\\r\\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\\r\\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\\r\\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\\r\\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a dual quat around the X axis\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the dual quaternion to rotate\\r\\n * @param {number} rad how far should the rotation be\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction rotateX(out, a, rad) {\\r\\n  var bx = -a[0],\\r\\n      by = -a[1],\\r\\n      bz = -a[2],\\r\\n      bw = a[3],\\r\\n      ax = a[4],\\r\\n      ay = a[5],\\r\\n      az = a[6],\\r\\n      aw = a[7],\\r\\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\\r\\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\\r\\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\\r\\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\\r\\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"rotateX\\\"](out, a, rad);\\r\\n  bx = out[0];\\r\\n  by = out[1];\\r\\n  bz = out[2];\\r\\n  bw = out[3];\\r\\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\\r\\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\\r\\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\\r\\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a dual quat around the Y axis\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the dual quaternion to rotate\\r\\n * @param {number} rad how far should the rotation be\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction rotateY(out, a, rad) {\\r\\n  var bx = -a[0],\\r\\n      by = -a[1],\\r\\n      bz = -a[2],\\r\\n      bw = a[3],\\r\\n      ax = a[4],\\r\\n      ay = a[5],\\r\\n      az = a[6],\\r\\n      aw = a[7],\\r\\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\\r\\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\\r\\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\\r\\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\\r\\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"rotateY\\\"](out, a, rad);\\r\\n  bx = out[0];\\r\\n  by = out[1];\\r\\n  bz = out[2];\\r\\n  bw = out[3];\\r\\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\\r\\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\\r\\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\\r\\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a dual quat around the Z axis\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the dual quaternion to rotate\\r\\n * @param {number} rad how far should the rotation be\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction rotateZ(out, a, rad) {\\r\\n  var bx = -a[0],\\r\\n      by = -a[1],\\r\\n      bz = -a[2],\\r\\n      bw = a[3],\\r\\n      ax = a[4],\\r\\n      ay = a[5],\\r\\n      az = a[6],\\r\\n      aw = a[7],\\r\\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\\r\\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\\r\\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\\r\\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\\r\\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"rotateZ\\\"](out, a, rad);\\r\\n  bx = out[0];\\r\\n  by = out[1];\\r\\n  bz = out[2];\\r\\n  bw = out[3];\\r\\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\\r\\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\\r\\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\\r\\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a dual quat by a given quaternion (a * q)\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the dual quaternion to rotate\\r\\n * @param {quat} q quaternion to rotate by\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction rotateByQuatAppend(out, a, q) {\\r\\n  var qx = q[0],\\r\\n      qy = q[1],\\r\\n      qz = q[2],\\r\\n      qw = q[3],\\r\\n      ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2],\\r\\n      aw = a[3];\\r\\n\\r\\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\\r\\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\\r\\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\\r\\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\\r\\n  ax = a[4];\\r\\n  ay = a[5];\\r\\n  az = a[6];\\r\\n  aw = a[7];\\r\\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\\r\\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\\r\\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\\r\\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a dual quat by a given quaternion (q * a)\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat} q quaternion to rotate by\\r\\n * @param {quat2} a the dual quaternion to rotate\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction rotateByQuatPrepend(out, q, a) {\\r\\n  var qx = q[0],\\r\\n      qy = q[1],\\r\\n      qz = q[2],\\r\\n      qw = q[3],\\r\\n      bx = a[0],\\r\\n      by = a[1],\\r\\n      bz = a[2],\\r\\n      bw = a[3];\\r\\n\\r\\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\\r\\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\\r\\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\\r\\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\\r\\n  bx = a[4];\\r\\n  by = a[5];\\r\\n  bz = a[6];\\r\\n  bw = a[7];\\r\\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\\r\\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\\r\\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\\r\\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotates a dual quat around a given axis. Does the normalisation automatically\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the dual quaternion to rotate\\r\\n * @param {vec3} axis the axis to rotate around\\r\\n * @param {Number} rad how far the rotation should be\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction rotateAroundAxis(out, a, axis, rad) {\\r\\n  //Special case for rad = 0\\r\\n  if (Math.abs(rad) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"]) {\\r\\n    return copy(out, a);\\r\\n  }\\r\\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\\r\\n\\r\\n  rad = rad * 0.5;\\r\\n  var s = Math.sin(rad);\\r\\n  var bx = s * axis[0] / axisLength;\\r\\n  var by = s * axis[1] / axisLength;\\r\\n  var bz = s * axis[2] / axisLength;\\r\\n  var bw = Math.cos(rad);\\r\\n\\r\\n  var ax1 = a[0],\\r\\n      ay1 = a[1],\\r\\n      az1 = a[2],\\r\\n      aw1 = a[3];\\r\\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\\r\\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\\r\\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\\r\\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\\r\\n\\r\\n  var ax = a[4],\\r\\n      ay = a[5],\\r\\n      az = a[6],\\r\\n      aw = a[7];\\r\\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\\r\\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\\r\\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\\r\\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two dual quat's\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the first operand\\r\\n * @param {quat2} b the second operand\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  out[3] = a[3] + b[3];\\r\\n  out[4] = a[4] + b[4];\\r\\n  out[5] = a[5] + b[5];\\r\\n  out[6] = a[6] + b[6];\\r\\n  out[7] = a[7] + b[7];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two dual quat's\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a the first operand\\r\\n * @param {quat2} b the second operand\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  var ax0 = a[0],\\r\\n      ay0 = a[1],\\r\\n      az0 = a[2],\\r\\n      aw0 = a[3],\\r\\n      bx1 = b[4],\\r\\n      by1 = b[5],\\r\\n      bz1 = b[6],\\r\\n      bw1 = b[7],\\r\\n      ax1 = a[4],\\r\\n      ay1 = a[5],\\r\\n      az1 = a[6],\\r\\n      aw1 = a[7],\\r\\n      bx0 = b[0],\\r\\n      by0 = b[1],\\r\\n      bz0 = b[2],\\r\\n      bw0 = b[3];\\r\\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\\r\\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\\r\\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\\r\\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\\r\\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\\r\\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\\r\\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\\r\\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link quat2.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Scales a dual quat by a scalar number\\r\\n *\\r\\n * @param {quat2} out the receiving dual quat\\r\\n * @param {quat2} a the dual quat to scale\\r\\n * @param {Number} b amount to scale the dual quat by\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nfunction scale(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  out[3] = a[3] * b;\\r\\n  out[4] = a[4] * b;\\r\\n  out[5] = a[5] * b;\\r\\n  out[6] = a[6] * b;\\r\\n  out[7] = a[7] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\\r\\n *\\r\\n * @param {quat2} a the first operand\\r\\n * @param {quat2} b the second operand\\r\\n * @returns {Number} dot product of a and b\\r\\n * @function\\r\\n */\\r\\nvar dot = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"dot\\\"];\\r\\n\\r\\n/**\\r\\n * Performs a linear interpolation between two dual quats's\\r\\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\\r\\n *\\r\\n * @param {quat2} out the receiving dual quat\\r\\n * @param {quat2} a the first operand\\r\\n * @param {quat2} b the second operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction lerp(out, a, b, t) {\\r\\n  var mt = 1 - t;\\r\\n  if (dot(a, b) < 0) t = -t;\\r\\n\\r\\n  out[0] = a[0] * mt + b[0] * t;\\r\\n  out[1] = a[1] * mt + b[1] * t;\\r\\n  out[2] = a[2] * mt + b[2] * t;\\r\\n  out[3] = a[3] * mt + b[3] * t;\\r\\n  out[4] = a[4] * mt + b[4] * t;\\r\\n  out[5] = a[5] * mt + b[5] * t;\\r\\n  out[6] = a[6] * mt + b[6] * t;\\r\\n  out[7] = a[7] * mt + b[7] * t;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a dual quat to calculate inverse of\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction invert(out, a) {\\r\\n  var sqlen = squaredLength(a);\\r\\n  out[0] = -a[0] / sqlen;\\r\\n  out[1] = -a[1] / sqlen;\\r\\n  out[2] = -a[2] / sqlen;\\r\\n  out[3] = a[3] / sqlen;\\r\\n  out[4] = -a[4] / sqlen;\\r\\n  out[5] = -a[5] / sqlen;\\r\\n  out[6] = -a[6] / sqlen;\\r\\n  out[7] = a[7] / sqlen;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the conjugate of a dual quat\\r\\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\\r\\n *\\r\\n * @param {quat2} out the receiving quaternion\\r\\n * @param {quat2} a quat to calculate conjugate of\\r\\n * @returns {quat2} out\\r\\n */\\r\\nfunction conjugate(out, a) {\\r\\n  out[0] = -a[0];\\r\\n  out[1] = -a[1];\\r\\n  out[2] = -a[2];\\r\\n  out[3] = a[3];\\r\\n  out[4] = -a[4];\\r\\n  out[5] = -a[5];\\r\\n  out[6] = -a[6];\\r\\n  out[7] = a[7];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the length of a dual quat\\r\\n *\\r\\n * @param {quat2} a dual quat to calculate length of\\r\\n * @returns {Number} length of a\\r\\n * @function\\r\\n */\\r\\nvar length = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"length\\\"];\\r\\n\\r\\n/**\\r\\n * Alias for {@link quat2.length}\\r\\n * @function\\r\\n */\\r\\nvar len = length;\\r\\n\\r\\n/**\\r\\n * Calculates the squared length of a dual quat\\r\\n *\\r\\n * @param {quat2} a dual quat to calculate squared length of\\r\\n * @returns {Number} squared length of a\\r\\n * @function\\r\\n */\\r\\nvar squaredLength = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\\\"squaredLength\\\"];\\r\\n\\r\\n/**\\r\\n * Alias for {@link quat2.squaredLength}\\r\\n * @function\\r\\n */\\r\\nvar sqrLen = squaredLength;\\r\\n\\r\\n/**\\r\\n * Normalize a dual quat\\r\\n *\\r\\n * @param {quat2} out the receiving dual quaternion\\r\\n * @param {quat2} a dual quaternion to normalize\\r\\n * @returns {quat2} out\\r\\n * @function\\r\\n */\\r\\nfunction normalize(out, a) {\\r\\n  var magnitude = squaredLength(a);\\r\\n  if (magnitude > 0) {\\r\\n    magnitude = Math.sqrt(magnitude);\\r\\n\\r\\n    var a0 = a[0] / magnitude;\\r\\n    var a1 = a[1] / magnitude;\\r\\n    var a2 = a[2] / magnitude;\\r\\n    var a3 = a[3] / magnitude;\\r\\n\\r\\n    var b0 = a[4];\\r\\n    var b1 = a[5];\\r\\n    var b2 = a[6];\\r\\n    var b3 = a[7];\\r\\n\\r\\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\\r\\n\\r\\n    out[0] = a0;\\r\\n    out[1] = a1;\\r\\n    out[2] = a2;\\r\\n    out[3] = a3;\\r\\n\\r\\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\\r\\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\\r\\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\\r\\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a dual quatenion\\r\\n *\\r\\n * @param {quat2} a dual quaternion to represent as a string\\r\\n * @returns {String} string representation of the dual quat\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {quat2} a the first dual quaternion.\\r\\n * @param {quat2} b the second dual quaternion.\\r\\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {quat2} a the first dual quat.\\r\\n * @param {quat2} b the second dual quat.\\r\\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3],\\r\\n      a4 = a[4],\\r\\n      a5 = a[5],\\r\\n      a6 = a[6],\\r\\n      a7 = a[7];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3],\\r\\n      b4 = b[4],\\r\\n      b5 = b[5],\\r\\n      b6 = b[6],\\r\\n      b7 = b[7];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a7), Math.abs(b7));\\r\\n}\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec2.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/vec2.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, cross, lerp, random, transformMat2, transformMat2d, transformMat3, transformMat4, rotate, angle, str, exactEquals, equals, len, sub, mul, div, dist, sqrDist, sqrLen, forEach */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"divide\\\", function() { return divide; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ceil\\\", function() { return ceil; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"floor\\\", function() { return floor; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"min\\\", function() { return min; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"max\\\", function() { return max; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"round\\\", function() { return round; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scaleAndAdd\\\", function() { return scaleAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"distance\\\", function() { return distance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredDistance\\\", function() { return squaredDistance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"length\\\", function() { return length; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredLength\\\", function() { return squaredLength; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"negate\\\", function() { return negate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"inverse\\\", function() { return inverse; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"normalize\\\", function() { return normalize; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dot\\\", function() { return dot; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"cross\\\", function() { return cross; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"lerp\\\", function() { return lerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"random\\\", function() { return random; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat2\\\", function() { return transformMat2; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat2d\\\", function() { return transformMat2d; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat3\\\", function() { return transformMat3; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat4\\\", function() { return transformMat4; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotate\\\", function() { return rotate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"angle\\\", function() { return angle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"len\\\", function() { return len; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"div\\\", function() { return div; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dist\\\", function() { return dist; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrDist\\\", function() { return sqrDist; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrLen\\\", function() { return sqrLen; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"forEach\\\", function() { return forEach; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 2 Dimensional Vector\\r\\n * @module vec2\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new, empty vec2\\r\\n *\\r\\n * @returns {vec2} a new 2D vector\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](2);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[0] = 0;\\r\\n    out[1] = 0;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new vec2 initialized with values from an existing vector\\r\\n *\\r\\n * @param {vec2} a vector to clone\\r\\n * @returns {vec2} a new 2D vector\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](2);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new vec2 initialized with the given values\\r\\n *\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @returns {vec2} a new 2D vector\\r\\n */\\r\\nfunction fromValues(x, y) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](2);\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one vec2 to another\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the source vector\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a vec2 to the given values\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction set(out, x, y) {\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two vec2's\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts vector b from vector a\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two vec2's\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  out[0] = a[0] * b[0];\\r\\n  out[1] = a[1] * b[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Divides two vec2's\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction divide(out, a, b) {\\r\\n  out[0] = a[0] / b[0];\\r\\n  out[1] = a[1] / b[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.ceil the components of a vec2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a vector to ceil\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction ceil(out, a) {\\r\\n  out[0] = Math.ceil(a[0]);\\r\\n  out[1] = Math.ceil(a[1]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.floor the components of a vec2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a vector to floor\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction floor(out, a) {\\r\\n  out[0] = Math.floor(a[0]);\\r\\n  out[1] = Math.floor(a[1]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the minimum of two vec2's\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction min(out, a, b) {\\r\\n  out[0] = Math.min(a[0], b[0]);\\r\\n  out[1] = Math.min(a[1], b[1]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the maximum of two vec2's\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction max(out, a, b) {\\r\\n  out[0] = Math.max(a[0], b[0]);\\r\\n  out[1] = Math.max(a[1], b[1]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.round the components of a vec2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a vector to round\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction round(out, a) {\\r\\n  out[0] = Math.round(a[0]);\\r\\n  out[1] = Math.round(a[1]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Scales a vec2 by a scalar number\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the vector to scale\\r\\n * @param {Number} b amount to scale the vector by\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction scale(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two vec2's after scaling the second operand by a scalar value\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @param {Number} scale the amount to scale b by before adding\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction scaleAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the euclidian distance between two vec2's\\r\\n *\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {Number} distance between a and b\\r\\n */\\r\\nfunction distance(a, b) {\\r\\n  var x = b[0] - a[0],\\r\\n      y = b[1] - a[1];\\r\\n  return Math.sqrt(x * x + y * y);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the squared euclidian distance between two vec2's\\r\\n *\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {Number} squared distance between a and b\\r\\n */\\r\\nfunction squaredDistance(a, b) {\\r\\n  var x = b[0] - a[0],\\r\\n      y = b[1] - a[1];\\r\\n  return x * x + y * y;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the length of a vec2\\r\\n *\\r\\n * @param {vec2} a vector to calculate length of\\r\\n * @returns {Number} length of a\\r\\n */\\r\\nfunction length(a) {\\r\\n  var x = a[0],\\r\\n      y = a[1];\\r\\n  return Math.sqrt(x * x + y * y);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the squared length of a vec2\\r\\n *\\r\\n * @param {vec2} a vector to calculate squared length of\\r\\n * @returns {Number} squared length of a\\r\\n */\\r\\nfunction squaredLength(a) {\\r\\n  var x = a[0],\\r\\n      y = a[1];\\r\\n  return x * x + y * y;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Negates the components of a vec2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a vector to negate\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction negate(out, a) {\\r\\n  out[0] = -a[0];\\r\\n  out[1] = -a[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the inverse of the components of a vec2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a vector to invert\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction inverse(out, a) {\\r\\n  out[0] = 1.0 / a[0];\\r\\n  out[1] = 1.0 / a[1];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Normalize a vec2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a vector to normalize\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction normalize(out, a) {\\r\\n  var x = a[0],\\r\\n      y = a[1];\\r\\n  var len = x * x + y * y;\\r\\n  if (len > 0) {\\r\\n    //TODO: evaluate use of glm_invsqrt here?\\r\\n    len = 1 / Math.sqrt(len);\\r\\n    out[0] = a[0] * len;\\r\\n    out[1] = a[1] * len;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the dot product of two vec2's\\r\\n *\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {Number} dot product of a and b\\r\\n */\\r\\nfunction dot(a, b) {\\r\\n  return a[0] * b[0] + a[1] * b[1];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Computes the cross product of two vec2's\\r\\n * Note that the cross product must by definition produce a 3D vector\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction cross(out, a, b) {\\r\\n  var z = a[0] * b[1] - a[1] * b[0];\\r\\n  out[0] = out[1] = 0;\\r\\n  out[2] = z;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Performs a linear interpolation between two vec2's\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the first operand\\r\\n * @param {vec2} b the second operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction lerp(out, a, b, t) {\\r\\n  var ax = a[0],\\r\\n      ay = a[1];\\r\\n  out[0] = ax + t * (b[0] - ax);\\r\\n  out[1] = ay + t * (b[1] - ay);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a random vector with the given scale\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction random(out, scale) {\\r\\n  scale = scale || 1.0;\\r\\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2.0 * Math.PI;\\r\\n  out[0] = Math.cos(r) * scale;\\r\\n  out[1] = Math.sin(r) * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec2 with a mat2\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the vector to transform\\r\\n * @param {mat2} m matrix to transform with\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction transformMat2(out, a, m) {\\r\\n  var x = a[0],\\r\\n      y = a[1];\\r\\n  out[0] = m[0] * x + m[2] * y;\\r\\n  out[1] = m[1] * x + m[3] * y;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec2 with a mat2d\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the vector to transform\\r\\n * @param {mat2d} m matrix to transform with\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction transformMat2d(out, a, m) {\\r\\n  var x = a[0],\\r\\n      y = a[1];\\r\\n  out[0] = m[0] * x + m[2] * y + m[4];\\r\\n  out[1] = m[1] * x + m[3] * y + m[5];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec2 with a mat3\\r\\n * 3rd vector component is implicitly '1'\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the vector to transform\\r\\n * @param {mat3} m matrix to transform with\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction transformMat3(out, a, m) {\\r\\n  var x = a[0],\\r\\n      y = a[1];\\r\\n  out[0] = m[0] * x + m[3] * y + m[6];\\r\\n  out[1] = m[1] * x + m[4] * y + m[7];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec2 with a mat4\\r\\n * 3rd vector component is implicitly '0'\\r\\n * 4th vector component is implicitly '1'\\r\\n *\\r\\n * @param {vec2} out the receiving vector\\r\\n * @param {vec2} a the vector to transform\\r\\n * @param {mat4} m matrix to transform with\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction transformMat4(out, a, m) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  out[0] = m[0] * x + m[4] * y + m[12];\\r\\n  out[1] = m[1] * x + m[5] * y + m[13];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotate a 2D vector\\r\\n * @param {vec2} out The receiving vec2\\r\\n * @param {vec2} a The vec2 point to rotate\\r\\n * @param {vec2} b The origin of the rotation\\r\\n * @param {Number} c The angle of rotation\\r\\n * @returns {vec2} out\\r\\n */\\r\\nfunction rotate(out, a, b, c) {\\r\\n  //Translate point to the origin\\r\\n  var p0 = a[0] - b[0],\\r\\n      p1 = a[1] - b[1],\\r\\n      sinC = Math.sin(c),\\r\\n      cosC = Math.cos(c);\\r\\n\\r\\n  //perform rotation and translate to correct position\\r\\n  out[0] = p0 * cosC - p1 * sinC + b[0];\\r\\n  out[1] = p0 * sinC + p1 * cosC + b[1];\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the angle between two 2D vectors\\r\\n * @param {vec2} a The first operand\\r\\n * @param {vec2} b The second operand\\r\\n * @returns {Number} The angle in radians\\r\\n */\\r\\nfunction angle(a, b) {\\r\\n  var x1 = a[0],\\r\\n      y1 = a[1],\\r\\n      x2 = b[0],\\r\\n      y2 = b[1];\\r\\n\\r\\n  var len1 = x1 * x1 + y1 * y1;\\r\\n  if (len1 > 0) {\\r\\n    //TODO: evaluate use of glm_invsqrt here?\\r\\n    len1 = 1 / Math.sqrt(len1);\\r\\n  }\\r\\n\\r\\n  var len2 = x2 * x2 + y2 * y2;\\r\\n  if (len2 > 0) {\\r\\n    //TODO: evaluate use of glm_invsqrt here?\\r\\n    len2 = 1 / Math.sqrt(len2);\\r\\n  }\\r\\n\\r\\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\\r\\n\\r\\n  if (cosine > 1.0) {\\r\\n    return 0;\\r\\n  } else if (cosine < -1.0) {\\r\\n    return Math.PI;\\r\\n  } else {\\r\\n    return Math.acos(cosine);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a vector\\r\\n *\\r\\n * @param {vec2} a vector to represent as a string\\r\\n * @returns {String} string representation of the vector\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {vec2} a The first vector.\\r\\n * @param {vec2} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the vectors have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {vec2} a The first vector.\\r\\n * @param {vec2} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.length}\\r\\n * @function\\r\\n */\\r\\nvar len = length;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.divide}\\r\\n * @function\\r\\n */\\r\\nvar div = divide;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.distance}\\r\\n * @function\\r\\n */\\r\\nvar dist = distance;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.squaredDistance}\\r\\n * @function\\r\\n */\\r\\nvar sqrDist = squaredDistance;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec2.squaredLength}\\r\\n * @function\\r\\n */\\r\\nvar sqrLen = squaredLength;\\r\\n\\r\\n/**\\r\\n * Perform some operation over an array of vec2s.\\r\\n *\\r\\n * @param {Array} a the array of vectors to iterate over\\r\\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\\r\\n * @param {Number} offset Number of elements to skip at the beginning of the array\\r\\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\\r\\n * @param {Function} fn Function to call for each vector in the array\\r\\n * @param {Object} [arg] additional argument to pass to fn\\r\\n * @returns {Array} a\\r\\n * @function\\r\\n */\\r\\nvar forEach = function () {\\r\\n  var vec = create();\\r\\n\\r\\n  return function (a, stride, offset, count, fn, arg) {\\r\\n    var i = void 0,\\r\\n        l = void 0;\\r\\n    if (!stride) {\\r\\n      stride = 2;\\r\\n    }\\r\\n\\r\\n    if (!offset) {\\r\\n      offset = 0;\\r\\n    }\\r\\n\\r\\n    if (count) {\\r\\n      l = Math.min(count * stride + offset, a.length);\\r\\n    } else {\\r\\n      l = a.length;\\r\\n    }\\r\\n\\r\\n    for (i = offset; i < l; i += stride) {\\r\\n      vec[0] = a[i];vec[1] = a[i + 1];\\r\\n      fn(vec, vec, arg);\\r\\n      a[i] = vec[0];a[i + 1] = vec[1];\\r\\n    }\\r\\n\\r\\n    return a;\\r\\n  };\\r\\n}();\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec3.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/vec3.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, clone, length, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, squaredLength, negate, inverse, normalize, dot, cross, lerp, hermite, bezier, random, transformMat4, transformMat3, transformQuat, rotateX, rotateY, rotateZ, angle, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"length\\\", function() { return length; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"divide\\\", function() { return divide; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ceil\\\", function() { return ceil; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"floor\\\", function() { return floor; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"min\\\", function() { return min; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"max\\\", function() { return max; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"round\\\", function() { return round; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scaleAndAdd\\\", function() { return scaleAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"distance\\\", function() { return distance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredDistance\\\", function() { return squaredDistance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredLength\\\", function() { return squaredLength; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"negate\\\", function() { return negate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"inverse\\\", function() { return inverse; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"normalize\\\", function() { return normalize; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dot\\\", function() { return dot; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"cross\\\", function() { return cross; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"lerp\\\", function() { return lerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"hermite\\\", function() { return hermite; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bezier\\\", function() { return bezier; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"random\\\", function() { return random; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat4\\\", function() { return transformMat4; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat3\\\", function() { return transformMat3; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformQuat\\\", function() { return transformQuat; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateX\\\", function() { return rotateX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateY\\\", function() { return rotateY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rotateZ\\\", function() { return rotateZ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"angle\\\", function() { return angle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"div\\\", function() { return div; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dist\\\", function() { return dist; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrDist\\\", function() { return sqrDist; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"len\\\", function() { return len; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrLen\\\", function() { return sqrLen; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"forEach\\\", function() { return forEach; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 3 Dimensional Vector\\r\\n * @module vec3\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new, empty vec3\\r\\n *\\r\\n * @returns {vec3} a new 3D vector\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](3);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[0] = 0;\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new vec3 initialized with values from an existing vector\\r\\n *\\r\\n * @param {vec3} a vector to clone\\r\\n * @returns {vec3} a new 3D vector\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](3);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the length of a vec3\\r\\n *\\r\\n * @param {vec3} a vector to calculate length of\\r\\n * @returns {Number} length of a\\r\\n */\\r\\nfunction length(a) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  var z = a[2];\\r\\n  return Math.sqrt(x * x + y * y + z * z);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new vec3 initialized with the given values\\r\\n *\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @param {Number} z Z component\\r\\n * @returns {vec3} a new 3D vector\\r\\n */\\r\\nfunction fromValues(x, y, z) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](3);\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  out[2] = z;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one vec3 to another\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the source vector\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a vec3 to the given values\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @param {Number} z Z component\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction set(out, x, y, z) {\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  out[2] = z;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts vector b from vector a\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  out[2] = a[2] - b[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  out[0] = a[0] * b[0];\\r\\n  out[1] = a[1] * b[1];\\r\\n  out[2] = a[2] * b[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Divides two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction divide(out, a, b) {\\r\\n  out[0] = a[0] / b[0];\\r\\n  out[1] = a[1] / b[1];\\r\\n  out[2] = a[2] / b[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.ceil the components of a vec3\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a vector to ceil\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction ceil(out, a) {\\r\\n  out[0] = Math.ceil(a[0]);\\r\\n  out[1] = Math.ceil(a[1]);\\r\\n  out[2] = Math.ceil(a[2]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.floor the components of a vec3\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a vector to floor\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction floor(out, a) {\\r\\n  out[0] = Math.floor(a[0]);\\r\\n  out[1] = Math.floor(a[1]);\\r\\n  out[2] = Math.floor(a[2]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the minimum of two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction min(out, a, b) {\\r\\n  out[0] = Math.min(a[0], b[0]);\\r\\n  out[1] = Math.min(a[1], b[1]);\\r\\n  out[2] = Math.min(a[2], b[2]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the maximum of two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction max(out, a, b) {\\r\\n  out[0] = Math.max(a[0], b[0]);\\r\\n  out[1] = Math.max(a[1], b[1]);\\r\\n  out[2] = Math.max(a[2], b[2]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.round the components of a vec3\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a vector to round\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction round(out, a) {\\r\\n  out[0] = Math.round(a[0]);\\r\\n  out[1] = Math.round(a[1]);\\r\\n  out[2] = Math.round(a[2]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Scales a vec3 by a scalar number\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the vector to scale\\r\\n * @param {Number} b amount to scale the vector by\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction scale(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two vec3's after scaling the second operand by a scalar value\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @param {Number} scale the amount to scale b by before adding\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction scaleAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  out[2] = a[2] + b[2] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the euclidian distance between two vec3's\\r\\n *\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {Number} distance between a and b\\r\\n */\\r\\nfunction distance(a, b) {\\r\\n  var x = b[0] - a[0];\\r\\n  var y = b[1] - a[1];\\r\\n  var z = b[2] - a[2];\\r\\n  return Math.sqrt(x * x + y * y + z * z);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the squared euclidian distance between two vec3's\\r\\n *\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {Number} squared distance between a and b\\r\\n */\\r\\nfunction squaredDistance(a, b) {\\r\\n  var x = b[0] - a[0];\\r\\n  var y = b[1] - a[1];\\r\\n  var z = b[2] - a[2];\\r\\n  return x * x + y * y + z * z;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the squared length of a vec3\\r\\n *\\r\\n * @param {vec3} a vector to calculate squared length of\\r\\n * @returns {Number} squared length of a\\r\\n */\\r\\nfunction squaredLength(a) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  var z = a[2];\\r\\n  return x * x + y * y + z * z;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Negates the components of a vec3\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a vector to negate\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction negate(out, a) {\\r\\n  out[0] = -a[0];\\r\\n  out[1] = -a[1];\\r\\n  out[2] = -a[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the inverse of the components of a vec3\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a vector to invert\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction inverse(out, a) {\\r\\n  out[0] = 1.0 / a[0];\\r\\n  out[1] = 1.0 / a[1];\\r\\n  out[2] = 1.0 / a[2];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Normalize a vec3\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a vector to normalize\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction normalize(out, a) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  var z = a[2];\\r\\n  var len = x * x + y * y + z * z;\\r\\n  if (len > 0) {\\r\\n    //TODO: evaluate use of glm_invsqrt here?\\r\\n    len = 1 / Math.sqrt(len);\\r\\n    out[0] = a[0] * len;\\r\\n    out[1] = a[1] * len;\\r\\n    out[2] = a[2] * len;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the dot product of two vec3's\\r\\n *\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {Number} dot product of a and b\\r\\n */\\r\\nfunction dot(a, b) {\\r\\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Computes the cross product of two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction cross(out, a, b) {\\r\\n  var ax = a[0],\\r\\n      ay = a[1],\\r\\n      az = a[2];\\r\\n  var bx = b[0],\\r\\n      by = b[1],\\r\\n      bz = b[2];\\r\\n\\r\\n  out[0] = ay * bz - az * by;\\r\\n  out[1] = az * bx - ax * bz;\\r\\n  out[2] = ax * by - ay * bx;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Performs a linear interpolation between two vec3's\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction lerp(out, a, b, t) {\\r\\n  var ax = a[0];\\r\\n  var ay = a[1];\\r\\n  var az = a[2];\\r\\n  out[0] = ax + t * (b[0] - ax);\\r\\n  out[1] = ay + t * (b[1] - ay);\\r\\n  out[2] = az + t * (b[2] - az);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Performs a hermite interpolation with two control points\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @param {vec3} c the third operand\\r\\n * @param {vec3} d the fourth operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction hermite(out, a, b, c, d, t) {\\r\\n  var factorTimes2 = t * t;\\r\\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\\r\\n  var factor2 = factorTimes2 * (t - 2) + t;\\r\\n  var factor3 = factorTimes2 * (t - 1);\\r\\n  var factor4 = factorTimes2 * (3 - 2 * t);\\r\\n\\r\\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\\r\\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\\r\\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Performs a bezier interpolation with two control points\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the first operand\\r\\n * @param {vec3} b the second operand\\r\\n * @param {vec3} c the third operand\\r\\n * @param {vec3} d the fourth operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction bezier(out, a, b, c, d, t) {\\r\\n  var inverseFactor = 1 - t;\\r\\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\\r\\n  var factorTimes2 = t * t;\\r\\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\\r\\n  var factor2 = 3 * t * inverseFactorTimesTwo;\\r\\n  var factor3 = 3 * factorTimes2 * inverseFactor;\\r\\n  var factor4 = factorTimes2 * t;\\r\\n\\r\\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\\r\\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\\r\\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a random vector with the given scale\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction random(out, scale) {\\r\\n  scale = scale || 1.0;\\r\\n\\r\\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2.0 * Math.PI;\\r\\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2.0 - 1.0;\\r\\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\\r\\n\\r\\n  out[0] = Math.cos(r) * zScale;\\r\\n  out[1] = Math.sin(r) * zScale;\\r\\n  out[2] = z * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec3 with a mat4.\\r\\n * 4th vector component is implicitly '1'\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the vector to transform\\r\\n * @param {mat4} m matrix to transform with\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction transformMat4(out, a, m) {\\r\\n  var x = a[0],\\r\\n      y = a[1],\\r\\n      z = a[2];\\r\\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\\r\\n  w = w || 1.0;\\r\\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\\r\\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\\r\\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec3 with a mat3.\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the vector to transform\\r\\n * @param {mat3} m the 3x3 matrix to transform with\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction transformMat3(out, a, m) {\\r\\n  var x = a[0],\\r\\n      y = a[1],\\r\\n      z = a[2];\\r\\n  out[0] = x * m[0] + y * m[3] + z * m[6];\\r\\n  out[1] = x * m[1] + y * m[4] + z * m[7];\\r\\n  out[2] = x * m[2] + y * m[5] + z * m[8];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec3 with a quat\\r\\n * Can also be used for dual quaternions. (Multiply it with the real part)\\r\\n *\\r\\n * @param {vec3} out the receiving vector\\r\\n * @param {vec3} a the vector to transform\\r\\n * @param {quat} q quaternion to transform with\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction transformQuat(out, a, q) {\\r\\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\\r\\n  var qx = q[0],\\r\\n      qy = q[1],\\r\\n      qz = q[2],\\r\\n      qw = q[3];\\r\\n  var x = a[0],\\r\\n      y = a[1],\\r\\n      z = a[2];\\r\\n  // var qvec = [qx, qy, qz];\\r\\n  // var uv = vec3.cross([], qvec, a);\\r\\n  var uvx = qy * z - qz * y,\\r\\n      uvy = qz * x - qx * z,\\r\\n      uvz = qx * y - qy * x;\\r\\n  // var uuv = vec3.cross([], qvec, uv);\\r\\n  var uuvx = qy * uvz - qz * uvy,\\r\\n      uuvy = qz * uvx - qx * uvz,\\r\\n      uuvz = qx * uvy - qy * uvx;\\r\\n  // vec3.scale(uv, uv, 2 * w);\\r\\n  var w2 = qw * 2;\\r\\n  uvx *= w2;\\r\\n  uvy *= w2;\\r\\n  uvz *= w2;\\r\\n  // vec3.scale(uuv, uuv, 2);\\r\\n  uuvx *= 2;\\r\\n  uuvy *= 2;\\r\\n  uuvz *= 2;\\r\\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\\r\\n  out[0] = x + uvx + uuvx;\\r\\n  out[1] = y + uvy + uuvy;\\r\\n  out[2] = z + uvz + uuvz;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotate a 3D vector around the x-axis\\r\\n * @param {vec3} out The receiving vec3\\r\\n * @param {vec3} a The vec3 point to rotate\\r\\n * @param {vec3} b The origin of the rotation\\r\\n * @param {Number} c The angle of rotation\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction rotateX(out, a, b, c) {\\r\\n  var p = [],\\r\\n      r = [];\\r\\n  //Translate point to the origin\\r\\n  p[0] = a[0] - b[0];\\r\\n  p[1] = a[1] - b[1];\\r\\n  p[2] = a[2] - b[2];\\r\\n\\r\\n  //perform rotation\\r\\n  r[0] = p[0];\\r\\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\\r\\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\\r\\n\\r\\n  //translate to correct position\\r\\n  out[0] = r[0] + b[0];\\r\\n  out[1] = r[1] + b[1];\\r\\n  out[2] = r[2] + b[2];\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotate a 3D vector around the y-axis\\r\\n * @param {vec3} out The receiving vec3\\r\\n * @param {vec3} a The vec3 point to rotate\\r\\n * @param {vec3} b The origin of the rotation\\r\\n * @param {Number} c The angle of rotation\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction rotateY(out, a, b, c) {\\r\\n  var p = [],\\r\\n      r = [];\\r\\n  //Translate point to the origin\\r\\n  p[0] = a[0] - b[0];\\r\\n  p[1] = a[1] - b[1];\\r\\n  p[2] = a[2] - b[2];\\r\\n\\r\\n  //perform rotation\\r\\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\\r\\n  r[1] = p[1];\\r\\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\\r\\n\\r\\n  //translate to correct position\\r\\n  out[0] = r[0] + b[0];\\r\\n  out[1] = r[1] + b[1];\\r\\n  out[2] = r[2] + b[2];\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Rotate a 3D vector around the z-axis\\r\\n * @param {vec3} out The receiving vec3\\r\\n * @param {vec3} a The vec3 point to rotate\\r\\n * @param {vec3} b The origin of the rotation\\r\\n * @param {Number} c The angle of rotation\\r\\n * @returns {vec3} out\\r\\n */\\r\\nfunction rotateZ(out, a, b, c) {\\r\\n  var p = [],\\r\\n      r = [];\\r\\n  //Translate point to the origin\\r\\n  p[0] = a[0] - b[0];\\r\\n  p[1] = a[1] - b[1];\\r\\n  p[2] = a[2] - b[2];\\r\\n\\r\\n  //perform rotation\\r\\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\\r\\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\\r\\n  r[2] = p[2];\\r\\n\\r\\n  //translate to correct position\\r\\n  out[0] = r[0] + b[0];\\r\\n  out[1] = r[1] + b[1];\\r\\n  out[2] = r[2] + b[2];\\r\\n\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the angle between two 3D vectors\\r\\n * @param {vec3} a The first operand\\r\\n * @param {vec3} b The second operand\\r\\n * @returns {Number} The angle in radians\\r\\n */\\r\\nfunction angle(a, b) {\\r\\n  var tempA = fromValues(a[0], a[1], a[2]);\\r\\n  var tempB = fromValues(b[0], b[1], b[2]);\\r\\n\\r\\n  normalize(tempA, tempA);\\r\\n  normalize(tempB, tempB);\\r\\n\\r\\n  var cosine = dot(tempA, tempB);\\r\\n\\r\\n  if (cosine > 1.0) {\\r\\n    return 0;\\r\\n  } else if (cosine < -1.0) {\\r\\n    return Math.PI;\\r\\n  } else {\\r\\n    return Math.acos(cosine);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a vector\\r\\n *\\r\\n * @param {vec3} a vector to represent as a string\\r\\n * @returns {String} string representation of the vector\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {vec3} a The first vector.\\r\\n * @param {vec3} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the vectors have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {vec3} a The first vector.\\r\\n * @param {vec3} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.divide}\\r\\n * @function\\r\\n */\\r\\nvar div = divide;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.distance}\\r\\n * @function\\r\\n */\\r\\nvar dist = distance;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.squaredDistance}\\r\\n * @function\\r\\n */\\r\\nvar sqrDist = squaredDistance;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.length}\\r\\n * @function\\r\\n */\\r\\nvar len = length;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec3.squaredLength}\\r\\n * @function\\r\\n */\\r\\nvar sqrLen = squaredLength;\\r\\n\\r\\n/**\\r\\n * Perform some operation over an array of vec3s.\\r\\n *\\r\\n * @param {Array} a the array of vectors to iterate over\\r\\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\\r\\n * @param {Number} offset Number of elements to skip at the beginning of the array\\r\\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\\r\\n * @param {Function} fn Function to call for each vector in the array\\r\\n * @param {Object} [arg] additional argument to pass to fn\\r\\n * @returns {Array} a\\r\\n * @function\\r\\n */\\r\\nvar forEach = function () {\\r\\n  var vec = create();\\r\\n\\r\\n  return function (a, stride, offset, count, fn, arg) {\\r\\n    var i = void 0,\\r\\n        l = void 0;\\r\\n    if (!stride) {\\r\\n      stride = 3;\\r\\n    }\\r\\n\\r\\n    if (!offset) {\\r\\n      offset = 0;\\r\\n    }\\r\\n\\r\\n    if (count) {\\r\\n      l = Math.min(count * stride + offset, a.length);\\r\\n    } else {\\r\\n      l = a.length;\\r\\n    }\\r\\n\\r\\n    for (i = offset; i < l; i += stride) {\\r\\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\\r\\n      fn(vec, vec, arg);\\r\\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\\r\\n    }\\r\\n\\r\\n    return a;\\r\\n  };\\r\\n}();\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/gl-matrix/lib/gl-matrix/vec4.js\\\":\\n/*!******************************************************!*\\\\\\n  !*** ./node_modules/gl-matrix/lib/gl-matrix/vec4.js ***!\\n  \\\\******************************************************/\\n/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, lerp, random, transformMat4, transformQuat, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"create\\\", function() { return create; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clone\\\", function() { return clone; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromValues\\\", function() { return fromValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"copy\\\", function() { return copy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"set\\\", function() { return set; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"add\\\", function() { return add; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subtract\\\", function() { return subtract; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multiply\\\", function() { return multiply; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"divide\\\", function() { return divide; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ceil\\\", function() { return ceil; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"floor\\\", function() { return floor; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"min\\\", function() { return min; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"max\\\", function() { return max; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"round\\\", function() { return round; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scale\\\", function() { return scale; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scaleAndAdd\\\", function() { return scaleAndAdd; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"distance\\\", function() { return distance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredDistance\\\", function() { return squaredDistance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"length\\\", function() { return length; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"squaredLength\\\", function() { return squaredLength; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"negate\\\", function() { return negate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"inverse\\\", function() { return inverse; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"normalize\\\", function() { return normalize; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dot\\\", function() { return dot; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"lerp\\\", function() { return lerp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"random\\\", function() { return random; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformMat4\\\", function() { return transformMat4; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"transformQuat\\\", function() { return transformQuat; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"str\\\", function() { return str; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exactEquals\\\", function() { return exactEquals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equals\\\", function() { return equals; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mul\\\", function() { return mul; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"div\\\", function() { return div; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dist\\\", function() { return dist; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrDist\\\", function() { return sqrDist; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"len\\\", function() { return len; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sqrLen\\\", function() { return sqrLen; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"forEach\\\", function() { return forEach; });\\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \\\"./node_modules/gl-matrix/lib/gl-matrix/common.js\\\");\\n\\r\\n\\r\\n/**\\r\\n * 4 Dimensional Vector\\r\\n * @module vec4\\r\\n */\\r\\n\\r\\n/**\\r\\n * Creates a new, empty vec4\\r\\n *\\r\\n * @returns {vec4} a new 4D vector\\r\\n */\\r\\nfunction create() {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"] != Float32Array) {\\r\\n    out[0] = 0;\\r\\n    out[1] = 0;\\r\\n    out[2] = 0;\\r\\n    out[3] = 0;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new vec4 initialized with values from an existing vector\\r\\n *\\r\\n * @param {vec4} a vector to clone\\r\\n * @returns {vec4} a new 4D vector\\r\\n */\\r\\nfunction clone(a) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Creates a new vec4 initialized with the given values\\r\\n *\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @param {Number} z Z component\\r\\n * @param {Number} w W component\\r\\n * @returns {vec4} a new 4D vector\\r\\n */\\r\\nfunction fromValues(x, y, z, w) {\\r\\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"ARRAY_TYPE\\\"](4);\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  out[2] = z;\\r\\n  out[3] = w;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Copy the values from one vec4 to another\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the source vector\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction copy(out, a) {\\r\\n  out[0] = a[0];\\r\\n  out[1] = a[1];\\r\\n  out[2] = a[2];\\r\\n  out[3] = a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the components of a vec4 to the given values\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {Number} x X component\\r\\n * @param {Number} y Y component\\r\\n * @param {Number} z Z component\\r\\n * @param {Number} w W component\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction set(out, x, y, z, w) {\\r\\n  out[0] = x;\\r\\n  out[1] = y;\\r\\n  out[2] = z;\\r\\n  out[3] = w;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two vec4's\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction add(out, a, b) {\\r\\n  out[0] = a[0] + b[0];\\r\\n  out[1] = a[1] + b[1];\\r\\n  out[2] = a[2] + b[2];\\r\\n  out[3] = a[3] + b[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Subtracts vector b from vector a\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction subtract(out, a, b) {\\r\\n  out[0] = a[0] - b[0];\\r\\n  out[1] = a[1] - b[1];\\r\\n  out[2] = a[2] - b[2];\\r\\n  out[3] = a[3] - b[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Multiplies two vec4's\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction multiply(out, a, b) {\\r\\n  out[0] = a[0] * b[0];\\r\\n  out[1] = a[1] * b[1];\\r\\n  out[2] = a[2] * b[2];\\r\\n  out[3] = a[3] * b[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Divides two vec4's\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction divide(out, a, b) {\\r\\n  out[0] = a[0] / b[0];\\r\\n  out[1] = a[1] / b[1];\\r\\n  out[2] = a[2] / b[2];\\r\\n  out[3] = a[3] / b[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.ceil the components of a vec4\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a vector to ceil\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction ceil(out, a) {\\r\\n  out[0] = Math.ceil(a[0]);\\r\\n  out[1] = Math.ceil(a[1]);\\r\\n  out[2] = Math.ceil(a[2]);\\r\\n  out[3] = Math.ceil(a[3]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.floor the components of a vec4\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a vector to floor\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction floor(out, a) {\\r\\n  out[0] = Math.floor(a[0]);\\r\\n  out[1] = Math.floor(a[1]);\\r\\n  out[2] = Math.floor(a[2]);\\r\\n  out[3] = Math.floor(a[3]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the minimum of two vec4's\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction min(out, a, b) {\\r\\n  out[0] = Math.min(a[0], b[0]);\\r\\n  out[1] = Math.min(a[1], b[1]);\\r\\n  out[2] = Math.min(a[2], b[2]);\\r\\n  out[3] = Math.min(a[3], b[3]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the maximum of two vec4's\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction max(out, a, b) {\\r\\n  out[0] = Math.max(a[0], b[0]);\\r\\n  out[1] = Math.max(a[1], b[1]);\\r\\n  out[2] = Math.max(a[2], b[2]);\\r\\n  out[3] = Math.max(a[3], b[3]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Math.round the components of a vec4\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a vector to round\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction round(out, a) {\\r\\n  out[0] = Math.round(a[0]);\\r\\n  out[1] = Math.round(a[1]);\\r\\n  out[2] = Math.round(a[2]);\\r\\n  out[3] = Math.round(a[3]);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Scales a vec4 by a scalar number\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the vector to scale\\r\\n * @param {Number} b amount to scale the vector by\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction scale(out, a, b) {\\r\\n  out[0] = a[0] * b;\\r\\n  out[1] = a[1] * b;\\r\\n  out[2] = a[2] * b;\\r\\n  out[3] = a[3] * b;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds two vec4's after scaling the second operand by a scalar value\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @param {Number} scale the amount to scale b by before adding\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction scaleAndAdd(out, a, b, scale) {\\r\\n  out[0] = a[0] + b[0] * scale;\\r\\n  out[1] = a[1] + b[1] * scale;\\r\\n  out[2] = a[2] + b[2] * scale;\\r\\n  out[3] = a[3] + b[3] * scale;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the euclidian distance between two vec4's\\r\\n *\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {Number} distance between a and b\\r\\n */\\r\\nfunction distance(a, b) {\\r\\n  var x = b[0] - a[0];\\r\\n  var y = b[1] - a[1];\\r\\n  var z = b[2] - a[2];\\r\\n  var w = b[3] - a[3];\\r\\n  return Math.sqrt(x * x + y * y + z * z + w * w);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the squared euclidian distance between two vec4's\\r\\n *\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {Number} squared distance between a and b\\r\\n */\\r\\nfunction squaredDistance(a, b) {\\r\\n  var x = b[0] - a[0];\\r\\n  var y = b[1] - a[1];\\r\\n  var z = b[2] - a[2];\\r\\n  var w = b[3] - a[3];\\r\\n  return x * x + y * y + z * z + w * w;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the length of a vec4\\r\\n *\\r\\n * @param {vec4} a vector to calculate length of\\r\\n * @returns {Number} length of a\\r\\n */\\r\\nfunction length(a) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  var z = a[2];\\r\\n  var w = a[3];\\r\\n  return Math.sqrt(x * x + y * y + z * z + w * w);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the squared length of a vec4\\r\\n *\\r\\n * @param {vec4} a vector to calculate squared length of\\r\\n * @returns {Number} squared length of a\\r\\n */\\r\\nfunction squaredLength(a) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  var z = a[2];\\r\\n  var w = a[3];\\r\\n  return x * x + y * y + z * z + w * w;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Negates the components of a vec4\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a vector to negate\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction negate(out, a) {\\r\\n  out[0] = -a[0];\\r\\n  out[1] = -a[1];\\r\\n  out[2] = -a[2];\\r\\n  out[3] = -a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the inverse of the components of a vec4\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a vector to invert\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction inverse(out, a) {\\r\\n  out[0] = 1.0 / a[0];\\r\\n  out[1] = 1.0 / a[1];\\r\\n  out[2] = 1.0 / a[2];\\r\\n  out[3] = 1.0 / a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Normalize a vec4\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a vector to normalize\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction normalize(out, a) {\\r\\n  var x = a[0];\\r\\n  var y = a[1];\\r\\n  var z = a[2];\\r\\n  var w = a[3];\\r\\n  var len = x * x + y * y + z * z + w * w;\\r\\n  if (len > 0) {\\r\\n    len = 1 / Math.sqrt(len);\\r\\n    out[0] = x * len;\\r\\n    out[1] = y * len;\\r\\n    out[2] = z * len;\\r\\n    out[3] = w * len;\\r\\n  }\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Calculates the dot product of two vec4's\\r\\n *\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @returns {Number} dot product of a and b\\r\\n */\\r\\nfunction dot(a, b) {\\r\\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Performs a linear interpolation between two vec4's\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the first operand\\r\\n * @param {vec4} b the second operand\\r\\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction lerp(out, a, b, t) {\\r\\n  var ax = a[0];\\r\\n  var ay = a[1];\\r\\n  var az = a[2];\\r\\n  var aw = a[3];\\r\\n  out[0] = ax + t * (b[0] - ax);\\r\\n  out[1] = ay + t * (b[1] - ay);\\r\\n  out[2] = az + t * (b[2] - az);\\r\\n  out[3] = aw + t * (b[3] - aw);\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Generates a random vector with the given scale\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction random(out, scale) {\\r\\n  scale = scale || 1.0;\\r\\n\\r\\n  // Marsaglia, George. Choosing a Point from the Surface of a\\r\\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\\r\\n  // http://projecteuclid.org/euclid.aoms/1177692644;\\r\\n  var v1, v2, v3, v4;\\r\\n  var s1, s2;\\r\\n  do {\\r\\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2 - 1;\\r\\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2 - 1;\\r\\n    s1 = v1 * v1 + v2 * v2;\\r\\n  } while (s1 >= 1);\\r\\n  do {\\r\\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2 - 1;\\r\\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"RANDOM\\\"]() * 2 - 1;\\r\\n    s2 = v3 * v3 + v4 * v4;\\r\\n  } while (s2 >= 1);\\r\\n\\r\\n  var d = Math.sqrt((1 - s1) / s2);\\r\\n  out[0] = scale * v1;\\r\\n  out[1] = scale * v2;\\r\\n  out[2] = scale * v3 * d;\\r\\n  out[3] = scale * v4 * d;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec4 with a mat4.\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the vector to transform\\r\\n * @param {mat4} m matrix to transform with\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction transformMat4(out, a, m) {\\r\\n  var x = a[0],\\r\\n      y = a[1],\\r\\n      z = a[2],\\r\\n      w = a[3];\\r\\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\\r\\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\\r\\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\\r\\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Transforms the vec4 with a quat\\r\\n *\\r\\n * @param {vec4} out the receiving vector\\r\\n * @param {vec4} a the vector to transform\\r\\n * @param {quat} q quaternion to transform with\\r\\n * @returns {vec4} out\\r\\n */\\r\\nfunction transformQuat(out, a, q) {\\r\\n  var x = a[0],\\r\\n      y = a[1],\\r\\n      z = a[2];\\r\\n  var qx = q[0],\\r\\n      qy = q[1],\\r\\n      qz = q[2],\\r\\n      qw = q[3];\\r\\n\\r\\n  // calculate quat * vec\\r\\n  var ix = qw * x + qy * z - qz * y;\\r\\n  var iy = qw * y + qz * x - qx * z;\\r\\n  var iz = qw * z + qx * y - qy * x;\\r\\n  var iw = -qx * x - qy * y - qz * z;\\r\\n\\r\\n  // calculate result * inverse quat\\r\\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\\r\\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\\r\\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\\r\\n  out[3] = a[3];\\r\\n  return out;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a string representation of a vector\\r\\n *\\r\\n * @param {vec4} a vector to represent as a string\\r\\n * @returns {String} string representation of the vector\\r\\n */\\r\\nfunction str(a) {\\r\\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\\r\\n *\\r\\n * @param {vec4} a The first vector.\\r\\n * @param {vec4} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nfunction exactEquals(a, b) {\\r\\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns whether or not the vectors have approximately the same elements in the same position.\\r\\n *\\r\\n * @param {vec4} a The first vector.\\r\\n * @param {vec4} b The second vector.\\r\\n * @returns {Boolean} True if the vectors are equal, false otherwise.\\r\\n */\\r\\nfunction equals(a, b) {\\r\\n  var a0 = a[0],\\r\\n      a1 = a[1],\\r\\n      a2 = a[2],\\r\\n      a3 = a[3];\\r\\n  var b0 = b[0],\\r\\n      b1 = b[1],\\r\\n      b2 = b[2],\\r\\n      b3 = b[3];\\r\\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\\\"EPSILON\\\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.subtract}\\r\\n * @function\\r\\n */\\r\\nvar sub = subtract;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.multiply}\\r\\n * @function\\r\\n */\\r\\nvar mul = multiply;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.divide}\\r\\n * @function\\r\\n */\\r\\nvar div = divide;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.distance}\\r\\n * @function\\r\\n */\\r\\nvar dist = distance;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.squaredDistance}\\r\\n * @function\\r\\n */\\r\\nvar sqrDist = squaredDistance;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.length}\\r\\n * @function\\r\\n */\\r\\nvar len = length;\\r\\n\\r\\n/**\\r\\n * Alias for {@link vec4.squaredLength}\\r\\n * @function\\r\\n */\\r\\nvar sqrLen = squaredLength;\\r\\n\\r\\n/**\\r\\n * Perform some operation over an array of vec4s.\\r\\n *\\r\\n * @param {Array} a the array of vectors to iterate over\\r\\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\\r\\n * @param {Number} offset Number of elements to skip at the beginning of the array\\r\\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\\r\\n * @param {Function} fn Function to call for each vector in the array\\r\\n * @param {Object} [arg] additional argument to pass to fn\\r\\n * @returns {Array} a\\r\\n * @function\\r\\n */\\r\\nvar forEach = function () {\\r\\n  var vec = create();\\r\\n\\r\\n  return function (a, stride, offset, count, fn, arg) {\\r\\n    var i = void 0,\\r\\n        l = void 0;\\r\\n    if (!stride) {\\r\\n      stride = 4;\\r\\n    }\\r\\n\\r\\n    if (!offset) {\\r\\n      offset = 0;\\r\\n    }\\r\\n\\r\\n    if (count) {\\r\\n      l = Math.min(count * stride + offset, a.length);\\r\\n    } else {\\r\\n      l = a.length;\\r\\n    }\\r\\n\\r\\n    for (i = offset; i < l; i += stride) {\\r\\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\\r\\n      fn(vec, vec, arg);\\r\\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\\r\\n    }\\r\\n\\r\\n    return a;\\r\\n  };\\r\\n}();\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ieee754/index.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./node_modules/ieee754/index.js ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\\n  var e, m\\n  var eLen = (nBytes * 8) - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var nBits = -7\\n  var i = isLE ? (nBytes - 1) : 0\\n  var d = isLE ? -1 : 1\\n  var s = buffer[offset + i]\\n\\n  i += d\\n\\n  e = s & ((1 << (-nBits)) - 1)\\n  s >>= (-nBits)\\n  nBits += eLen\\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  m = e & ((1 << (-nBits)) - 1)\\n  e >>= (-nBits)\\n  nBits += mLen\\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  if (e === 0) {\\n    e = 1 - eBias\\n  } else if (e === eMax) {\\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\\n  } else {\\n    m = m + Math.pow(2, mLen)\\n    e = e - eBias\\n  }\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\\n}\\n\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\n  var e, m, c\\n  var eLen = (nBytes * 8) - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\\n  var i = isLE ? 0 : (nBytes - 1)\\n  var d = isLE ? 1 : -1\\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\\n\\n  value = Math.abs(value)\\n\\n  if (isNaN(value) || value === Infinity) {\\n    m = isNaN(value) ? 1 : 0\\n    e = eMax\\n  } else {\\n    e = Math.floor(Math.log(value) / Math.LN2)\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\n      e--\\n      c *= 2\\n    }\\n    if (e + eBias >= 1) {\\n      value += rt / c\\n    } else {\\n      value += rt * Math.pow(2, 1 - eBias)\\n    }\\n    if (value * c >= 2) {\\n      e++\\n      c /= 2\\n    }\\n\\n    if (e + eBias >= eMax) {\\n      m = 0\\n      e = eMax\\n    } else if (e + eBias >= 1) {\\n      m = ((value * c) - 1) * Math.pow(2, mLen)\\n      e = e + eBias\\n    } else {\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\\n      e = 0\\n    }\\n  }\\n\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\n\\n  e = (e << mLen) | m\\n  eLen += mLen\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\n\\n  buffer[offset + i - d] |= s * 128\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/pbf/index.js\\\":\\n/*!***********************************!*\\\\\\n  !*** ./node_modules/pbf/index.js ***!\\n  \\\\***********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = Pbf;\\n\\nvar ieee754 = __webpack_require__(/*! ieee754 */ \\\"./node_modules/ieee754/index.js\\\");\\n\\nfunction Pbf(buf) {\\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\\n    this.pos = 0;\\n    this.type = 0;\\n    this.length = this.buf.length;\\n}\\n\\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\\n\\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\\n\\nPbf.prototype = {\\n\\n    destroy: function() {\\n        this.buf = null;\\n    },\\n\\n    // === READING =================================================================\\n\\n    readFields: function(readField, result, end) {\\n        end = end || this.length;\\n\\n        while (this.pos < end) {\\n            var val = this.readVarint(),\\n                tag = val >> 3,\\n                startPos = this.pos;\\n\\n            this.type = val & 0x7;\\n            readField(tag, result, this);\\n\\n            if (this.pos === startPos) this.skip(val);\\n        }\\n        return result;\\n    },\\n\\n    readMessage: function(readField, result) {\\n        return this.readFields(readField, result, this.readVarint() + this.pos);\\n    },\\n\\n    readFixed32: function() {\\n        var val = readUInt32(this.buf, this.pos);\\n        this.pos += 4;\\n        return val;\\n    },\\n\\n    readSFixed32: function() {\\n        var val = readInt32(this.buf, this.pos);\\n        this.pos += 4;\\n        return val;\\n    },\\n\\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\\n\\n    readFixed64: function() {\\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\\n        this.pos += 8;\\n        return val;\\n    },\\n\\n    readSFixed64: function() {\\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\\n        this.pos += 8;\\n        return val;\\n    },\\n\\n    readFloat: function() {\\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\\n        this.pos += 4;\\n        return val;\\n    },\\n\\n    readDouble: function() {\\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\\n        this.pos += 8;\\n        return val;\\n    },\\n\\n    readVarint: function(isSigned) {\\n        var buf = this.buf,\\n            val, b;\\n\\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\\n\\n        return readVarintRemainder(val, isSigned, this);\\n    },\\n\\n    readVarint64: function() { // for compatibility with v2.0.1\\n        return this.readVarint(true);\\n    },\\n\\n    readSVarint: function() {\\n        var num = this.readVarint();\\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\\n    },\\n\\n    readBoolean: function() {\\n        return Boolean(this.readVarint());\\n    },\\n\\n    readString: function() {\\n        var end = this.readVarint() + this.pos,\\n            str = readUtf8(this.buf, this.pos, end);\\n        this.pos = end;\\n        return str;\\n    },\\n\\n    readBytes: function() {\\n        var end = this.readVarint() + this.pos,\\n            buffer = this.buf.subarray(this.pos, end);\\n        this.pos = end;\\n        return buffer;\\n    },\\n\\n    // verbose for performance reasons; doesn't affect gzipped size\\n\\n    readPackedVarint: function(arr, isSigned) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\\n        return arr;\\n    },\\n    readPackedSVarint: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readSVarint());\\n        return arr;\\n    },\\n    readPackedBoolean: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readBoolean());\\n        return arr;\\n    },\\n    readPackedFloat: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readFloat());\\n        return arr;\\n    },\\n    readPackedDouble: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readDouble());\\n        return arr;\\n    },\\n    readPackedFixed32: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readFixed32());\\n        return arr;\\n    },\\n    readPackedSFixed32: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readSFixed32());\\n        return arr;\\n    },\\n    readPackedFixed64: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readFixed64());\\n        return arr;\\n    },\\n    readPackedSFixed64: function(arr) {\\n        var end = readPackedEnd(this);\\n        arr = arr || [];\\n        while (this.pos < end) arr.push(this.readSFixed64());\\n        return arr;\\n    },\\n\\n    skip: function(val) {\\n        var type = val & 0x7;\\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\\n        else if (type === Pbf.Fixed32) this.pos += 4;\\n        else if (type === Pbf.Fixed64) this.pos += 8;\\n        else throw new Error('Unimplemented type: ' + type);\\n    },\\n\\n    // === WRITING =================================================================\\n\\n    writeTag: function(tag, type) {\\n        this.writeVarint((tag << 3) | type);\\n    },\\n\\n    realloc: function(min) {\\n        var length = this.length || 16;\\n\\n        while (length < this.pos + min) length *= 2;\\n\\n        if (length !== this.length) {\\n            var buf = new Uint8Array(length);\\n            buf.set(this.buf);\\n            this.buf = buf;\\n            this.length = length;\\n        }\\n    },\\n\\n    finish: function() {\\n        this.length = this.pos;\\n        this.pos = 0;\\n        return this.buf.subarray(0, this.length);\\n    },\\n\\n    writeFixed32: function(val) {\\n        this.realloc(4);\\n        writeInt32(this.buf, val, this.pos);\\n        this.pos += 4;\\n    },\\n\\n    writeSFixed32: function(val) {\\n        this.realloc(4);\\n        writeInt32(this.buf, val, this.pos);\\n        this.pos += 4;\\n    },\\n\\n    writeFixed64: function(val) {\\n        this.realloc(8);\\n        writeInt32(this.buf, val & -1, this.pos);\\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\\n        this.pos += 8;\\n    },\\n\\n    writeSFixed64: function(val) {\\n        this.realloc(8);\\n        writeInt32(this.buf, val & -1, this.pos);\\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\\n        this.pos += 8;\\n    },\\n\\n    writeVarint: function(val) {\\n        val = +val || 0;\\n\\n        if (val > 0xfffffff || val < 0) {\\n            writeBigVarint(val, this);\\n            return;\\n        }\\n\\n        this.realloc(4);\\n\\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\\n    },\\n\\n    writeSVarint: function(val) {\\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\\n    },\\n\\n    writeBoolean: function(val) {\\n        this.writeVarint(Boolean(val));\\n    },\\n\\n    writeString: function(str) {\\n        str = String(str);\\n        this.realloc(str.length * 4);\\n\\n        this.pos++; // reserve 1 byte for short string length\\n\\n        var startPos = this.pos;\\n        // write the string directly to the buffer and see how much was written\\n        this.pos = writeUtf8(this.buf, str, this.pos);\\n        var len = this.pos - startPos;\\n\\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\\n\\n        // finally, write the message length in the reserved place and restore the position\\n        this.pos = startPos - 1;\\n        this.writeVarint(len);\\n        this.pos += len;\\n    },\\n\\n    writeFloat: function(val) {\\n        this.realloc(4);\\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\\n        this.pos += 4;\\n    },\\n\\n    writeDouble: function(val) {\\n        this.realloc(8);\\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\\n        this.pos += 8;\\n    },\\n\\n    writeBytes: function(buffer) {\\n        var len = buffer.length;\\n        this.writeVarint(len);\\n        this.realloc(len);\\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\\n    },\\n\\n    writeRawMessage: function(fn, obj) {\\n        this.pos++; // reserve 1 byte for short message length\\n\\n        // write the message directly to the buffer and see how much was written\\n        var startPos = this.pos;\\n        fn(obj, this);\\n        var len = this.pos - startPos;\\n\\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\\n\\n        // finally, write the message length in the reserved place and restore the position\\n        this.pos = startPos - 1;\\n        this.writeVarint(len);\\n        this.pos += len;\\n    },\\n\\n    writeMessage: function(tag, fn, obj) {\\n        this.writeTag(tag, Pbf.Bytes);\\n        this.writeRawMessage(fn, obj);\\n    },\\n\\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\\n\\n    writeBytesField: function(tag, buffer) {\\n        this.writeTag(tag, Pbf.Bytes);\\n        this.writeBytes(buffer);\\n    },\\n    writeFixed32Field: function(tag, val) {\\n        this.writeTag(tag, Pbf.Fixed32);\\n        this.writeFixed32(val);\\n    },\\n    writeSFixed32Field: function(tag, val) {\\n        this.writeTag(tag, Pbf.Fixed32);\\n        this.writeSFixed32(val);\\n    },\\n    writeFixed64Field: function(tag, val) {\\n        this.writeTag(tag, Pbf.Fixed64);\\n        this.writeFixed64(val);\\n    },\\n    writeSFixed64Field: function(tag, val) {\\n        this.writeTag(tag, Pbf.Fixed64);\\n        this.writeSFixed64(val);\\n    },\\n    writeVarintField: function(tag, val) {\\n        this.writeTag(tag, Pbf.Varint);\\n        this.writeVarint(val);\\n    },\\n    writeSVarintField: function(tag, val) {\\n        this.writeTag(tag, Pbf.Varint);\\n        this.writeSVarint(val);\\n    },\\n    writeStringField: function(tag, str) {\\n        this.writeTag(tag, Pbf.Bytes);\\n        this.writeString(str);\\n    },\\n    writeFloatField: function(tag, val) {\\n        this.writeTag(tag, Pbf.Fixed32);\\n        this.writeFloat(val);\\n    },\\n    writeDoubleField: function(tag, val) {\\n        this.writeTag(tag, Pbf.Fixed64);\\n        this.writeDouble(val);\\n    },\\n    writeBooleanField: function(tag, val) {\\n        this.writeVarintField(tag, Boolean(val));\\n    }\\n};\\n\\nfunction readVarintRemainder(l, s, p) {\\n    var buf = p.buf,\\n        h, b;\\n\\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\\n\\n    throw new Error('Expected varint not more than 10 bytes');\\n}\\n\\nfunction readPackedEnd(pbf) {\\n    return pbf.type === Pbf.Bytes ?\\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\\n}\\n\\nfunction toNum(low, high, isSigned) {\\n    if (isSigned) {\\n        return high * 0x100000000 + (low >>> 0);\\n    }\\n\\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\\n}\\n\\nfunction writeBigVarint(val, pbf) {\\n    var low, high;\\n\\n    if (val >= 0) {\\n        low  = (val % 0x100000000) | 0;\\n        high = (val / 0x100000000) | 0;\\n    } else {\\n        low  = ~(-val % 0x100000000);\\n        high = ~(-val / 0x100000000);\\n\\n        if (low ^ 0xffffffff) {\\n            low = (low + 1) | 0;\\n        } else {\\n            low = 0;\\n            high = (high + 1) | 0;\\n        }\\n    }\\n\\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\\n        throw new Error('Given varint doesn\\\\'t fit into 10 bytes');\\n    }\\n\\n    pbf.realloc(10);\\n\\n    writeBigVarintLow(low, high, pbf);\\n    writeBigVarintHigh(high, pbf);\\n}\\n\\nfunction writeBigVarintLow(low, high, pbf) {\\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\\n    pbf.buf[pbf.pos]   = low & 0x7f;\\n}\\n\\nfunction writeBigVarintHigh(high, pbf) {\\n    var lsb = (high & 0x07) << 4;\\n\\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\\n    pbf.buf[pbf.pos++]  = high & 0x7f;\\n}\\n\\nfunction makeRoomForExtraLength(startPos, len, pbf) {\\n    var extraLen =\\n        len <= 0x3fff ? 1 :\\n        len <= 0x1fffff ? 2 :\\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\\n\\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\\n    pbf.realloc(extraLen);\\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\\n}\\n\\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\\n\\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\\n\\nfunction readUInt32(buf, pos) {\\n    return ((buf[pos]) |\\n        (buf[pos + 1] << 8) |\\n        (buf[pos + 2] << 16)) +\\n        (buf[pos + 3] * 0x1000000);\\n}\\n\\nfunction writeInt32(buf, val, pos) {\\n    buf[pos] = val;\\n    buf[pos + 1] = (val >>> 8);\\n    buf[pos + 2] = (val >>> 16);\\n    buf[pos + 3] = (val >>> 24);\\n}\\n\\nfunction readInt32(buf, pos) {\\n    return ((buf[pos]) |\\n        (buf[pos + 1] << 8) |\\n        (buf[pos + 2] << 16)) +\\n        (buf[pos + 3] << 24);\\n}\\n\\nfunction readUtf8(buf, pos, end) {\\n    var str = '';\\n    var i = pos;\\n\\n    while (i < end) {\\n        var b0 = buf[i];\\n        var c = null; // codepoint\\n        var bytesPerSequence =\\n            b0 > 0xEF ? 4 :\\n            b0 > 0xDF ? 3 :\\n            b0 > 0xBF ? 2 : 1;\\n\\n        if (i + bytesPerSequence > end) break;\\n\\n        var b1, b2, b3;\\n\\n        if (bytesPerSequence === 1) {\\n            if (b0 < 0x80) {\\n                c = b0;\\n            }\\n        } else if (bytesPerSequence === 2) {\\n            b1 = buf[i + 1];\\n            if ((b1 & 0xC0) === 0x80) {\\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\\n                if (c <= 0x7F) {\\n                    c = null;\\n                }\\n            }\\n        } else if (bytesPerSequence === 3) {\\n            b1 = buf[i + 1];\\n            b2 = buf[i + 2];\\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\\n                    c = null;\\n                }\\n            }\\n        } else if (bytesPerSequence === 4) {\\n            b1 = buf[i + 1];\\n            b2 = buf[i + 2];\\n            b3 = buf[i + 3];\\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\\n                if (c <= 0xFFFF || c >= 0x110000) {\\n                    c = null;\\n                }\\n            }\\n        }\\n\\n        if (c === null) {\\n            c = 0xFFFD;\\n            bytesPerSequence = 1;\\n\\n        } else if (c > 0xFFFF) {\\n            c -= 0x10000;\\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\\n            c = 0xDC00 | c & 0x3FF;\\n        }\\n\\n        str += String.fromCharCode(c);\\n        i += bytesPerSequence;\\n    }\\n\\n    return str;\\n}\\n\\nfunction writeUtf8(buf, str, pos) {\\n    for (var i = 0, c, lead; i < str.length; i++) {\\n        c = str.charCodeAt(i); // code point\\n\\n        if (c > 0xD7FF && c < 0xE000) {\\n            if (lead) {\\n                if (c < 0xDC00) {\\n                    buf[pos++] = 0xEF;\\n                    buf[pos++] = 0xBF;\\n                    buf[pos++] = 0xBD;\\n                    lead = c;\\n                    continue;\\n                } else {\\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\\n                    lead = null;\\n                }\\n            } else {\\n                if (c > 0xDBFF || (i + 1 === str.length)) {\\n                    buf[pos++] = 0xEF;\\n                    buf[pos++] = 0xBF;\\n                    buf[pos++] = 0xBD;\\n                } else {\\n                    lead = c;\\n                }\\n                continue;\\n            }\\n        } else if (lead) {\\n            buf[pos++] = 0xEF;\\n            buf[pos++] = 0xBF;\\n            buf[pos++] = 0xBD;\\n            lead = null;\\n        }\\n\\n        if (c < 0x80) {\\n            buf[pos++] = c;\\n        } else {\\n            if (c < 0x800) {\\n                buf[pos++] = c >> 0x6 | 0xC0;\\n            } else {\\n                if (c < 0x10000) {\\n                    buf[pos++] = c >> 0xC | 0xE0;\\n                } else {\\n                    buf[pos++] = c >> 0x12 | 0xF0;\\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\\n                }\\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\\n            }\\n            buf[pos++] = c & 0x3F | 0x80;\\n        }\\n    }\\n    return pos;\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/client/WindshaftMetadata.js\\\":\\n/*!*****************************************!*\\\\\\n  !*** ./src/client/WindshaftMetadata.js ***!\\n  \\\\*****************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return WindshaftMetadata; });\\n/* harmony import */ var _sources_MVTMetadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sources/MVTMetadata */ \\\"./src/sources/MVTMetadata.js\\\");\\n/* harmony import */ var _codecs_windshaft__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../codecs/windshaft */ \\\"./src/codecs/windshaft/index.js\\\");\\n\\n\\n\\n// // Windshaft metadata internal structure of properties\\n// properties: {\\n//     // There's an entry here for every column of the original dataset/SQL query\\n//     simple_value: { type: 'number', min: 10, max: 1000 },\\n\\n//     // Now, that's all there's to it for other sources,\\n//     // but for Windshaft sources things more complicated:\\n\\n//     // There might be multiple aggregated properties derived from one base column\\n//     value: {\\n//         type: 'number' // this is the type of the base column and all aggregated properties\\n//         aggregation: {\\n//             // actual properties received and decoded are _cdb_agg_sum_value and _cdb_avg_sum_value\\n//             sum: '_cdb_agg_sum_value',\\n//             avg: '_cdb_agg_sum_value'\\n//         }\\n//     },\\n\\n//     // Then we can have dimension properties, also derived from a base column\\n//     // here time1 is a date column of the dataset/query; but what we receive is\\n//     // a _cdb_dim_month_time1 property of numeric type.\\n//     // these dimension properties are triggered by clusterMonth/clusterMonthIso etc\\n//     time1: {\\n//         type: 'date' // this is the type of the base column only,\\n//         min: '2017-01-01T00:00:00',  // stats of the base column\\n//         max: '2018-12-01T00:00:00',\\n//         dimension: {\\n//             type: 'number', // type of the actual property received and decoded\\n//             grouping: {},// (to be changed to group) grouping parameters\\n//             propertyName: \\\"_cdb_dim_month_time1\\\",\\n//             min: 1,      // actual stats of property _cdb_dim_month_time1\\n//             max: 24\\n//         }\\n//     },\\n\\n//     // But wait, there's more, we can transfer a date dimension as an iso string property\\n//     // but then expose it as two date properties, one for the start of each period and\\n//     // one from the end (if not used, any of them may not be present)\\n//     // these dimension properties are triggered by clusterMonthStart/clusterMonthEnd etc.\\n//     time2: {\\n//         type: 'date' // this is the type of the base column only,\\n//         min: '2017-01-01T00:00:00',  // stats of the base column\\n//         max: '2018-12-01T00:00:00',\\n//         dimension: {\\n//             type: 'category', // type of the actual (source) property received internally\\n//             grouping: {},// (to be changed to group) grouping parameters\\n//             propertyName: \\\"_cdb_dim_month_time1\\\", // source property\\n//             min: '2017-01', // stats of property _cdb_dim_month_time1\\n//             max: '2017-12',\\n//             range: [\\n//                 // here come the actual decoded (internal) properties!!:\\n//                 // the types of these properties is 'date'\\n//                 '_cdb_dim_month_time1_start',\\n//                 '_cdb_dim_month_time1_end'\\n//             }\\n//         }\\n//     }\\n// }\\n\\nclass WindshaftMetadata extends _sources_MVTMetadata__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (...args) {\\n        super(...args);\\n        this.propertyKeys = [];\\n        this.baseNames = {};\\n        Object.keys(this.properties).forEach(baseName => {\\n            const property = this.properties[baseName];\\n            if (property.aggregations) {\\n                Object.values(property.aggregations).forEach(propName => {\\n                    this._addProperty(baseName, propName);\\n                });\\n            } else if (property.dimension) {\\n                if (property.dimension.range) {\\n                    property.dimension.range.forEach(rangePropertyName => {\\n                        this._addProperty(baseName, rangePropertyName, false);\\n                    });\\n                    // add source property too, for stats\\n                    this._addProperty(baseName, property.dimension.propertyName);\\n                } else {\\n                    this._addProperty(baseName, property.dimension.propertyName);\\n                }\\n            } else {\\n                this._addProperty(baseName, baseName);\\n            }\\n        });\\n    }\\n\\n    _addProperty (baseName, propertyName, addToKeys = true) {\\n        this.baseNames[propertyName] = baseName;\\n        if (addToKeys) {\\n            this.propertyKeys.push(propertyName);\\n        }\\n    }\\n\\n    _dimensionInfo (propertyName) {\\n        const baseName = this.baseName(propertyName) || propertyName;\\n        const column = this.properties[baseName];\\n        let dimension = null;\\n        if (baseName !== propertyName) {\\n            if (baseName !== propertyName && column.dimension) {\\n                dimension = column.dimension;\\n            }\\n        }\\n        const baseType = column.type;\\n        const sourceType = dimension ? dimensionBaseType(dimension) : baseType;\\n        // type of the dataframe properties\\n        const dataframeType = dimension ? dimensionType(dimension, propertyName) : sourceType;\\n        return { baseName, column, dimension, dataframeType, baseType, sourceType };\\n    }\\n\\n    baseName (propertyName) {\\n        return this.baseNames[propertyName];\\n    }\\n\\n    decodedProperties (propertyName) {\\n        const { dimension } = this._dimensionInfo(propertyName);\\n        if (dimension && dimension.grouping && dimension.range) {\\n            return dimension.range;\\n        }\\n        return super.decodedProperties(propertyName);\\n    }\\n\\n    // Stats usage: (is internal, external or source representation preferable?)\\n    // * global aggregations\\n    // * coding/decoding\\n    stats (propertyName) {\\n        const { dimension } = this._dimensionInfo(propertyName);\\n        if (dimension && dimension.grouping) {\\n            return dimension;\\n        }\\n        return super.stats(propertyName);\\n    }\\n\\n    setCodecs () {\\n        setMetadataCodecs(this);\\n    }\\n\\n    sourcePropertyName (propertyName) {\\n        const baseName = this.baseName(propertyName);\\n        const dimension = this.properties[baseName].dimension;\\n        if (dimension && dimension.range) {\\n            return dimension.propertyName;\\n        }\\n        return propertyName;\\n    }\\n}\\n\\nfunction dimensionType (dimension, propertyName) {\\n    if (dimension.range) {\\n        return 'date';\\n    }\\n    return dimension.type;\\n}\\n\\nfunction dimensionBaseType (dimension) {\\n    return dimension.type;\\n}\\n\\nfunction setMetadataCodecs (metadata) {\\n    // assign codecs\\n    // a single codec kept per base property\\n    // so, all its aggregations share the same encoding.\\n    // form a dimension, the kept codec is that of the dimension\\n    Object.keys(metadata.properties).forEach(baseName => {\\n        const property = metadata.properties[baseName];\\n        const baseType = property.type;\\n        if (baseType !== 'geometry') {\\n            const dimType = property.dimension ? property.dimension.type : null;\\n            const dimName = dimType ? property.dimension.propertyName : baseName;\\n            const actualDimType = (dimType === 'category' && property.dimension.range) ? 'timerange' : dimType;\\n            property.codec = Object(_codecs_windshaft__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(metadata, actualDimType || baseType, dimName || baseName);\\n        }\\n    });\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/client/WindshaftWorker.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./src/client/WindshaftWorker.js ***!\\n  \\\\***************************************/\\n/*! exports provided: WindshaftWorker */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"WindshaftWorker\\\", function() { return WindshaftWorker; });\\n/* harmony import */ var _sources_MVTWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sources/MVTWorker */ \\\"./src/sources/MVTWorker.js\\\");\\n/* harmony import */ var _WindshaftMetadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WindshaftMetadata */ \\\"./src/client/WindshaftMetadata.js\\\");\\n\\n\\n\\nclass WindshaftWorker extends _sources_MVTWorker__WEBPACK_IMPORTED_MODULE_0__[\\\"MVTWorker\\\"] {\\n    castMetadata (metadata) {\\n        Object.setPrototypeOf(metadata, _WindshaftMetadata__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"].prototype);\\n        metadata.setCodecs();\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/client/mvt/feature-decoder.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./src/client/mvt/feature-decoder.js ***!\\n  \\\\*******************************************/\\n/*! exports provided: Polygon, decodeLines, decodePolygons, signedPolygonArea, clipPolygon */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Polygon\\\", function() { return Polygon; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decodeLines\\\", function() { return decodeLines; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decodePolygons\\\", function() { return decodePolygons; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"signedPolygonArea\\\", function() { return signedPolygonArea; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"clipPolygon\\\", function() { return clipPolygon; });\\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/geometry */ \\\"./src/utils/geometry.js\\\");\\n\\nclass Polygon {\\n    constructor () {\\n        this.flat = [];\\n        this.holes = [];\\n        this.clipped = [];\\n        this.clippedType = []; // Store a bitmask of the clipped half-planes\\n    }\\n}\\n\\nfunction decodeLines (geometries, mvtExtent) {\\n    let decodedGeometries = [];\\n    geometries.map(l => {\\n        let line = [];\\n        l.map(point => {\\n            line.push([2 * point.x / mvtExtent - 1, 2 * (1 - point.y / mvtExtent) - 1]);\\n        });\\n        decodedGeometries.push(...clipLine(line));\\n    });\\n    return decodedGeometries;\\n}\\n\\n/*\\n    All this clockwise non-sense is needed because the MVT decoder dont decode the MVT fully.\\n    It doesn't distinguish between internal polygon rings (which defines holes) or external ones, which defines more polygons (mulipolygons)\\n    See:\\n        https://github.com/mapbox/vector-tile-spec/tree/master/2.1\\n        https://en.wikipedia.org/wiki/Shoelace_formula\\n*/\\nfunction decodePolygons (geometries, mvtExtent) {\\n    let currentPolygon = null;\\n    let decoded = [];\\n    let invertedOrientation;\\n    geometries.forEach(geom => {\\n        let area = signedPolygonArea(geom);\\n        if (area === 0) {\\n            return;\\n        }\\n        if (invertedOrientation === undefined) {\\n            // According to the MVT spec this condition cannot happen for\\n            // MVT spec compliant tiles, but many buggy implementations\\n            // don't comply with this rule when generating tiles\\n            // Also, other implementations accept this out-of-the-spec condition\\n            invertedOrientation = area > 0;\\n        }\\n        const isExternalPolygon = invertedOrientation ? area > 0 : area < 0;\\n\\n        const preClippedVertices = _getPreClippedVertices(geom, mvtExtent);\\n\\n        if (isExternalPolygon) {\\n            if (currentPolygon) {\\n                decoded.push(currentPolygon);\\n            }\\n\\n            currentPolygon = new Polygon();\\n        }\\n\\n        currentPolygon = clipPolygon(preClippedVertices, currentPolygon, !isExternalPolygon);\\n    });\\n\\n    if (currentPolygon) {\\n        decoded.push(currentPolygon);\\n    }\\n\\n    return decoded;\\n}\\n\\nfunction signedPolygonArea (vertices) {\\n    // https://en.wikipedia.org/wiki/Shoelace_formula\\n    let a = 0;\\n    for (let i = 0; i < vertices.length; i++) {\\n        let j = (i + 1) % vertices.length;\\n        a += vertices[i].x * vertices[j].y;\\n        a -= vertices[j].x * vertices[i].y;\\n    }\\n    return a / 2;\\n}\\n\\nconst CLIPMAX = 1;\\nconst CLIPMIN = -CLIPMAX;\\n\\nconst clippingEdges = [\\n    {\\n        // Right edge; x <= CLIPMAX for points inside\\n        inside: p => p[0] <= CLIPMAX,\\n        intersect: (a, b) => _utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].intersect(a, b, [CLIPMAX, -100], [CLIPMAX, 100])\\n    },\\n    {\\n        // Top edge; y <= CLIPMAX for points inside\\n        inside: p => p[1] <= CLIPMAX,\\n        intersect: (a, b) => _utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].intersect(a, b, [-100, CLIPMAX], [100, CLIPMAX])\\n    },\\n    {\\n        // Left edge; x >= CLIPMIN for points inside\\n        inside: p => p[0] >= CLIPMIN,\\n        intersect: (a, b) => _utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].intersect(a, b, [CLIPMIN, -100], [CLIPMIN, 100])\\n    },\\n    {\\n        // Bottom edge; y >= CLIPMIN for points inside\\n        inside: p => p[1] >= CLIPMIN,\\n        intersect: (a, b) => _utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].intersect(a, b, [-100, CLIPMIN], [100, CLIPMIN])\\n    }\\n];\\nconst numberOfEdges = clippingEdges.length;\\n\\nfunction clipPolygon (preClippedVertices, polygon, isHole) {\\n    // Sutherland-Hodgman Algorithm to clip polygons to the tile\\n    // https://www.cs.drexel.edu/~david/Classes/CS430/Lectures/L-05_Polygons.6.pdf\\n\\n    let clippedTypes = {};\\n\\n    // for each clipping edge\\n    for (let i = 0; i < numberOfEdges; i++) {\\n        const preClippedVertices2 = [];\\n        const clippedTypes2 = {};\\n\\n        const setClippedType = (vertexIndex, oldVertexIndex, edge = -1) => {\\n            let clippedType = 0;\\n            if (oldVertexIndex >= 0) {\\n                clippedType = clippedTypes[oldVertexIndex] || 0;\\n            }\\n            if (edge >= 0) {\\n                clippedType = clippedType | (1 << edge);\\n            }\\n            if (clippedType) {\\n                clippedTypes2[vertexIndex] = clippedType;\\n            }\\n        };\\n\\n        // for each edge on polygon\\n        for (let k = 0; k < preClippedVertices.length - 1; k++) {\\n            // clip polygon edge\\n            const a = preClippedVertices[k];\\n            const b = preClippedVertices[k + 1];\\n\\n            const insideA = clippingEdges[i].inside(a);\\n            const insideB = clippingEdges[i].inside(b);\\n\\n            if (insideA && insideB) {\\n                // case 1: both inside, push B vertex\\n                setClippedType(preClippedVertices2.length, k + 1);\\n                preClippedVertices2.push(b);\\n            } else if (insideA) {\\n                // case 2: just B outside, push intersection\\n                const intersectionPoint = clippingEdges[i].intersect(a, b);\\n                setClippedType(preClippedVertices2.length, k + 1, i);\\n                preClippedVertices2.push(intersectionPoint);\\n            } else if (insideB) {\\n                // case 4: just A outside: push intersection, push B\\n                const intersectionPoint = clippingEdges[i].intersect(a, b);\\n                setClippedType(preClippedVertices2.length, k, i);\\n                preClippedVertices2.push(intersectionPoint);\\n                setClippedType(preClippedVertices2.length, k + 1);\\n                preClippedVertices2.push(b);\\n            } else {\\n                // case 3: both outside: do nothing\\n            }\\n        }\\n        if (preClippedVertices2.length) {\\n            if (clippedTypes2[0]) {\\n                clippedTypes2[preClippedVertices2.length] = clippedTypes2[0];\\n            }\\n            preClippedVertices2.push(preClippedVertices2[0]);\\n        }\\n        preClippedVertices = preClippedVertices2;\\n        clippedTypes = clippedTypes2;\\n    }\\n\\n    // rings with less than 3 vertices are degenerate\\n    const MIN_VALID_NUM_VERTICES = 3;\\n\\n    // preClippedVertices is closed by repeating the first vertex\\n    if (preClippedVertices.length >= MIN_VALID_NUM_VERTICES + 1) {\\n        if (isHole) {\\n            polygon.holes.push(polygon.flat.length / 2);\\n        }\\n        preClippedVertices.forEach(v => {\\n            polygon.flat.push(v[0], v[1]);\\n        });\\n        Object.keys(clippedTypes).forEach(i => {\\n            polygon.clipped.push(Number(i) * 2);\\n            polygon.clippedType.push(clippedTypes[i]);\\n        });\\n    }\\n\\n    return polygon;\\n}\\n\\nfunction _getPreClippedVertices (geom, mvtExtent) {\\n    return geom.map((coord) => {\\n        let x = coord.x;\\n        let y = coord.y;\\n\\n        x = 2 * x / mvtExtent - 1;\\n        y = 2 * (1 - y / mvtExtent) - 1;\\n\\n        return [x, y];\\n    });\\n}\\n\\nfunction clipLine (line) {\\n    // linestring clipping based on the Cohen-Sutherland algorithm\\n    // input is a single linestring [point0, point1, ...]\\n    // output is an array of flat linestrings:\\n    // [[p0x, p0y, p1x, p1y, ...], ...]\\n    let clippedLine = [];\\n    const clippedLines = [];\\n    function clipType (point) {\\n        let type = 0;\\n        for (let i = 0; i < numberOfEdges; i++) {\\n            type = type | (clippingEdges[i].inside(point) ? 0 : (1 << i));\\n        }\\n        return type;\\n    }\\n    function intersect (point1, point2, type) {\\n        for (let i = 0; i < numberOfEdges; i++) {\\n            const mask = 1 << i;\\n            if (type & mask) {\\n                const p = clippingEdges[i].intersect(point1, point2);\\n                type = clipType(p) & ~mask;\\n                return [p, type];\\n            }\\n        }\\n    }\\n    let point0 = line[0];\\n    let type0 = clipType(point0);\\n    for (let i = 1; i < line.length; ++i) {\\n        let point1 = line[i];\\n        let type1 = clipType(point1);\\n        const nextType = type1;\\n        const nextPoint = point1;\\n\\n        for (; ;) {\\n            if (!(type0 | type1)) {\\n                // both points inside\\n                clippedLine.push(...point0);\\n                if (type1 !== nextType) {\\n                    clippedLine.push(...point1);\\n                    if (i < line.length - 1) {\\n                        // break line\\n                        clippedLines.push(clippedLine);\\n                        clippedLine = [];\\n                    }\\n                } else if (i === line.length - 1) {\\n                    clippedLine.push(...point1);\\n                }\\n                break;\\n            } else if (type0 & type1) {\\n                // both points outside\\n                break;\\n            } else if (type0) {\\n                // only point1 inside\\n                [point0, type0] = intersect(point0, point1, type0);\\n            } else {\\n                // only point0 inside\\n                [point1, type1] = intersect(point0, point1, type1);\\n            }\\n        }\\n\\n        point0 = nextPoint;\\n        type0 = nextType;\\n    }\\n\\n    clippedLine = _removeDuplicatedVerticesOnLine(clippedLine);\\n    if (clippedLine.length > 0) {\\n        clippedLines.push(clippedLine);\\n    }\\n\\n    return clippedLines;\\n}\\n\\nfunction _removeDuplicatedVerticesOnLine (line) {\\n    const result = [];\\n    let prevX;\\n    let prevY;\\n    for (let i = 0; i < line.length; i += 2) {\\n        const x = line[i];\\n        const y = line[i + 1];\\n        if (x !== prevX || y !== prevY) {\\n            result.push(x, y);\\n            prevX = x;\\n            prevY = y;\\n        }\\n    }\\n    return result;\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/client/rsys.js\\\":\\n/*!****************************!*\\\\\\n  !*** ./src/client/rsys.js ***!\\n  \\\\****************************/\\n/*! exports provided: wToR, rTiles, getRsysFromTile, default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"wToR\\\", function() { return wToR; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rTiles\\\", function() { return rTiles; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getRsysFromTile\\\", function() { return getRsysFromTile; });\\n/**\\n * An RSys defines a local coordinate system that maps the coordinates\\n * in the range -1 <= x <= +1; -1 <= y <= +1 to an arbitrary rectangle\\n * in an external coordinate system. (e.g. Dataframe coordinates to World coordinates)\\n * It is the combination of a translation and anisotropic scaling.\\n * @typedef {Object} RSys - Renderer relative coordinate system\\n * @property {RPoint} center - Position of the local system in external coordinates\\n * @property {number} scale - Y-scale (local Y-distance / external Y-distance)\\n*/\\n\\n/*\\n * Random notes\\n *\\n * We can redefine Dataframe to use a Rsys instead of center, scale\\n * and we can use an Rsys for the Renderer's canvas.\\n *\\n * Some interesting World coordinate systems:\\n *\\n * WM (Webmercator): represents a part of the world (excluding polar regions)\\n * with coordinates in the range +/-WM_R for both X and Y. (positive orientation: E,N)\\n *\\n * NWMC (Normalized Webmercator Coordinates): represents the Webmercator *square*\\n * with coordinates in the range +/-1. Results from dividing Webmercator coordinates\\n * by WM_R. (positive orientation: E,N)\\n *\\n * TC (Tile coordinates): integers in [0, 2^Z) for zoom level Z. Example: the tile 0/0/0 (zoom, x, y) is the root tile.\\n * (positive orientation: E,S)\\n *\\n * An RSys's rectangle (its bounds) is the area covered by the local coordinates in\\n * the range +/-1.\\n *\\n * When an RSys external coordinate system is WM or NWMC, we can compute:\\n * * Minimum zoom level for which tiles are no larger than the RSys rectangle:\\n *   Math.ceil(Math.log2(1 / r.scale));\\n * * Maximum zoom level for which tiles are no smaller than the rectangle:\\n *   Math.floor(Math.log2(1 / r.scale));\\n * (note that 1 / r.scale is the fraction of the World height that the local rectangle's height represents)\\n *\\n * We'll use the term World coordinates below for the *external* reference system\\n * of an RSys (usually NWMC).\\n */\\n\\n/* eslint no-unused-vars: [\\\"off\\\"] */\\n\\n/**\\n * R coordinates to World\\n * @param {RSys} r - ref. of the passed coordinates\\n * @param {number} x - x coordinate in r\\n * @param {number} y - y coordinate in r\\n * @return {RPoint} World coordinates\\n */\\nfunction rToW (r, x, y) {\\n    return { x: x * r.scale + r.center.x, y: y * r.scale + r.center.y };\\n}\\n\\n/**\\n * World coordinates to local RSys\\n * @param {number} x - x W-coordinate\\n * @param {number} y - y W-coordinate\\n * @param {RSys} r - target ref. system\\n * @return {RPoint} R coordinates\\n */\\nfunction wToR (x, y, r) {\\n    return { x: (x - r.center.x) / r.scale, y: (y - r.center.y) / r.scale };\\n}\\n\\n/**\\n * RSys of a tile (mapping local tile coordinates in +/-1 to NWMC)\\n * @param {number} x - TC x coordinate\\n * @param {number} y - TC y coordinate\\n * @param {number} z - Tile zoom level\\n * @return {RSys}\\n */\\nfunction tileRsys (x, y, z) {\\n    let max = Math.pow(2, z);\\n    return { scale: 1 / max, center: { x: 2 * (x + 0.5) / max - 1, y: 1 - 2 * (y + 0.5) / max } };\\n}\\n\\n/**\\n * TC tiles that intersect the local rectangle of an RSys\\n * (with the largest tile size no larger than the rectangle)\\n * @param {RSys} rsys\\n * @return {Array} - array of TC tiles {x, y, z}\\n */\\nfunction rTiles (zoom, bounds, viewportZoomToSourceZoom = Math.ceil) {\\n    return wRectangleTiles(viewportZoomToSourceZoom(zoom), bounds);\\n}\\n\\n/**\\n * TC tiles of a given zoom level that intersect a W rectangle\\n * @param {number} z\\n * @param {Array} - rectangle extents [minx, miny, maxx, maxy]\\n * @return {Array} - array of TC tiles {x, y, z}\\n */\\nfunction wRectangleTiles (z, wr) {\\n    const [wMinx, wMiny, wMaxx, wMaxy] = wr;\\n    const n = (1 << z); // for 0 <= z <= 30 equals Math.pow(2, z)\\n\\n    const clamp = x => Math.min(Math.max(x, 0), n - 1);\\n    // compute tile coordinate ranges\\n    const tMinx = clamp(Math.floor(n * (wMinx + 1) * 0.5));\\n    const tMaxx = clamp(Math.ceil(n * (wMaxx + 1) * 0.5) - 1);\\n    const tMiny = clamp(Math.floor(n * (1 - wMaxy) * 0.5));\\n    const tMaxy = clamp(Math.ceil(n * (1 - wMiny) * 0.5) - 1);\\n    let tiles = [];\\n    for (let x = tMinx; x <= tMaxx; ++x) {\\n        for (let y = tMiny; y <= tMaxy; ++y) {\\n            tiles.push({ x: x, y: y, z: z });\\n        }\\n    }\\n    return tiles;\\n}\\n\\n/**\\n * Get the Rsys of a tile where the Rsys's center is the tile center and the Rsys's scale is the tile extent.\\n * @param {*} x\\n * @param {*} y\\n * @param {*} z\\n * @returns {RSys}\\n */\\nfunction getRsysFromTile (x, y, z) {\\n    return {\\n        center: {\\n            x: ((x + 0.5) / Math.pow(2, z)) * 2.0 - 1,\\n            y: (1.0 - (y + 0.5) / Math.pow(2, z)) * 2.0 - 1.0\\n        },\\n        scale: 1 / Math.pow(2, z)\\n    };\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = ({ rTiles, getRsysFromTile, wToR });\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/Base.js\\\":\\n/*!****************************!*\\\\\\n  !*** ./src/codecs/Base.js ***!\\n  \\\\****************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return BaseCodec; });\\n// A Dataframe property Codec is used to transform between property value encodings.\\n// Three different encodings are handled:\\n// * The `source` encoding correspond to the format in which\\n//   the property values appear in the data sources (e.g. in MVT)\\n// * The `internal` encoding is used in Dataframe properties\\n//   apt for GPU consumption.\\n// * The `external` encoding is the format in which feature\\n//   properties are presented to the user\\n//   (e.g. `property.eval(feature)` or `globalMin(property)`)\\n// The Codec base class serves both as a base for derived codecs.\\n// Codecs are associated to source properties.\\n// There are two kind of codecs:\\n// * Scalar (simple) encoder: source value is encoded as a single internal value\\n// * Range encoder: a source value encodes as a pair [lo, hi] of values.\\nclass BaseCodec {\\n    constructor (metadata, propertyName) {\\n        if (metadata && propertyName) {\\n            this._baseName = metadata.baseName(propertyName);\\n        }\\n    }\\n\\n    isRange () {\\n        return false;\\n    }\\n\\n    isIdentity () {\\n        return false;\\n    }\\n\\n    // Convert source encoding to internal;\\n    // Result is an array [lo, hi] for ranges and a value for scalar codecs\\n    // Used to encode sources into dataframe properties.\\n    sourceToInternal (metadata, v) {\\n        return v;\\n    }\\n\\n    // Convert internal encoding to external;\\n    // Input may be one for scalar, or two values (hi, lo) for ranges.\\n    // Used to present dataframe features.\\n    internalToExternal (metadata, v) {\\n        return v;\\n    }\\n\\n    // Convert external encoding back to source values.\\n    // Used to generate SQL filters: (apply to constant/global)\\n    externalToSource (metadata, v) {\\n        return v;\\n    }\\n\\n    // Convert source encoding to external encoding.\\n    // Used to present source stats values (global aggregations)\\n    // to match the format of constant expressions.\\n    sourceToExternal (metadata, v) {\\n        return this.internalToExternal(metadata, this.sourceToInternal(metadata, v));\\n    }\\n\\n    // Convert external to internal encoding.\\n    // Result is a value for scalar codecs\\n    // and [lo, hi] for range codecs.\\n    // used to to apply filters in GLSL inlined code;\\n    // evaluate binary operations property vs external (constant/global\\n    externalToInternal (metadata, v) {\\n        return this.sourceToInternal(metadata, this.externalToSource(metadata, v));\\n    }\\n\\n    // Generate GLSL inline expression to map a property value\\n    // to the internal encoding of another property.\\n    // Used to bind some binary operations between properties.\\n    inlineInternalMatch (thisValue, _otherCodec) {\\n        return `${thisValue}`;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/Category.js\\\":\\n/*!********************************!*\\\\\\n  !*** ./src/codecs/Category.js ***!\\n  \\\\********************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CategoryCodec; });\\n/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base */ \\\"./src/codecs/Base.js\\\");\\n\\n\\nclass CategoryCodec extends _Base__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    sourceToInternal (metadata, propertyValue) {\\n        return metadata.categorizeString(this._baseName, propertyValue);\\n    }\\n\\n    internalToExternal (metadata, propertyValue) {\\n        return metadata.IDToCategory.get(propertyValue);\\n    }\\n\\n    sourceToExternal (metadata, propertyValue) {\\n        return propertyValue;\\n    }\\n\\n    externalToSource (metadata, v) {\\n        return v;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/Identity.js\\\":\\n/*!********************************!*\\\\\\n  !*** ./src/codecs/Identity.js ***!\\n  \\\\********************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return IdentityCodec; });\\n/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base */ \\\"./src/codecs/Base.js\\\");\\n\\n\\n// The Identity codec class serves\\n// as the default, identity encoding, in which all three\\n// encodings are exactly the same.\\nclass IdentityCodec extends _Base__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    isIdentity () {\\n        return true;\\n    }\\n\\n    sourceToInternal (metadata, v) {\\n        return v;\\n    }\\n\\n    internalToExternal (metadata, v) {\\n        return v;\\n    }\\n\\n    sourceToExternal (metadata, v) {\\n        return v;\\n    }\\n\\n    externalToSource (metadata, v) {\\n        return v;\\n    }\\n\\n    externalToInternal (metadata, v) {\\n        return v;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/Number.js\\\":\\n/*!******************************!*\\\\\\n  !*** ./src/codecs/Number.js ***!\\n  \\\\******************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return NumberCodec; });\\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Identity */ \\\"./src/codecs/Identity.js\\\");\\n/* harmony import */ var _renderer_viz_expressions_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../renderer/viz/expressions/constants */ \\\"./src/renderer/viz/expressions/constants.js\\\");\\n\\n\\n\\nclass NumberCodec extends _Identity__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    sourceToInternal (metadata, propertyValue) {\\n        if (isNaN(propertyValue) || propertyValue == null) {\\n            propertyValue = _renderer_viz_expressions_constants__WEBPACK_IMPORTED_MODULE_1__[\\\"FP32_DESIGNATED_NULL_VALUE\\\"];\\n        }\\n        return propertyValue;\\n    }\\n\\n    internalToExternal (metadata, value) {\\n        if (value === _renderer_viz_expressions_constants__WEBPACK_IMPORTED_MODULE_1__[\\\"FP32_DESIGNATED_NULL_VALUE\\\"]) {\\n            value = null;\\n        }\\n        return value;\\n    }\\n\\n    externalToInternal (metadata, value) {\\n        if (value === null) {\\n            value = _renderer_viz_expressions_constants__WEBPACK_IMPORTED_MODULE_1__[\\\"FP32_DESIGNATED_NULL_VALUE\\\"];\\n        }\\n        return value;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/mvt/Category.js\\\":\\n/*!************************************!*\\\\\\n  !*** ./src/codecs/mvt/Category.js ***!\\n  \\\\************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return MVTCategoryCodec; });\\n/* harmony import */ var _Category__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Category */ \\\"./src/codecs/Category.js\\\");\\n/* harmony import */ var _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/carto-runtime-error */ \\\"./src/errors/carto-runtime-error.js\\\");\\n\\n\\n\\nclass MVTCategoryCodec extends _Category__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    sourceToInternal (metadata, propertyValue) {\\n        const propertyValueType = typeof propertyValue;\\n        if (propertyValue !== null && propertyValueType !== 'undefined' && propertyValueType !== 'string') {\\n            // In general Codecs are unique per original base property, not per source property,\\n            // but for the generic MVT sources we don't support multiple source properties per base property (e.g. aggregations)\\n            // so it would suffice to keep the property name in the Codec class.\\n            // For more general solutions we'd need to provide the source property name as an argument to this method.\\n            throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"](\\n                `MVT decoding error. Metadata property '${this._baseName}' is of type 'category' but the MVT tile contained a feature property of type '${propertyValueType}': '${propertyValue}'`,\\n                _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_1__[\\\"CartoRuntimeErrorTypes\\\"].MVT\\n            );\\n        }\\n        return super.sourceToInternal(metadata, propertyValue);\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/mvt/Number.js\\\":\\n/*!**********************************!*\\\\\\n  !*** ./src/codecs/mvt/Number.js ***!\\n  \\\\**********************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return MVTNumberCodec; });\\n/* harmony import */ var _Number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Number */ \\\"./src/codecs/Number.js\\\");\\n/* harmony import */ var _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/carto-runtime-error */ \\\"./src/errors/carto-runtime-error.js\\\");\\n\\n\\n\\nclass MVTNumberCodec extends _Number__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    sourceToInternal (metadata, propertyValue) {\\n        const propertyValueType = typeof propertyValue;\\n        if (propertyValue !== null && propertyValueType !== 'undefined' && propertyValueType !== 'number') {\\n            throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"](\\n                `MVT decoding error. Metadata property '${this._baseName}' is of type 'number' but the MVT tile contained a feature property of type '${propertyValueType}': '${propertyValue}'`,\\n                _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_1__[\\\"CartoRuntimeErrorTypes\\\"].MVT\\n            );\\n        }\\n        return super.sourceToInternal(metadata, propertyValue);\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/mvt/index.js\\\":\\n/*!*********************************!*\\\\\\n  !*** ./src/codecs/mvt/index.js ***!\\n  \\\\*********************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return MVTCodecFactory; });\\n/* harmony import */ var _Number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Number */ \\\"./src/codecs/mvt/Number.js\\\");\\n/* harmony import */ var _Category__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Category */ \\\"./src/codecs/mvt/Category.js\\\");\\n/* harmony import */ var _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/carto-runtime-error */ \\\"./src/errors/carto-runtime-error.js\\\");\\n\\n\\n\\n\\nfunction MVTCodecFactory (metadata, type, propertyName) {\\n    switch (type) {\\n        case 'number':\\n            return new _Number__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](metadata, propertyName);\\n        case 'category':\\n            return new _Category__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"](metadata, propertyName);\\n        default:\\n            throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"](\\n                `MVT decoding error. Feature property value of type '${type}' cannot be decoded.`,\\n                _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_2__[\\\"CartoRuntimeErrorTypes\\\"].MVT\\n            );\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/windshaft/TimeRange.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./src/codecs/windshaft/TimeRange.js ***!\\n  \\\\*******************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return TimeRangeCodec; });\\n/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Base */ \\\"./src/codecs/Base.js\\\");\\n/* harmony import */ var _utils_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/util */ \\\"./src/utils/util.js\\\");\\n\\n\\n\\nclass TimeRangeCodec extends _Base__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (metadata, propertyName) {\\n        super(metadata, propertyName);\\n\\n        const stats = metadata.stats(propertyName);\\n        const { min } = stats;\\n        const timeZone = stats.grouping && stats.grouping.timezone;\\n        const timeRange = _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"timeRange\\\"]({ timeZone, iso: min });\\n\\n        this._min = timeRange.startValue / 1000;\\n        this._timeZone = timeZone;\\n    }\\n\\n    isRange () {\\n        return true;\\n    }\\n\\n    sourceToInternal (metadata, propertyValue) {\\n        const timeRange = _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"timeRange\\\"]({ iso: propertyValue });\\n        return [timeRange.startValue / 1000, timeRange.endValue / 1000].map(v => (v - this._min));\\n    }\\n\\n    internalToExternal (metadata, [lo, hi]) {\\n        return _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"timeRange\\\"]({\\n            start: (lo + this._min) * 1000,\\n            end: (hi + this._min) * 1000,\\n            timeZone: this._timeZone\\n        });\\n    }\\n\\n    externalToSource (metadata, v) {\\n        return _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"castTimeRange\\\"](v, this._timeZone)._iso;\\n    }\\n\\n    sourceToExternal (metadata, v) {\\n        return _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"timeRange\\\"]({ iso: v, timeZone: this._timeZone });\\n    }\\n\\n    inlineInternalMatch (thisValue, otherCodec) {\\n        const offset = otherCodec._min.getTime() - this._min.getTime();\\n        return `(${thisValue}-${offset.toFixed(20)})`;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/windshaft/WindshaftDate.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./src/codecs/windshaft/WindshaftDate.js ***!\\n  \\\\***********************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return WindshaftDateCodec; });\\n/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Base */ \\\"./src/codecs/Base.js\\\");\\n/* harmony import */ var _utils_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/util */ \\\"./src/utils/util.js\\\");\\n\\n\\n\\nclass WindshaftDateCodec extends _Base__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (metadata, propertyName) {\\n        super(metadata, propertyName);\\n\\n        const { min } = metadata.stats(propertyName);\\n        this._min_ms = min * 1000;\\n        this._min_date = _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"msToDate\\\"](this._min_ms);\\n    }\\n\\n    sourceToInternal (metadata, propertyValue) {\\n        return _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"msToDate\\\"](propertyValue * 1000) - this._min_date;\\n    }\\n\\n    internalToExternal (metadata, propertyValue) {\\n        let value = propertyValue;\\n        value += this._min_ms;\\n        return _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"msToDate\\\"](value);\\n    }\\n\\n    externalToSource (metadata, v) {\\n        return v.getTime() / 1000;\\n    }\\n\\n    sourceToExternal (metadata, v) {\\n        return asDate(v);\\n    }\\n\\n    inlineInternalMatch (thisValue, otherCodec) {\\n        const offset = otherCodec._min_ms - this._min_ms;\\n        return `(${thisValue}-${offset.toFixed(20)})`;\\n    }\\n}\\n\\n// convert seconds epoch (source encoding) or Date to Date\\nfunction asDate (value) {\\n    if (value instanceof Date) {\\n        return value;\\n    }\\n    return _utils_util__WEBPACK_IMPORTED_MODULE_1__[\\\"msToDate\\\"](value * 1000);\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/codecs/windshaft/index.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./src/codecs/windshaft/index.js ***!\\n  \\\\***************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return windshaftCodecFactory; });\\n/* harmony import */ var _Number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Number */ \\\"./src/codecs/Number.js\\\");\\n/* harmony import */ var _Category__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Category */ \\\"./src/codecs/Category.js\\\");\\n/* harmony import */ var _WindshaftDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WindshaftDate */ \\\"./src/codecs/windshaft/WindshaftDate.js\\\");\\n/* harmony import */ var _TimeRange__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TimeRange */ \\\"./src/codecs/windshaft/TimeRange.js\\\");\\n/* harmony import */ var _errors_carto_maps_api_error__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors/carto-maps-api-error */ \\\"./src/errors/carto-maps-api-error.js\\\");\\n\\n\\n\\n\\n\\n\\nfunction windshaftCodecFactory (metadata, type, propertyName) {\\n    switch (type) {\\n        case 'number':\\n            return new _Number__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](metadata, propertyName);\\n        case 'category':\\n            return new _Category__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"](metadata, propertyName);\\n        case 'date':\\n            return new _WindshaftDate__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"](metadata, propertyName);\\n        case 'timerange':\\n            return new _TimeRange__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"](metadata, propertyName);\\n        default:\\n            throw new _errors_carto_maps_api_error__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"](\\n                `Windshaft MVT decoding error. Feature property value of type '${type}' cannot be decoded.`,\\n                _errors_carto_maps_api_error__WEBPACK_IMPORTED_MODULE_4__[\\\"CartoMapsAPIErrorTypes\\\"].NOT_SUPPORTED);\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/errors/carto-error.js\\\":\\n/*!***********************************!*\\\\\\n  !*** ./src/errors/carto-error.js ***!\\n  \\\\***********************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CartoError; });\\n/**\\n * Represents an error in the carto library.\\n *\\n * @typedef {Object} CartoError\\n * @property {String} message - A short error description\\n * @property {String} name - The name of the error \\\"CartoError\\\"\\n * @property {String} type - The type of the error \\\"CartoError\\\"\\n * @property {Object} originalError - An object containing the internal/original error\\n *\\n * @event CartoError\\n * @api\\n */\\n\\n/**\\n * @namespace CartoErrors\\n * @api\\n *\\n*/\\nclass CartoError extends Error {\\n    /**\\n     * Build a cartoError from a generic error.\\n     * @constructor\\n     *\\n     * @return {CartoError} A well formed object representing the error.\\n     */\\n    constructor (error) {\\n        if (!error) {\\n            throw Error('Invalid CartoError, a message is mandatory');\\n        }\\n\\n        if (!error.message) {\\n            throw Error('Invalid CartoError, a message is mandatory');\\n        }\\n\\n        if (!error.type) {\\n            throw Error('Invalid CartoError, a type is mandatory');\\n        }\\n\\n        super(`${error.type} ${error.message}`);\\n        this.name = 'CartoError';\\n        this.type = error.type;\\n        this.originalError = error;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/errors/carto-maps-api-error.js\\\":\\n/*!********************************************!*\\\\\\n  !*** ./src/errors/carto-maps-api-error.js ***!\\n  \\\\********************************************/\\n/*! exports provided: default, CartoMapsAPIErrorTypes */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CartoMapsAPIError; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CartoMapsAPIErrorTypes\\\", function() { return CartoMapsAPIErrorTypes; });\\n/* harmony import */ var _carto_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carto-error */ \\\"./src/errors/carto-error.js\\\");\\n\\n\\n/**\\n * Utility to build a cartoError related to MapsAPI errors.\\n *\\n * @return {CartoError} A well formed object representing the error.\\n */\\n\\n/**\\n * CartoMapsAPIError types:\\n * - [Error]\\n * - [Not supported]\\n * - [Security]\\n *\\n * @name CartoMapsAPIError\\n * @memberof CartoError\\n * @api\\n*/\\n\\nclass CartoMapsAPIError extends _carto_error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (message, type = CartoMapsAPIErrorTypes.DEFAULT) {\\n        super({ message, type });\\n        this.name = 'CartoMapsAPIError';\\n    }\\n}\\n\\nconst CartoMapsAPIErrorTypes = {\\n    DEFAULT: '[Error]',\\n    SQL: '[SQL]',\\n    NOT_SUPPORTED: '[Not supported]',\\n    SECURITY: '[Security]'\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/errors/carto-parsing-error.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./src/errors/carto-parsing-error.js ***!\\n  \\\\*******************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CartoParsingError; });\\n/* harmony import */ var _carto_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carto-error */ \\\"./src/errors/carto-error.js\\\");\\n\\n\\n/**\\n * Utility to build a cartoError related to Parsing errors.\\n *\\n * @return {CartoError} A well formed object representing the error.\\n */\\n\\n/**\\n * CartoParsingError types:\\n * - [Error]\\n *\\n * @name CartoParsingError\\n * @memberof CartoError\\n * @api\\n*/\\n\\nclass CartoParsingError extends _carto_error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (message) {\\n        const type = '[Error]';\\n        super({ message, type });\\n        this.name = 'CartoParsingError';\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/errors/carto-runtime-error.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./src/errors/carto-runtime-error.js ***!\\n  \\\\*******************************************/\\n/*! exports provided: default, CartoRuntimeErrorTypes */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CartoRuntimeError; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CartoRuntimeErrorTypes\\\", function() { return CartoRuntimeErrorTypes; });\\n/* harmony import */ var _carto_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carto-error */ \\\"./src/errors/carto-error.js\\\");\\n\\n\\n/**\\n * Utility to build a cartoError related to Runtime errors.\\n *\\n * @return {CartoError} A well formed object representing the error.\\n */\\n\\n/**\\n * CartoRuntimeError types:\\n * - [Error]\\n * - [Not supported]\\n * - [WebGL]\\n * - [MVT]\\n *\\n * @name CartoRuntimeError\\n * @memberof CartoError\\n * @api\\n*/\\nclass CartoRuntimeError extends _carto_error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (message, type = CartoRuntimeErrorTypes.DEFAULT) {\\n        super({ message, type });\\n        this.name = 'CartoRuntimeError';\\n    }\\n}\\n\\nconst CartoRuntimeErrorTypes = {\\n    DEFAULT: '[Error]',\\n    NOT_SUPPORTED: '[Not supported]',\\n    WEB_GL: '[WebGL]',\\n    MVT: '[MVT]'\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/errors/carto-validation-error.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./src/errors/carto-validation-error.js ***!\\n  \\\\**********************************************/\\n/*! exports provided: default, CartoValidationErrorTypes */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CartoValidationError; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CartoValidationErrorTypes\\\", function() { return CartoValidationErrorTypes; });\\n/* harmony import */ var _carto_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carto-error */ \\\"./src/errors/carto-error.js\\\");\\n\\n\\n/**\\n * Utility to build a cartoError related to validation errors.\\n *\\n * @return {CartoError} A well formed object representing the error.\\n */\\n\\n/**\\n * CartoValidationError types:\\n * - [Error]\\n * - [Missing required property]\\n * - [Property with an incorrect type]\\n * - [Incorrect value]\\n * - [Too many arguments]\\n * - [Not enough arguments]\\n * - [Wrong number of arguments]\\n *\\n * @name CartoValidationError\\n * @memberof CartoError\\n * @api\\n*/\\nclass CartoValidationError extends _carto_error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    constructor (message, type = CartoValidationErrorTypes.DEFAULT) {\\n        super({ message, type });\\n        this.name = 'CartoValidationError';\\n    }\\n}\\n\\nconst CartoValidationErrorTypes = {\\n    DEFAULT: '[Error]',\\n    MISSING_REQUIRED: '[Missing required property]',\\n    INCORRECT_TYPE: '[Property with an incorrect type]',\\n    INCORRECT_VALUE: '[Incorrect value]',\\n    TOO_MANY_ARGS: '[Too many arguments]',\\n    NOT_ENOUGH_ARGS: '[Not enough arguments]',\\n    WRONG_NUMBER_ARGS: '[Wrong number of arguments]'\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/Metadata.js\\\":\\n/*!**********************************!*\\\\\\n  !*** ./src/renderer/Metadata.js ***!\\n  \\\\**********************************/\\n/*! exports provided: DEFAULT_ID_PROPERTY, IDENTITY, default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DEFAULT_ID_PROPERTY\\\", function() { return DEFAULT_ID_PROPERTY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"IDENTITY\\\", function() { return IDENTITY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return Metadata; });\\n/* harmony import */ var _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/carto-runtime-error */ \\\"./src/errors/carto-runtime-error.js\\\");\\n/* harmony import */ var _codecs_Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../codecs/Identity */ \\\"./src/codecs/Identity.js\\\");\\n/* harmony import */ var _viz_expressions_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viz/expressions/constants */ \\\"./src/renderer/viz/expressions/constants.js\\\");\\n\\n\\n\\n\\nconst DEFAULT_MVT_EXTENT = 4096;\\nconst DEFAULT_ID_PROPERTY = 'cartodb_id';\\n\\n// The IDENTITY metadata contains zero properties\\nconst IDENTITY = {\\n    properties: {}\\n};\\n\\nclass Metadata {\\n    constructor ({ properties, featureCount, sample, geomType, isAggregated, idProperty, extent } = { properties: {} }) {\\n        this.properties = properties;\\n        this.featureCount = featureCount;\\n        this.sample = sample;\\n        this.geomType = geomType;\\n        this.isAggregated = isAggregated;\\n        this.idProperty = idProperty || DEFAULT_ID_PROPERTY;\\n        if (!this.properties.hasOwnProperty(this.idProperty)) {\\n            this.properties[this.idProperty] = { type: 'number' };\\n        }\\n\\n        this.categoryToID = new Map();\\n        this.IDToCategory = new Map();\\n        this.numCategories = 0;\\n        this.extent = extent || DEFAULT_MVT_EXTENT;\\n\\n        Object.values(properties).map(property => {\\n            property.categories = property.categories || [];\\n            property.categories.map(category => this.categorizeString(property, category.name, true));\\n        });\\n\\n        this.propertyKeys = Object.keys(properties);\\n    }\\n\\n    setCodecs () {\\n        throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]('You must call \\\"setCodecs\\\" once you have determined the proper subclass');\\n    }\\n\\n    categorizeString (propertyName, category, init = false) {\\n        if (category === undefined) {\\n            category = null;\\n        }\\n        if (this.categoryToID.has(category)) {\\n            return this.categoryToID.get(category);\\n        }\\n        if (!init && category !== null) {\\n            this.properties[propertyName].categories.push({\\n                name: category,\\n                frequency: Number.NaN\\n            });\\n        }\\n        const categoryId = category === null ? _viz_expressions_constants__WEBPACK_IMPORTED_MODULE_2__[\\\"FP32_DESIGNATED_NULL_VALUE\\\"] : this.numCategories;\\n        this.categoryToID.set(category, categoryId);\\n        this.IDToCategory.set(categoryId, category);\\n        this.numCategories++;\\n        return categoryId;\\n    }\\n\\n    // dataframe properties into which a single source property is decoded\\n    // TODO: rename as encodedProperties or dataframeProperties\\n    decodedProperties (propertyName) {\\n        return [propertyName];\\n    }\\n\\n    // property of the data origin (dataset, query) from which\\n    // a (source or dataframe) property is derived\\n    baseName (propertyName) {\\n        return propertyName;\\n    }\\n\\n    // property transferred from the source from which\\n    // a (source or dataframe) property it so be computed\\n    // TODO: move to windshaft metadata\\n    sourcePropertyName (propertyName) {\\n        return propertyName;\\n    }\\n\\n    stats (propertyName) {\\n        return this.properties[propertyName];\\n    }\\n\\n    codec (propertyName) {\\n        const name = this.baseName(propertyName);\\n\\n        return this.properties[name] && this.properties[name].codec\\n            ? this.properties[name].codec\\n            : new _codecs_Identity__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"]();\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/dataframe/DummyDataframe.js\\\":\\n/*!**************************************************!*\\\\\\n  !*** ./src/renderer/dataframe/DummyDataframe.js ***!\\n  \\\\**************************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return DummyDataframe; });\\n/* harmony import */ var _decoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../decoder */ \\\"./src/renderer/decoder/index.js\\\");\\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/geometry */ \\\"./src/utils/geometry.js\\\");\\n\\n\\n\\nclass DummyDataframe {\\n    constructor ({ active, center, properties, propertiesArrayBuffer, scale, type, geom, size, metadata }) {\\n        this.active = active;\\n        this.center = center;\\n        this.properties = properties;\\n        this.propertiesArrayBuffer = propertiesArrayBuffer;\\n        this.scale = scale;\\n        this.type = type;\\n        this.decodedGeom = Object(_decoder__WEBPACK_IMPORTED_MODULE_0__[\\\"decodeGeom\\\"])(type, geom);\\n\\n        this.numVertex = (type === _utils_geometry__WEBPACK_IMPORTED_MODULE_1__[\\\"GEOMETRY_TYPE\\\"].POINT) ? size * 3 : this.decodedGeom.vertices.length / 2;\\n        this.numFeatures = type === _utils_geometry__WEBPACK_IMPORTED_MODULE_1__[\\\"GEOMETRY_TYPE\\\"].POINT ? size : this.decodedGeom.breakpoints.length || this.numVertex;\\n        this.propertyTex = [];\\n        this.metadata = metadata;\\n        this.propertyCount = 0;\\n\\n        this._aabb = Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_1__[\\\"computeAABB\\\"])(geom, type);\\n        this._centroids = Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_1__[\\\"computeCentroids\\\"])(this.decodedGeom, type);\\n\\n        this.t1 = [0.1, 0.1, 0.1, 0.1];\\n        this.t2 = [0.1, 0.1, 0.1, 0.1];\\n        this.t3 = [0.1, 0.1, 0.1, 0.1];\\n        this.t4 = [0.1, 0.1, 0.1, 0.1];\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/decoder/common.js\\\":\\n/*!****************************************!*\\\\\\n  !*** ./src/renderer/decoder/common.js ***!\\n  \\\\****************************************/\\n/*! exports provided: addLineString, resizeBuffer */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"addLineString\\\", function() { return addLineString; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"resizeBuffer\\\", function() { return resizeBuffer; });\\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/geometry */ \\\"./src/utils/geometry.js\\\");\\n\\n\\n/**\\n * Create a triangulated lineString: zero-sized, vertex-shader expanded triangle list\\n * with `miter` joins. For angle < 60 joins are automatically adjusted to `bevel`.\\n * https://github.com/CartoDB/carto-vl/wiki/Line-rendering\\n */\\nfunction addLineString (lineString, geomBuffer, index, isPolygon, skipCallback) {\\n    let prevPoint, currentPoint;\\n    let prevNormal, nextNormal;\\n    let drawLine;\\n\\n    // We need at least two points\\n    if (lineString.length >= 4) {\\n        // Initialize the first two points\\n        prevPoint = [lineString[0], lineString[1]];\\n        let i = 2;\\n        // The second point may be the same as the first one, iterate to find the first different one\\n        for (;i <= lineString.length; i += 2) {\\n            currentPoint = [lineString[i], lineString[i + 1]];\\n            if (prevPoint[0] !== currentPoint[0] || prevPoint[1] !== currentPoint[1]) {\\n                i += 2;\\n                break;\\n            }\\n        }\\n        prevNormal = Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"getLineNormal\\\"])(prevPoint, currentPoint);\\n        for (;i <= lineString.length; i += 2) {\\n            drawLine = !(skipCallback && skipCallback(i));\\n\\n            let nextPoint;\\n            // With lines, the ending point won't have a nextPoint\\n            if (i <= lineString.length - 2) {\\n                nextPoint = [lineString[i], lineString[i + 1]];\\n            } else if (isPolygon) {\\n                nextPoint = [lineString[2], lineString[3]];\\n            }\\n\\n            if (drawLine &&\\n                !(prevPoint[0] === currentPoint[0] && prevPoint[1] === currentPoint[1])) {\\n                // First triangle\\n                geomBuffer.vertices[index] = prevPoint[0];\\n                geomBuffer.normals[index++] = -prevNormal[0];\\n                geomBuffer.vertices[index] = prevPoint[1];\\n                geomBuffer.normals[index++] = -prevNormal[1];\\n                geomBuffer.vertices[index] = prevPoint[0];\\n                geomBuffer.normals[index++] = prevNormal[0];\\n                geomBuffer.vertices[index] = prevPoint[1];\\n                geomBuffer.normals[index++] = prevNormal[1];\\n                geomBuffer.vertices[index] = currentPoint[0];\\n                geomBuffer.normals[index++] = prevNormal[0];\\n                geomBuffer.vertices[index] = currentPoint[1];\\n                geomBuffer.normals[index++] = prevNormal[1];\\n\\n                // Second triangle\\n                geomBuffer.vertices[index] = prevPoint[0];\\n                geomBuffer.normals[index++] = -prevNormal[0];\\n                geomBuffer.vertices[index] = prevPoint[1];\\n                geomBuffer.normals[index++] = -prevNormal[1];\\n                geomBuffer.vertices[index] = currentPoint[0];\\n                geomBuffer.normals[index++] = prevNormal[0];\\n                geomBuffer.vertices[index] = currentPoint[1];\\n                geomBuffer.normals[index++] = prevNormal[1];\\n                geomBuffer.vertices[index] = currentPoint[0];\\n                geomBuffer.normals[index++] = -prevNormal[0];\\n                geomBuffer.vertices[index] = currentPoint[1];\\n                geomBuffer.normals[index++] = -prevNormal[1];\\n            }\\n\\n            if (nextPoint && !(nextPoint[0] === currentPoint[0] && nextPoint[1] === currentPoint[1])) {\\n                nextNormal = Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"getLineNormal\\\"])(currentPoint, nextPoint);\\n\\n                if (drawLine) {\\n                    // `turnLeft` indicates that the nextLine turns to the left\\n                    // `joinNormal` contains the direction and size for the `miter` vertex\\n                    //  If this is not defined means that the join must be `bevel`.\\n                    let { turnLeft, joinNormal } = Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"getJoinNormal\\\"])(prevNormal, nextNormal);\\n\\n                    let leftNormal = turnLeft ? prevNormal : Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"neg\\\"])(nextNormal);\\n                    let rightNormal = turnLeft ? nextNormal : Object(_utils_geometry__WEBPACK_IMPORTED_MODULE_0__[\\\"neg\\\"])(prevNormal);\\n\\n                    // Third triangle\\n                    geomBuffer.vertices[index] = currentPoint[0];\\n                    geomBuffer.normals[index++] = 0;\\n                    geomBuffer.vertices[index] = currentPoint[1];\\n                    // Mark vertex to be stroke in PolygonShader with the\\n                    // non-zero value 1e-37, so it validates the expression\\n                    // `normal != vec2(0.)` without affecting the vertex position.\\n                    geomBuffer.normals[index++] = isPolygon ? 1e-37 : 0;\\n                    geomBuffer.vertices[index] = currentPoint[0];\\n                    geomBuffer.normals[index++] = leftNormal[0];\\n                    geomBuffer.vertices[index] = currentPoint[1];\\n                    geomBuffer.normals[index++] = leftNormal[1];\\n                    geomBuffer.vertices[index] = currentPoint[0];\\n                    geomBuffer.normals[index++] = rightNormal[0];\\n                    geomBuffer.vertices[index] = currentPoint[1];\\n                    geomBuffer.normals[index++] = rightNormal[1];\\n\\n                    if (joinNormal) {\\n                        // Forth triangle\\n                        geomBuffer.vertices[index] = currentPoint[0];\\n                        geomBuffer.normals[index++] = joinNormal[0];\\n                        geomBuffer.vertices[index] = currentPoint[1];\\n                        geomBuffer.normals[index++] = joinNormal[1];\\n                        geomBuffer.vertices[index] = currentPoint[0];\\n                        geomBuffer.normals[index++] = rightNormal[0];\\n                        geomBuffer.vertices[index] = currentPoint[1];\\n                        geomBuffer.normals[index++] = rightNormal[1];\\n                        geomBuffer.vertices[index] = currentPoint[0];\\n                        geomBuffer.normals[index++] = leftNormal[0];\\n                        geomBuffer.vertices[index] = currentPoint[1];\\n                        geomBuffer.normals[index++] = leftNormal[1];\\n                    }\\n                }\\n            } else {\\n                nextNormal = prevNormal;\\n            }\\n\\n            // Update the variables for the next iteration\\n            prevPoint = currentPoint;\\n            currentPoint = nextPoint;\\n            prevNormal = nextNormal;\\n        }\\n    }\\n    return index;\\n}\\n\\n/**\\n * Resize a Float32Array buffer in an efficient way\\n */\\nfunction resizeBuffer (oldBuffer, newSize) {\\n    const newBuffer = new Float32Array(newSize);\\n    newBuffer.set(oldBuffer);\\n    return newBuffer;\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/decoder/index.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./src/renderer/decoder/index.js ***!\\n  \\\\***************************************/\\n/*! exports provided: decodeGeom */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decodeGeom\\\", function() { return decodeGeom; });\\n/* harmony import */ var _pointDecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pointDecoder */ \\\"./src/renderer/decoder/pointDecoder.js\\\");\\n/* harmony import */ var _lineDecoder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lineDecoder */ \\\"./src/renderer/decoder/lineDecoder.js\\\");\\n/* harmony import */ var _polygonDecoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polygonDecoder */ \\\"./src/renderer/decoder/polygonDecoder.js\\\");\\n/* harmony import */ var _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/carto-runtime-error */ \\\"./src/errors/carto-runtime-error.js\\\");\\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/geometry */ \\\"./src/utils/geometry.js\\\");\\n\\n\\n\\n\\n\\n\\nfunction decodeGeom (geomType, geom) {\\n    switch (geomType) {\\n        case _utils_geometry__WEBPACK_IMPORTED_MODULE_4__[\\\"GEOMETRY_TYPE\\\"].POINT:\\n            return Object(_pointDecoder__WEBPACK_IMPORTED_MODULE_0__[\\\"decodePoint\\\"])(geom);\\n        case _utils_geometry__WEBPACK_IMPORTED_MODULE_4__[\\\"GEOMETRY_TYPE\\\"].LINE:\\n            return Object(_lineDecoder__WEBPACK_IMPORTED_MODULE_1__[\\\"decodeLine\\\"])(geom);\\n        case _utils_geometry__WEBPACK_IMPORTED_MODULE_4__[\\\"GEOMETRY_TYPE\\\"].POLYGON:\\n            return Object(_polygonDecoder__WEBPACK_IMPORTED_MODULE_2__[\\\"decodePolygon\\\"])(geom);\\n        default:\\n            throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"](\\n                `Unimplemented geometry type: '${geomType}'.`,\\n                _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_3__[\\\"CartoRuntimeErrorTypes\\\"].NOT_SUPPORTED\\n            );\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/decoder/lineDecoder.js\\\":\\n/*!*********************************************!*\\\\\\n  !*** ./src/renderer/decoder/lineDecoder.js ***!\\n  \\\\*********************************************/\\n/*! exports provided: decodeLine */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decodeLine\\\", function() { return decodeLine; });\\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \\\"./src/renderer/decoder/common.js\\\");\\n\\n\\n// If the geometry type is GEOMETRY_TYPE.LINE it will generate the appropriate zero-sized, vertex-shader expanded triangle list with `miter` and `bevel` joins.\\n// The geom will be an array of coordinates in this case\\n\\nconst STATIC_INITIAL_BUFFER_SIZE = 1024 * 1024; // 4 MB\\nconst MAX_VERTICES_COORDINATES_PER_SEGMENT = 24;\\n\\nlet index = 0;\\nlet geomBuffer = {\\n    vertices: new Float32Array(STATIC_INITIAL_BUFFER_SIZE),\\n    normals: new Float32Array(STATIC_INITIAL_BUFFER_SIZE)\\n};\\n\\nfunction decodeLine (geometry) {\\n    let breakpoints = []; // Array of indices (to vertexArray) that separate each feature\\n    let featureIDToVertexIndex = new Map();\\n\\n    index = 0;\\n    for (let i = 0; i < geometry.length; i++) {\\n        const feature = geometry[i];\\n        for (let j = 0; j < feature.length; j++) {\\n            // Increase buffers size if required\\n            resizeBuffers(MAX_VERTICES_COORDINATES_PER_SEGMENT * feature[j].length);\\n\\n            // Add line string\\n            index = Object(_common__WEBPACK_IMPORTED_MODULE_0__[\\\"addLineString\\\"])(feature[j], geomBuffer, index);\\n        }\\n\\n        featureIDToVertexIndex.set(breakpoints.length, breakpoints.length === 0\\n            ? { start: 0, end: index }\\n            : { start: featureIDToVertexIndex.get(breakpoints.length - 1).end, end: index });\\n\\n        breakpoints.push(index);\\n    }\\n\\n    const verticesArrayBuffer = new ArrayBuffer(4 * index);\\n    const normalsArrayBuffer = new ArrayBuffer(4 * index);\\n    const vertices = new Float32Array(verticesArrayBuffer);\\n    const normals = new Float32Array(normalsArrayBuffer);\\n    for (let i = 0; i < index; i++) {\\n        vertices[i] = geomBuffer.vertices[i];\\n        normals[i] = geomBuffer.normals[i];\\n    }\\n    return {\\n        vertices,\\n        normals,\\n        verticesArrayBuffer,\\n        normalsArrayBuffer,\\n        featureIDToVertexIndex,\\n        breakpoints\\n    };\\n}\\n\\n// Resize buffers as needed if `additionalSize` floats overflow the current buffers.\\nfunction resizeBuffers (additionalSize) {\\n    const minimumNeededSize = index + additionalSize;\\n    if (minimumNeededSize > geomBuffer.vertices.length) {\\n        const newSize = 2 * minimumNeededSize;\\n        geomBuffer.vertices = Object(_common__WEBPACK_IMPORTED_MODULE_0__[\\\"resizeBuffer\\\"])(geomBuffer.vertices, newSize);\\n        geomBuffer.normals = Object(_common__WEBPACK_IMPORTED_MODULE_0__[\\\"resizeBuffer\\\"])(geomBuffer.normals, newSize);\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/decoder/pointDecoder.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./src/renderer/decoder/pointDecoder.js ***!\\n  \\\\**********************************************/\\n/*! exports provided: decodePoint */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decodePoint\\\", function() { return decodePoint; });\\n// If the geometry type is GEOMETRY_TYPE.POINT it will pass through the geom (the vertex array)\\n\\nfunction decodePoint (verticesArrayBuffer) {\\n    return {\\n        verticesArrayBuffer: verticesArrayBuffer,\\n        vertices: new Float32Array(verticesArrayBuffer),\\n        breakpoints: []\\n    };\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/decoder/polygonDecoder.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./src/renderer/decoder/polygonDecoder.js ***!\\n  \\\\************************************************/\\n/*! exports provided: decodePolygon */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decodePolygon\\\", function() { return decodePolygon; });\\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! earcut */ \\\"./node_modules/earcut/src/earcut.js\\\");\\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(earcut__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ \\\"./src/renderer/decoder/common.js\\\");\\n\\n\\n\\n// If the geometry type is GEOMETRY_TYPE.POLYGON it will triangulate the polygon list (geom)\\n// geom will be a list of polygons in which each polygon will have a flat array of vertices and a list of holes indices\\n// Example:\\n/*   let geom = [{\\n       flat: [\\n         0.,0., 1.,0., 1.,1., 0.,1., 0.,0, //A square\\n         0.25,0.25, 0.75,0.25, 0.75,0.75, 0.25,0.75, 0.25,0.25//A small square\\n       ]\\n       holes: [5]\\n     }]\\n*/\\n\\nconst STATIC_INITIAL_BUFFER_SIZE = 1024 * 1024 * 2; // 8 MB\\nconst VERTEX_COORDINATES_PER_TRIANGLE = 2;\\nconst MAX_VERTICES_COORDINATES_PER_SEGMENT = 24;\\n\\nlet index = 0;\\nlet geomBuffer = {\\n    vertices: new Float32Array(STATIC_INITIAL_BUFFER_SIZE),\\n    normals: new Float32Array(STATIC_INITIAL_BUFFER_SIZE)\\n};\\n\\nfunction decodePolygon (geometry) {\\n    let breakpoints = []; // Array of indices (to vertexArray) that separate each feature\\n    let featureIDToVertexIndex = new Map();\\n\\n    index = 0;\\n    for (let i = 0; i < geometry.length; i++) {\\n        const feature = geometry[i];\\n        for (let j = 0; j < feature.length; j++) {\\n            const polygon = feature[j];\\n            const triangles = earcut__WEBPACK_IMPORTED_MODULE_0__(polygon.flat, polygon.holes);\\n\\n            // Increase buffers size if required\\n            resizeBuffers(VERTEX_COORDINATES_PER_TRIANGLE * triangles.length +\\n                MAX_VERTICES_COORDINATES_PER_SEGMENT * polygon.flat.length);\\n\\n            // Add polygon\\n            for (let k = 0; k < triangles.length; k++) {\\n                addVertex(polygon.flat, 2 * triangles[k]);\\n            }\\n\\n            // Add polygon stroke\\n            index = Object(_common__WEBPACK_IMPORTED_MODULE_1__[\\\"addLineString\\\"])(polygon.flat, geomBuffer, index, true, (pointIndex) => {\\n                // Skip adding the line which connects two rings OR is clipped\\n                return polygon.holes.includes((pointIndex - 2) / 2) || isClipped(polygon, pointIndex - 4, pointIndex - 2);\\n            });\\n        }\\n\\n        featureIDToVertexIndex.set(breakpoints.length, breakpoints.length === 0\\n            ? { start: 0, end: index }\\n            : { start: featureIDToVertexIndex.get(breakpoints.length - 1).end, end: index });\\n\\n        breakpoints.push(index);\\n    }\\n\\n    const verticesArrayBuffer = new ArrayBuffer(4 * index);\\n    const normalsArrayBuffer = new ArrayBuffer(4 * index);\\n    const vertices = new Float32Array(verticesArrayBuffer);\\n    const normals = new Float32Array(normalsArrayBuffer);\\n    for (let i = 0; i < index; i++) {\\n        vertices[i] = geomBuffer.vertices[i];\\n        normals[i] = geomBuffer.normals[i];\\n    }\\n    return {\\n        vertices,\\n        normals,\\n        verticesArrayBuffer,\\n        normalsArrayBuffer,\\n        featureIDToVertexIndex,\\n        breakpoints\\n    };\\n}\\n\\n// Resize buffers as needed if `additionalSize` floats overflow the current buffers\\nfunction resizeBuffers (additionalSize) {\\n    const minimumNeededSize = index + additionalSize;\\n    if (minimumNeededSize > geomBuffer.vertices.length) {\\n        const newSize = 2 * minimumNeededSize;\\n        geomBuffer.vertices = Object(_common__WEBPACK_IMPORTED_MODULE_1__[\\\"resizeBuffer\\\"])(geomBuffer.vertices, newSize);\\n        geomBuffer.normals = Object(_common__WEBPACK_IMPORTED_MODULE_1__[\\\"resizeBuffer\\\"])(geomBuffer.normals, newSize);\\n    }\\n}\\n\\n// Add vertex in triangles.\\nfunction addVertex (array, vertexIndex) {\\n    geomBuffer.vertices[index] = array[vertexIndex];\\n    geomBuffer.normals[index++] = 0;\\n    geomBuffer.vertices[index] = array[vertexIndex + 1];\\n    geomBuffer.normals[index++] = 0;\\n}\\n\\nfunction isClipped (polygon, i, j) {\\n    if (polygon.clipped.includes(i) && polygon.clipped.includes(j)) {\\n        if (polygon.clippedType[polygon.clipped.indexOf(i)] &\\n            polygon.clippedType[polygon.clipped.indexOf(j)]) {\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/viz/expressions/constants.js\\\":\\n/*!***************************************************!*\\\\\\n  !*** ./src/renderer/viz/expressions/constants.js ***!\\n  \\\\***************************************************/\\n/*! exports provided: DEFAULT_RAMP_OTHERS, DEFAULT_SAMPLES, OTHERS_GLSL_VALUE, OTHERS_INDEX, OTHERS_LABEL, DEFAULT_OPTIONS, FP32_DESIGNATED_NULL_VALUE */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DEFAULT_RAMP_OTHERS\\\", function() { return DEFAULT_RAMP_OTHERS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DEFAULT_SAMPLES\\\", function() { return DEFAULT_SAMPLES; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"OTHERS_GLSL_VALUE\\\", function() { return OTHERS_GLSL_VALUE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"OTHERS_INDEX\\\", function() { return OTHERS_INDEX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"OTHERS_LABEL\\\", function() { return OTHERS_LABEL; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DEFAULT_OPTIONS\\\", function() { return DEFAULT_OPTIONS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"FP32_DESIGNATED_NULL_VALUE\\\", function() { return FP32_DESIGNATED_NULL_VALUE; });\\nconst DEFAULT_RAMP_OTHERS = 'DEFAULT_RAMP_OTHERS';\\nconst DEFAULT_SAMPLES = 10;\\nconst OTHERS_GLSL_VALUE = '(-1.)';\\nconst OTHERS_INDEX = -1;\\nconst OTHERS_LABEL = 'CARTO_VL_OTHERS';\\nconst DEFAULT_OPTIONS = {\\n    othersLabel: OTHERS_LABEL,\\n    samples: DEFAULT_SAMPLES\\n};\\n\\nconst FP32_DESIGNATED_NULL_VALUE = -(1 << 24);\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/renderer/viz/expressions/stats.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./src/renderer/viz/expressions/stats.js ***!\\n  \\\\***********************************************/\\n/*! exports provided: average, variance, standardDeviation */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"average\\\", function() { return average; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"variance\\\", function() { return variance; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"standardDeviation\\\", function() { return standardDeviation; });\\n\\n/**\\n * Calculate Average\\n *\\n * @param {Number[]} values\\n * @returns {Number} - average\\n */\\nconst average = (values) => {\\n    let sum = 0;\\n    for (let i = 0; i < values.length; i++) {\\n        sum += values[i];\\n    }\\n    return sum / values.length;\\n};\\n/**\\n * Calculate Variance\\n *\\n * @param {Number[]} values\\n * @param {Number} average\\n * @returns {Number[]} - calculate variance for each element in values\\n */\\nconst variance = (values, average) => {\\n    let variances = [];\\n    for (let i = 0; i < values.length; i++) {\\n        const diff = values[i] - average;\\n        variances.push(diff * diff);\\n    }\\n    return variances;\\n};\\n\\n/**\\n * Calculate Standard Deviation (STD), using population deviation formula\\n *\\n * @param {Number[]} values\\n * @returns {Number} - standard deviation\\n */\\nconst standardDeviation = (values) => {\\n    const avg = average(values);\\n    const avgVariance = average(variance(values, avg));\\n    return Math.sqrt(avgVariance);\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/sources/MVTMetadata.js\\\":\\n/*!************************************!*\\\\\\n  !*** ./src/sources/MVTMetadata.js ***!\\n  \\\\************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return MVTMetadata; });\\n/* harmony import */ var _renderer_Metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderer/Metadata */ \\\"./src/renderer/Metadata.js\\\");\\n/* harmony import */ var _codecs_mvt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../codecs/mvt */ \\\"./src/codecs/mvt/index.js\\\");\\n\\n\\n\\nclass MVTMetadata extends _renderer_Metadata__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"] {\\n    setCodecs () {\\n        Object.keys(this.properties).forEach(propertyName => {\\n            const property = this.properties[propertyName];\\n            const type = property.type;\\n            if (type !== 'geometry') {\\n                property.codec = Object(_codecs_mvt__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(this, type, propertyName);\\n            }\\n        });\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/sources/MVTWorker.js\\\":\\n/*!**********************************!*\\\\\\n  !*** ./src/sources/MVTWorker.js ***!\\n  \\\\**********************************/\\n/*! exports provided: MVTWorker */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MVTWorker\\\", function() { return MVTWorker; });\\n/* harmony import */ var _mapbox_vector_tile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mapbox/vector-tile */ \\\"./node_modules/@mapbox/vector-tile/index.js\\\");\\n/* harmony import */ var _mapbox_vector_tile__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mapbox_vector_tile__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var pbf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pbf */ \\\"./node_modules/pbf/index.js\\\");\\n/* harmony import */ var pbf__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pbf__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _client_rsys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../client/rsys */ \\\"./src/client/rsys.js\\\");\\n/* harmony import */ var _client_mvt_feature_decoder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../client/mvt/feature-decoder */ \\\"./src/client/mvt/feature-decoder.js\\\");\\n/* harmony import */ var _MVTMetadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MVTMetadata */ \\\"./src/sources/MVTMetadata.js\\\");\\n/* harmony import */ var _renderer_dataframe_DummyDataframe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../renderer/dataframe/DummyDataframe */ \\\"./src/renderer/dataframe/DummyDataframe.js\\\");\\n/* harmony import */ var _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors/carto-validation-error */ \\\"./src/errors/carto-validation-error.js\\\");\\n/* harmony import */ var _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../errors/carto-runtime-error */ \\\"./src/errors/carto-runtime-error.js\\\");\\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/geometry */ \\\"./src/utils/geometry.js\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n// TODO import correctly\\nconst RTT_WIDTH = 1024;\\n\\n// Constants for '@mapbox/vector-tile' geometry types, from https://github.com/mapbox/vector-tile-js/blob/v1.3.0/lib/vectortilefeature.js#L39\\nconst mvtDecoderGeomTypes = { point: 1, line: 2, polygon: 3 };\\n\\nconst MVT_TO_CARTO_TYPES = {\\n    1: _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].POINT,\\n    2: _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].LINE,\\n    3: _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].POLYGON\\n};\\n\\nclass MVTWorker {\\n    // Worker API\\n    onmessage (event) {\\n        this.processEvent(event).then(message => {\\n            const transferables = [];\\n            if (!message.dataframe.empty) {\\n                transferables.push(message.dataframe.propertiesArrayBuffer);\\n                transferables.push(message.dataframe.decodedGeom.verticesArrayBuffer);\\n                if (message.dataframe.decodedGeom.normalsArrayBuffer) {\\n                    transferables.push(message.dataframe.decodedGeom.normalsArrayBuffer);\\n                }\\n            }\\n            postMessage(message, transferables);\\n        });\\n    }\\n    async processEvent (event) {\\n        const params = event.data;\\n        if (params.metadata) {\\n            this.castMetadata(params.metadata);\\n            this.metadata = params.metadata;\\n        }\\n        const dataframe = await this._requestDataframe(params.x, params.y, params.z, params.url, params.layerID, this.metadata);\\n        return {\\n            mID: params.mID,\\n            dataframe\\n        };\\n    }\\n\\n    castMetadata (metadata) {\\n        Object.setPrototypeOf(metadata, _MVTMetadata__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"].prototype);\\n        metadata.setCodecs();\\n    }\\n\\n    async _requestDataframe (x, y, z, url, layerID, metadata) {\\n        const response = await fetch(url);\\n        const dataframe = await this.urlToDataframeTransformer(response, x, y, z, layerID, metadata);\\n        return dataframe;\\n    }\\n\\n    async urlToDataframeTransformer (response, x, y, z, layerID, metadata) {\\n        const MVT_EXTENT = metadata.extent;\\n        const arrayBuffer = await response.arrayBuffer();\\n        if (arrayBuffer.byteLength === 0 || response === 'null') {\\n            return { empty: true };\\n        }\\n        const tile = new _mapbox_vector_tile__WEBPACK_IMPORTED_MODULE_0__[\\\"VectorTile\\\"](new pbf__WEBPACK_IMPORTED_MODULE_1__(arrayBuffer));\\n\\n        if (Object.keys(tile.layers).length > 1 && !layerID) {\\n            throw new _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"](\\n                `LayerID parameter wasn't specified and the MVT tile contains multiple layers: ${JSON.stringify(Object.keys(tile.layers))}.`,\\n                _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__[\\\"CartoValidationErrorTypes\\\"].MISSING_REQUIRED\\n            );\\n        }\\n\\n        const mvtLayer = tile.layers[layerID || Object.keys(tile.layers)[0]]; // FIXME this!!!\\n\\n        if (!mvtLayer) {\\n            return { empty: true };\\n        }\\n\\n        const { geometries, properties, propertiesArrayBuffer, numFeatures } = this._decodeMVTLayer(mvtLayer, metadata, MVT_EXTENT);\\n        const rs = _client_rsys__WEBPACK_IMPORTED_MODULE_2__[\\\"getRsysFromTile\\\"](x, y, z);\\n        const dataframe = this._generateDataFrame(rs, geometries, properties, propertiesArrayBuffer, numFeatures, metadata.geomType, metadata);\\n\\n        return dataframe;\\n    }\\n\\n    _decodeMVTLayer (mvtLayer, metadata, mvtExtent) {\\n        if (!mvtLayer.length) {\\n            return { properties: [], geometries: {}, propertiesArrayBuffer: [], numFeatures: 0 };\\n        }\\n        if (!metadata.geomType) {\\n            metadata.geomType = this._autoDiscoverType(mvtLayer);\\n        }\\n        switch (metadata.geomType) {\\n            case _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].POINT:\\n                const arrayBuffer = new ArrayBuffer(mvtLayer.length * 2 * 3 * 4);// SIZEOF\\n                return this._decode(mvtLayer, metadata, mvtExtent, arrayBuffer);\\n            case _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].LINE:\\n                return this._decode(mvtLayer, metadata, mvtExtent, [], _client_mvt_feature_decoder__WEBPACK_IMPORTED_MODULE_3__[\\\"decodeLines\\\"]);\\n            case _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].POLYGON:\\n                return this._decode(mvtLayer, metadata, mvtExtent, [], _client_mvt_feature_decoder__WEBPACK_IMPORTED_MODULE_3__[\\\"decodePolygons\\\"]);\\n            default:\\n                throw new _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"](`MVT: invalid geometry type '${metadata.geomType}'`, _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__[\\\"CartoValidationErrorTypes\\\"].INCORRECT_TYPE);\\n        }\\n    }\\n\\n    _autoDiscoverType (mvtLayer) {\\n        const type = mvtLayer.feature(0).type;\\n        switch (type) {\\n            case mvtDecoderGeomTypes.point:\\n                return _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].POINT;\\n            case mvtDecoderGeomTypes.line:\\n                return _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].LINE;\\n            case mvtDecoderGeomTypes.polygon:\\n                return _utils_geometry__WEBPACK_IMPORTED_MODULE_8__[\\\"GEOMETRY_TYPE\\\"].POLYGON;\\n            default:\\n                throw new _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"](`MVT: invalid geometry type '${type}'`, _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_6__[\\\"CartoValidationErrorTypes\\\"].INCORRECT_TYPE);\\n        }\\n    }\\n\\n    _decode (mvtLayer, metadata, mvtExtent, geometries, decodeFn) {\\n        let numFeatures = 0;\\n        let pointGeometries;\\n        if (geometries) {\\n            pointGeometries = new Float32Array(geometries);\\n        }\\n        const { properties, propertiesArrayBuffer } = this._initializePropertyArrays(metadata, mvtLayer.length);\\n        const scalarPropertyCodecs = this._scalarPropertyCodecs(metadata);\\n        const rangePropertyCodecs = this._rangePropertyCodecs(metadata);\\n        for (let i = 0; i < mvtLayer.length; i++) {\\n            const f = mvtLayer.feature(i);\\n            this._checkType(f, metadata.geomType);\\n            const geom = f.loadGeometry();\\n            if (decodeFn) {\\n                const decodedPolygons = decodeFn(geom, mvtExtent);\\n                geometries.push(decodedPolygons);\\n            } else {\\n                // TODO refactor\\n                const x = 2 * (geom[0][0].x) / mvtExtent - 1.0;\\n                const y = 2 * (1.0 - (geom[0][0].y) / mvtExtent) - 1.0;\\n                // Tiles may contain points in the border;\\n                // we'll avoid here duplicated points between tiles by excluding the 1-edge\\n                if (x < -1 || x >= 1 || y < -1 || y >= 1) {\\n                    continue;\\n                }\\n                pointGeometries[6 * numFeatures + 0] = x;\\n                pointGeometries[6 * numFeatures + 1] = y;\\n                pointGeometries[6 * numFeatures + 2] = x;\\n                pointGeometries[6 * numFeatures + 3] = y;\\n                pointGeometries[6 * numFeatures + 4] = x;\\n                pointGeometries[6 * numFeatures + 5] = y;\\n            }\\n            if (f.properties[metadata.idProperty] === undefined) {\\n                throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_7__[\\\"default\\\"](\\n                    `MVT feature with undefined idProperty '${metadata.idProperty}'`,\\n                    _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_7__[\\\"CartoRuntimeErrorTypes\\\"].MVT\\n                );\\n            }\\n            this._decodeProperties(metadata, scalarPropertyCodecs, rangePropertyCodecs, properties, f, numFeatures);\\n            numFeatures++;\\n        }\\n\\n        return { properties, propertiesArrayBuffer, geometries, numFeatures };\\n    }\\n\\n    // Currently only mvtLayers with the same type in every feature are supported\\n    _checkType (feature, expected) {\\n        const type = feature.type;\\n        const actual = MVT_TO_CARTO_TYPES[type];\\n        if (actual !== expected) {\\n            throw new _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_7__[\\\"default\\\"](\\n                `MVT: mixed geometry types in the same layer. Layer has type: ${expected} but feature was ${actual}`,\\n                _errors_carto_runtime_error__WEBPACK_IMPORTED_MODULE_7__[\\\"CartoRuntimeErrorTypes\\\"].MVT\\n            );\\n        }\\n    }\\n\\n    _initializePropertyArrays (metadata, length) {\\n        const propertyNames = this._getPropertyNamesFrom(metadata);\\n        const { properties, propertiesArrayBuffer } = this._getPropertiesFor(propertyNames, length);\\n        return { propertyNames, properties, propertiesArrayBuffer };\\n    }\\n\\n    _getSourcePropertyNamesFrom (metadata) {\\n        return metadata.propertyKeys.filter(name => metadata.properties[metadata.baseName(name)].type !== 'geometry');\\n    }\\n\\n    _getPropertyNamesFrom (metadata) {\\n        const propertyNames = [];\\n        this._getSourcePropertyNamesFrom(metadata).forEach(sourceName => {\\n            metadata.decodedProperties(sourceName).forEach(propertyName => {\\n                propertyNames.push(propertyName);\\n            });\\n        });\\n        return propertyNames;\\n    }\\n\\n    _getPropertiesFor (propertyNames, length) {\\n        const properties = {};\\n        const size = Math.ceil(length / RTT_WIDTH) * RTT_WIDTH;\\n\\n        const arrayBuffer = new ArrayBuffer(4 * size * propertyNames.length);\\n        const propertiesArrayBuffer = arrayBuffer;\\n        for (let i = 0; i < propertyNames.length; i++) {\\n            const propertyName = propertyNames[i];\\n            properties[propertyName] = new Float32Array(arrayBuffer, i * 4 * size, size);\\n        }\\n\\n        return { properties, propertiesArrayBuffer };\\n    }\\n\\n    _scalarPropertyCodecs (metadata) {\\n        return this._getSourcePropertyNamesFrom(metadata)\\n            .map(prop => [prop, metadata.codec(prop)])\\n            .filter(([_, codec]) => !codec.isRange());\\n    }\\n\\n    _rangePropertyCodecs (metadata) {\\n        return this._getSourcePropertyNamesFrom(metadata)\\n            .map(prop => [prop, metadata.decodedProperties(prop), metadata.codec(prop)])\\n            .filter(([_prop, _dprop, codec]) => codec.isRange());\\n    }\\n\\n    _decodeProperties (metadata, scalarPropertyCodecs, rangePropertyCodecs, properties, feature, i) {\\n        let length = scalarPropertyCodecs.length;\\n        for (let j = 0; j < length; j++) {\\n            const [propertyName, codec] = scalarPropertyCodecs[j];\\n            const propertyValue = feature.properties[propertyName];\\n            properties[propertyName][i] = codec.sourceToInternal(metadata, propertyValue);\\n        }\\n\\n        length = rangePropertyCodecs.length;\\n        for (let j = 0; j < length; j++) {\\n            const [propertyName, [loPropertyName, hiPropertyName], codec] = rangePropertyCodecs[j];\\n            const propertyValue = feature.properties[propertyName];\\n            const [loValue, hiValue] = codec.sourceToInternal(metadata, propertyValue);\\n            properties[loPropertyName][i] = loValue;\\n            properties[hiPropertyName][i] = hiValue;\\n        }\\n    }\\n\\n    _generateDataFrame (rs, geometry, properties, propertiesArrayBuffer, size, type, metadata) {\\n        return new _renderer_dataframe_DummyDataframe__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"]({\\n            active: false,\\n            center: rs.center,\\n            geom: geometry,\\n            properties: properties,\\n            propertiesArrayBuffer: propertiesArrayBuffer,\\n            scale: rs.scale,\\n            size: size,\\n            type: type,\\n            metadata\\n        });\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/sources/MVTWorkers.worker.js\\\":\\n/*!******************************************!*\\\\\\n  !*** ./src/sources/MVTWorkers.worker.js ***!\\n  \\\\******************************************/\\n/*! no exports provided */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _MVTWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MVTWorker */ \\\"./src/sources/MVTWorker.js\\\");\\n/* harmony import */ var _client_WindshaftWorker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client/WindshaftWorker */ \\\"./src/client/WindshaftWorker.js\\\");\\n\\n\\n\\n// This file publishes a Web Worker onmessage function that will redirect incoming messages\\n// based on an ID (`workerName`) defined by the message sender\\n// to each different Worker implementation\\n\\nconst workers = {\\n    MVT: new _MVTWorker__WEBPACK_IMPORTED_MODULE_0__[\\\"MVTWorker\\\"](),\\n    windshaft: new _client_WindshaftWorker__WEBPACK_IMPORTED_MODULE_1__[\\\"WindshaftWorker\\\"]()\\n};\\n\\nonmessage = function (event) {\\n    return workers[event.data.workerName].onmessage(event);\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils/geometry.js\\\":\\n/*!*******************************!*\\\\\\n  !*** ./src/utils/geometry.js ***!\\n  \\\\*******************************/\\n/*! exports provided: GEOMETRY_TYPE, intersect, sub, dot, perpendicular, getLineNormal, getJoinNormal, neg, pointInTriangle, halfPlaneSign, equalPoints, pointInCircle, pointInRectangle, computeAABB, computeCentroids, triangleArea, unproject, default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"GEOMETRY_TYPE\\\", function() { return GEOMETRY_TYPE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"intersect\\\", function() { return intersect; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sub\\\", function() { return sub; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dot\\\", function() { return dot; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"perpendicular\\\", function() { return perpendicular; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getLineNormal\\\", function() { return getLineNormal; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getJoinNormal\\\", function() { return getJoinNormal; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"neg\\\", function() { return neg; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pointInTriangle\\\", function() { return pointInTriangle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"halfPlaneSign\\\", function() { return halfPlaneSign; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equalPoints\\\", function() { return equalPoints; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pointInCircle\\\", function() { return pointInCircle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pointInRectangle\\\", function() { return pointInRectangle; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"computeAABB\\\", function() { return computeAABB; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"computeCentroids\\\", function() { return computeCentroids; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"triangleArea\\\", function() { return triangleArea; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"unproject\\\", function() { return unproject; });\\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \\\"./node_modules/gl-matrix/lib/gl-matrix.js\\\");\\n/* harmony import */ var _renderer_viz_expressions_stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../renderer/viz/expressions/stats */ \\\"./src/renderer/viz/expressions/stats.js\\\");\\n/* harmony import */ var _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/carto-validation-error */ \\\"./src/errors/carto-validation-error.js\\\");\\n\\n\\n\\n\\nconst GEOMETRY_TYPE = {\\n    UNKNOWN: 'unknown',\\n    POINT: 'point',\\n    LINE: 'line',\\n    POLYGON: 'polygon'\\n};\\n\\n// If AB intersects CD => return intersection point\\n// Intersection method from Real Time Rendering, Third Edition, page 780\\nfunction intersect (a, b, c, d) {\\n    const o1 = a;\\n    const o2 = c;\\n    const d1 = sub(b, a);\\n    const d2 = sub(d, c);\\n    const d1t = perpendicular(d1);\\n    const d2t = perpendicular(d2);\\n\\n    const s = dot(sub(o2, o1), d2t) / dot(d1, d2t);\\n    const t = dot(sub(o1, o2), d1t) / dot(d2, d1t);\\n\\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\\n        return [o1[0] + s * d1[0], o1[1] + s * d1[1]];\\n    }\\n}\\n\\nfunction sub ([ax, ay], [bx, by]) {\\n    return ([ax - bx, ay - by]);\\n}\\n\\nfunction dot ([ax, ay], [bx, by]) {\\n    return (ax * bx + ay * by);\\n}\\n\\nfunction perpendicular ([x, y]) {\\n    return [-y, x];\\n}\\n\\n/**\\n * Compute the normal of a line AB.\\n * By definition it is the unitary vector from B to A, rotated +90 degrees counter-clockwise\\n */\\nfunction getLineNormal (a, b) {\\n    const u = normalize(a[0] - b[0], a[1] - b[1]);\\n    return [-u[1], u[0]];\\n}\\n\\n/**\\n * Compute the normal of the join from the lines' normals.\\n * By definition this is the sum of the unitary vectors `u` (from B to A) and `v` (from B to C)\\n * multiplied by a factor of `1/sin(theta)` to reach the intersection of the wide lines.\\n * Theta is the angle between the vectors `v` and `u`. But instead of computing the angle,\\n * the `sin(theta)` (with sign) is obtained directly from the vectorial product of `v` and `u`\\n */\\nfunction getJoinNormal (prevNormal, nextNormal) {\\n    const u = [prevNormal[1], -prevNormal[0]];\\n    const v = [-nextNormal[1], nextNormal[0]];\\n    const sin = v[0] * u[1] - v[1] * u[0];\\n    const cos = v[0] * u[0] + v[1] * u[1];\\n    const factor = Math.abs(sin);\\n    const miterJoin = !(factor < 0.866 && cos > 0.5); // 60 deg\\n    return {\\n        turnLeft: sin > 0,\\n        joinNormal: miterJoin && neg([\\n            (u[0] + v[0]) / factor,\\n            (u[1] + v[1]) / factor\\n        ])\\n    };\\n}\\n\\n/**\\n * Return the negative of the provided vector\\n */\\nfunction neg (v) {\\n    return [-v[0], -v[1]];\\n}\\n\\n/**\\n * Return the vector scaled to length 1\\n */\\nfunction normalize (x, y) {\\n    const s = Math.hypot(x, y);\\n    return [x / s, y / s];\\n}\\n\\n// Returns true if p is inside the triangle or on a triangle's edge, false otherwise\\n// Parameters in {x: 0, y:0} form\\nfunction pointInTriangle (p, v1, v2, v3) {\\n    // https://stackoverflow.com/questions/2049582/how-to-determine-if-a-point-is-in-a-2d-triangle\\n    // contains an explanation of both this algorithm and one based on barycentric coordinates,\\n    // which could be faster, but, nevertheless, it is quite similar in terms of required arithmetic operations\\n\\n    if (equalPoints(v1, v2) || equalPoints(v2, v3) || equalPoints(v3, v1)) {\\n        // Avoid zero area triangle\\n        return false;\\n    }\\n\\n    // A point is inside a triangle or in one of the triangles edges\\n    // if the point is in the three half-plane defined by the 3 edges\\n    const b1 = halfPlaneSign(p, v1, v2) < 0;\\n    const b2 = halfPlaneSign(p, v2, v3) < 0;\\n    const b3 = halfPlaneSign(p, v3, v1) < 0;\\n\\n    return (b1 === b2) && (b2 === b3);\\n}\\n\\n// Tests if a point `p` is in the half plane defined by the line with points `a` and `b`\\n// Returns a negative number if the result is INSIDE, returns 0 if the result is ON_LINE,\\n// returns >0 if the point is OUTSIDE\\n// Parameters in {x: 0, y:0} form\\nfunction halfPlaneSign (p, a, b) {\\n    // We use the cross product of `PB x AB` to get `sin(angle(PB, AB))`\\n    // The result's sign is the half plane test result\\n    return (p.x - b.x) * (a.y - b.y) - (a.x - b.x) * (p.y - b.y);\\n}\\n\\nfunction equalPoints (a, b) {\\n    return (a.x === b.x) && (a.y === b.y);\\n}\\n\\nfunction pointInCircle (p, center, radius) {\\n    const diff = {\\n        x: p.x - center.x,\\n        y: p.y - center.y\\n    };\\n    const lengthSquared = diff.x * diff.x + diff.y * diff.y;\\n    return lengthSquared <= radius * radius;\\n}\\n\\nfunction pointInRectangle (point, bbox) {\\n    if (bbox === null) {\\n        return false;\\n    }\\n    const p = {\\n        x: point.x.toFixed(2),\\n        y: point.y.toFixed(2)\\n    };\\n\\n    return ((bbox.minx <= p.x) && (p.x <= bbox.maxx) && (bbox.miny <= p.y) && (p.y <= bbox.maxy));\\n}\\n\\n/**\\n * Axis-Aligned Bounding Box (AABB). This creates a wrapping box around the geometry, without rotation.\\n * This allows the use of a common technique to detect collision between features (using their corresponding AABBs).\\n */\\nfunction computeAABB (geometry, type) {\\n    switch (type) {\\n        case GEOMETRY_TYPE.POINT:\\n            return [];\\n        case GEOMETRY_TYPE.LINE:\\n        case GEOMETRY_TYPE.POLYGON:\\n            const aabbList = [];\\n\\n            for (let i = 0; i < geometry.length; i++) {\\n                const feature = geometry[i];\\n\\n                let aabb = {\\n                    minx: Number.POSITIVE_INFINITY,\\n                    miny: Number.POSITIVE_INFINITY,\\n                    maxx: Number.NEGATIVE_INFINITY,\\n                    maxy: Number.NEGATIVE_INFINITY\\n                };\\n\\n                for (let j = 0; j < feature.length; j++) {\\n                    aabb = _updateAABBForGeometry(feature[j], aabb, type);\\n                }\\n\\n                if (aabb.minx === Number.POSITIVE_INFINITY) {\\n                    aabb = null;\\n                }\\n\\n                aabbList.push(aabb);\\n            }\\n\\n            return aabbList;\\n    }\\n}\\n\\nfunction computeCentroids (decodedGeometry, type) {\\n    switch (type) {\\n        case GEOMETRY_TYPE.POINT:\\n            return _computeCentroidsForPoints(decodedGeometry);\\n        case GEOMETRY_TYPE.LINE:\\n        case GEOMETRY_TYPE.POLYGON:\\n            return _computeCentroidsForLinesOrPolygons(decodedGeometry, type);\\n        default:\\n            throw new _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"](\\n                'Invalid type argument, decoded geometry must have a point, line or polygon type.',\\n                _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_2__[\\\"CartoValidationErrorTypes\\\"].INCORRECT_VALUE\\n            );\\n    }\\n}\\n\\nfunction _computeCentroidsForPoints (decodedGeometry) {\\n    const centroids = [];\\n\\n    // 'Compute' centroids for points is just getting one exemplar from the 3 repeated points\\n    const STEP = 6;\\n    for (let i = 0; i < decodedGeometry.vertices.length / STEP; i++) {\\n        const start = i * STEP;\\n        const end = start + STEP;\\n        const [, , , , x, y] = decodedGeometry.vertices.slice(start, end);\\n        centroids.push({ x, y });\\n    }\\n    return centroids;\\n}\\n\\nfunction _computeCentroidsForLinesOrPolygons (decodedGeometry, type) {\\n    const centroids = [];\\n\\n    let startVertex = 0;\\n    decodedGeometry.breakpoints.forEach((breakpoint) => {\\n        const vertices = decodedGeometry.vertices.slice(startVertex, breakpoint);\\n        let centroid = null;\\n        if (type === GEOMETRY_TYPE.LINE) {\\n            centroid = _centroidForLines(vertices);\\n        } else {\\n            centroid = _centroidForPolygons(vertices);\\n        }\\n        centroids.push(centroid);\\n        startVertex = breakpoint;\\n    });\\n\\n    return centroids;\\n}\\n\\nfunction _centroidForLines (vertices) {\\n    // Triangles don't have any area in this case, so just average coordinates are calculated\\n    const Xs = [];\\n    const Ys = [];\\n    const STEP = 6;\\n    for (let i = 0; i < vertices.length / STEP; i++) {\\n        const start = i * STEP;\\n        const end = start + STEP;\\n        const [xA, yA, xB, yB, xC, yC] = vertices.slice(start, end);\\n\\n        const AequalB = (xA === xB && yA === yB);\\n        const BequalC = (xB === xC && yB === yC);\\n\\n        if (AequalB && BequalC) {\\n            continue; // spurious triangles (useful for rendering strokes with normals, not here)\\n        }\\n\\n        const firstPoint = [xA, yA];\\n        const secondPoint = !AequalB ? [xB, yB] : [xC, yC];\\n\\n        Xs.push(firstPoint[0]);\\n        Xs.push(secondPoint[0]);\\n\\n        Ys.push(firstPoint[1]);\\n        Ys.push(secondPoint[1]);\\n    }\\n\\n    let centroid = {\\n        x: Object(_renderer_viz_expressions_stats__WEBPACK_IMPORTED_MODULE_1__[\\\"average\\\"])(Xs),\\n        y: Object(_renderer_viz_expressions_stats__WEBPACK_IMPORTED_MODULE_1__[\\\"average\\\"])(Ys)\\n    };\\n    return centroid;\\n}\\n\\nfunction _centroidForPolygons (vertices) {\\n    // Triangles average coordinates, ponderated by their area\\n    const weightedXs = [];\\n    const weightedYs = [];\\n    const areas = [];\\n\\n    const STEP = 6;\\n    for (let i = 0; i < vertices.length / STEP; i++) {\\n        const start = i * STEP;\\n        const end = start + STEP;\\n        const [xA, yA, xB, yB, xC, yC] = vertices.slice(start, end);\\n        const triangle = [[xA, yA], [xB, yB], [xC, yC]];\\n        const area = triangleArea(triangle);\\n        if (area > 0) {\\n            const averageX = Object(_renderer_viz_expressions_stats__WEBPACK_IMPORTED_MODULE_1__[\\\"average\\\"])([xA, xB, xC]);\\n            const averageY = Object(_renderer_viz_expressions_stats__WEBPACK_IMPORTED_MODULE_1__[\\\"average\\\"])([yA, yB, yC]);\\n\\n            weightedXs.push(averageX * area);\\n            weightedYs.push(averageY * area);\\n            areas.push(area);\\n        }\\n    }\\n    const totalWeight = _sumArray(areas);\\n\\n    let centroid = {\\n        x: _sumArray(weightedXs) / totalWeight,\\n        y: _sumArray(weightedYs) / totalWeight\\n    };\\n    return centroid;\\n}\\n\\nfunction _sumArray (array) {\\n    return array.reduce((p, c) => p + c, 0);\\n}\\n\\n/*\\n* Calculate the area of a triangle using its coordinates.\\n* From https://en.wikipedia.org/wiki/Triangle#Computing_the_area_of_a_triangle\\n*/\\nfunction triangleArea (threeVerticesArray) {\\n    let [xA, yA] = threeVerticesArray[0];\\n    let [xB, yB] = threeVerticesArray[1];\\n    let [xC, yC] = threeVerticesArray[2];\\n\\n    const area = Math.abs((xA - xC) * (yB - yA) - (xA - xB) * (yC - yA)) / 2.0;\\n    return area;\\n}\\n\\n// Compute the WebMercator position at projected (x,y) NDC (Normalized Device Coordinates) reversing the projection of the point\\nfunction unproject (inv, x, y) {\\n    // To unproject a point we need the 3 coordinates (x,y,z)\\n    // The `z` coordinate can be computed by knowing that the unprojected `z` is equal to `0` (since the map is a 2D plane)\\n    // defined at `z=0`\\n\\n    // Since a matrix-vector multiplication is a linear transform we know that\\n    //      z = m * projectedZ + k\\n    // Being `m` and `k` constants for a particular value of projected `x` and `y` coordinates\\n\\n    // With that equation and the inverse matrix of the projection we can establish an equation system of the form:\\n    //      v1 = m * v2 + k\\n    //      v3 = m * v4 + k\\n    // Where `v2` and `v4` can be arbitrary values (but not equal to each other) and\\n    // `v1` and `v3` can be computed by using the inverse matrix knowing that:\\n    //      (_, _, v1,_) = inverse(projectionMatrix) * (projectedX, projectedY, v2, 1)\\n    //      (_, _, v3,_) = inverse(projectionMatrix) * (projectedX, projectedY, v4, 1)\\n\\n    // By resolving the the equation system above computing `m` and `k` values\\n    // we can compute the projected Z coordinate at the (x,y) NDC (projected) point\\n\\n    // With (projectedX, projectedY, projectedZ) we can compute the unprojected point by multiplying by the inverse matrix\\n\\n    // *** Implementation ***\\n\\n    // compute m, k for: [z = m*projectedZ + k]\\n    const v2 = 1;\\n    const v4 = 2;\\n\\n    const v1 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__[\\\"vec4\\\"].transformMat4([], [x, y, v2, 1], inv)[2];\\n    const v3 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__[\\\"vec4\\\"].transformMat4([], [x, y, v4, 1], inv)[2];\\n\\n    // Solve the equation system by using the elimination method (subtraction of the equations)\\n    //      (v1-v3) = (v2-v4)*m\\n    //      m = (v1 - v3) / (v2 - v4)\\n    const m = (v1 - v3) / (v2 - v4);\\n    // Substituting in the first equation `m` and solving for `k`\\n    const k = v1 - m * v2;\\n\\n    // compute projectedZ by solving `z = m * projectedZ + k` knwoing `z`, `m` and `k`\\n    const projectedZ = -k / m;\\n\\n    // Inverse the projection and normalize by `p.w`\\n    return gl_matrix__WEBPACK_IMPORTED_MODULE_0__[\\\"vec4\\\"].transformMat4([], [x, y, projectedZ, 1], inv).map((v, _, point) => v / point[3]);\\n}\\n\\nfunction _updateAABBForGeometry (feature, aabb, geometryType) {\\n    switch (geometryType) {\\n        case GEOMETRY_TYPE.LINE:\\n            return _updateAABBLine(feature, aabb);\\n        case GEOMETRY_TYPE.POLYGON:\\n            return _updateAABBPolygon(feature, aabb);\\n    }\\n}\\n\\nfunction _updateAABBLine (line, aabb) {\\n    const vertices = line;\\n    const numVertices = line.length;\\n\\n    for (let i = 0; i < numVertices; i += 2) {\\n        aabb.minx = Math.min(aabb.minx, vertices[i + 0]);\\n        aabb.miny = Math.min(aabb.miny, vertices[i + 1]);\\n        aabb.maxx = Math.max(aabb.maxx, vertices[i + 0]);\\n        aabb.maxy = Math.max(aabb.maxy, vertices[i + 1]);\\n    }\\n\\n    return aabb;\\n}\\n\\nfunction _updateAABBPolygon (polygon, aabb) {\\n    const [vertices, numVertices] = [polygon.flat, polygon.holes[0] || polygon.flat.length / 2];\\n\\n    for (let i = 0; i < numVertices; i++) {\\n        aabb.minx = Math.min(aabb.minx, vertices[2 * i + 0]);\\n        aabb.miny = Math.min(aabb.miny, vertices[2 * i + 1]);\\n        aabb.maxx = Math.max(aabb.maxx, vertices[2 * i + 0]);\\n        aabb.maxy = Math.max(aabb.maxy, vertices[2 * i + 1]);\\n    }\\n\\n    return aabb;\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = ({\\n    intersect,\\n    sub,\\n    dot,\\n    perpendicular,\\n    getLineNormal,\\n    getJoinNormal,\\n    neg,\\n    halfPlaneSign,\\n    pointInTriangle,\\n    equalPoints,\\n    pointInCircle,\\n    pointInRectangle\\n});\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils/time/TimeRange.js\\\":\\n/*!*************************************!*\\\\\\n  !*** ./src/utils/time/TimeRange.js ***!\\n  \\\\*************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return TimeRange; });\\n/* harmony import */ var _periodISO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./periodISO */ \\\"./src/utils/time/periodISO.js\\\");\\n/* harmony import */ var _parseISO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parseISO */ \\\"./src/utils/time/parseISO.js\\\");\\n/* harmony import */ var _TimeZoneDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TimeZoneDate */ \\\"./src/utils/time/TimeZoneDate.js\\\");\\n\\n\\n\\n\\n/**\\n * Class TimeRange represents an interval of time between to instants.\\n *\\n * Only single unit-of-time intervals such as a calender year, month, day, hour, etc.\\n * are supported, arbitrary intervals are not.\\n *\\n * A TimeRange can be defined and accessed either by its start and end instants\\n * or by an abbreviated ISO-formatted textual representation.\\n * For the text format, since general intervals are not supported, the ISO interval\\n * format is not used, but simply the abbreviated form of the time unit.\\n * For example, to represent March 2018, `2018-03` is used instead of the\\n * ISO-formatted interval `018-03-01T00:00:00/2018-04-01T00:00:00`.\\n *\\n * A TimeRange includes its start instant and excludes the end instant:\\n * it represents the semi-open interval start <= t < end.\\n *\\n * @param {String} timezone - Time zone of the range; informational only.\\n * @param {String} text - text representation of the range\\n * @param {Number} startValue - start of the range as elapsed milliseconds since a timezone-specific epoch\\n * @param {Number} endValue - end of the range as elapsed milliseconds since a timezone-specific epoch\\n *\\n * @constructor Layer\\n * @name carto.TimeRange\\n * @api\\n * */\\nclass TimeRange {\\n    constructor (timeZone, iso, startValue, endValue) {\\n        this._startValue = startValue;\\n        this._endValue = endValue;\\n\\n        if (startValue && endValue) {\\n            this._iso = Object(_periodISO__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(startValue, endValue);\\n        } else if (!startValue && !endValue && iso) {\\n            const startEndValues = _startEndTimeValues(iso);\\n\\n            this._iso = iso;\\n            this._startValue = startEndValues[0];\\n            this._endValue = startEndValues[1];\\n        }\\n\\n        // The timezone of a TimeRange is merely informative.\\n        // No time zone conversion is ever performed, e.g. when\\n        // several ranges are used in the same linear expression.\\n        // In same cases (e.g. defining a time range from a text constant)\\n        // it may not be available.\\n        this._timeZone = timeZone;\\n    }\\n\\n    get timeZone () {\\n        return this._timeZone;\\n    }\\n\\n    get iso () {\\n        return this._iso;\\n    }\\n\\n    get startValue () {\\n        return this._startValue;\\n    }\\n\\n    get endValue () {\\n        return this._endValue;\\n    }\\n\\n    get startDate () {\\n        return _TimeZoneDate__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].fromValue(this._startValue, this._timeZone);\\n    }\\n\\n    get endDate () {\\n        return _TimeZoneDate__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"].fromValue(this._endValue, this._timeZone);\\n    }\\n}\\n\\nfunction _timeValue (parsed) {\\n    return Date.UTC(\\n        parsed.year,\\n        parsed.month - 1,\\n        parsed.day,\\n        parsed.hour,\\n        parsed.minute,\\n        parsed.second\\n    );\\n}\\n\\nfunction _startEndTimeValues (iso) {\\n    return Object(_parseISO__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(iso).map(_timeValue);\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils/time/TimeZoneDate.js\\\":\\n/*!****************************************!*\\\\\\n  !*** ./src/utils/time/TimeZoneDate.js ***!\\n  \\\\****************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return TimeZoneDate; });\\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \\\"./src/utils/util.js\\\");\\n/* harmony import */ var _periodISO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./periodISO */ \\\"./src/utils/time/periodISO.js\\\");\\n\\n\\n\\n// Time-zone neutral date\\n// TODO: name: TimeZoneLessDate, NeutralDate, DateWithoutTimeZone, ...\\n// it has an optional informational time zone string to declare the\\n// original TZ\\n// The idea is that this represent a date, just like a Date object,\\n// but in relation ot some externally defined time zone\\n// (the time zone specified in a clusterTime expression),\\n// so we want to avoid the time zone handling that Date does.\\n// (this dates cannot be converted from the tz they're specified in,\\n// not even to UTC)\\nclass TimeZoneDate {\\n    constructor (milliseconds, tz) {\\n        this._value = milliseconds;\\n        this._date = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\\\"msToDate\\\"])(milliseconds);\\n        this._timeZone = tz; // informational\\n    }\\n\\n    static fromValue (milliseconds, tz) {\\n        return new TimeZoneDate(milliseconds, tz);\\n    }\\n\\n    static from (year, month, day, hour, minute, second, tz) {\\n        return this.fromValue(Date.UTC(year, (month || 1) - 1, day, hour, minute, second), tz);\\n    }\\n\\n    get year () {\\n        return this._date.getUTCFullYear();\\n    }\\n    get month () {\\n        return this._date.getUTCMonth() + 1;\\n    }\\n    get day () {\\n        return this._date.getUTCDate();\\n    }\\n    get hour () {\\n        return this._date.getUTCHours();\\n    }\\n    get minute () {\\n        return this._date.getUTCMinutes();\\n    }\\n    get second () {\\n        return this._date.getUTCSeconds();\\n    }\\n    get text () {\\n        return Object(_periodISO__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(this._date.getTime(), this._date.getTime() + 1000);\\n    }\\n    get timeZone () {\\n        return this._timeZone;\\n    }\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils/time/parseISO.js\\\":\\n/*!************************************!*\\\\\\n  !*** ./src/utils/time/parseISO.js ***!\\n  \\\\************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return parseISO; });\\n/* harmony import */ var _errors_carto_parsing_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/carto-parsing-error */ \\\"./src/errors/carto-parsing-error.js\\\");\\n\\n\\nclass IsoParser {\\n    constructor (format) {\\n        this._format = format;\\n    }\\n    check (iso) {\\n        return iso.match(this._format);\\n    }\\n}\\n\\nfunction fieldDefault (value, defaultValue) {\\n    return (value === undefined) ? defaultValue : Number(value);\\n}\\n\\nfunction dateFields (fields) {\\n    return {\\n        year: fieldDefault(fields.year, 1),\\n        month: fieldDefault(fields.month, 1),\\n        day: fieldDefault(fields.day, 1),\\n        hour: fieldDefault(fields.hour, 0),\\n        minute: fieldDefault(fields.minute, 0),\\n        second: fieldDefault(fields.second, 0)\\n    };\\n}\\n\\nfunction fieldsFromMatch (match) {\\n    return dateFields({\\n        year: match[1],\\n        month: match[2],\\n        day: match[3],\\n        hour: match[4],\\n        minute: match[5],\\n        second: match[6]\\n    });\\n}\\n\\nclass YMDHMSParser extends IsoParser {\\n    constructor () {\\n        super(/^(\\\\d\\\\d\\\\d\\\\d)(?:\\\\-?(\\\\d\\\\d)(?:\\\\-?(\\\\d\\\\d)(?:[T\\\\s]?(\\\\d\\\\d)(?:\\\\:(\\\\d\\\\d)(?:\\\\:(\\\\d\\\\d))?)?)?)?)?$/);\\n    }\\n    parse (iso) {\\n        const start = this.check(iso) || [];\\n        const end = start.slice();\\n        const i = [1, 2, 3, 4, 5, 6].find(i => end[i] === undefined) || 7;\\n        if (i === 1) {\\n            end[1] = 2;\\n        } else {\\n            end[i - 1] = Number(end[i - 1]) + 1;\\n        }\\n        return [ fieldsFromMatch(start), fieldsFromMatch(end) ];\\n    }\\n}\\n\\nclass MillenniumParser extends IsoParser {\\n    constructor () {\\n        super(/^M(\\\\d+)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const m = Number(match[1]);\\n        const year = m => (m - 1) * 1000 + 1;\\n        return [\\n            dateFields({ year: year(m) }),\\n            dateFields({ year: year(m + 1) })\\n        ];\\n    }\\n}\\n\\nclass CenturyParser extends IsoParser {\\n    constructor () {\\n        super(/^C(\\\\d+)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const c = Number(match[1]);\\n        const year = c => (c - 1) * 100 + 1;\\n        return [\\n            dateFields({ year: year(c) }),\\n            dateFields({ year: year(c + 1) })\\n        ];\\n    }\\n}\\n\\nclass DecadeParser extends IsoParser {\\n    constructor () {\\n        super(/^D(\\\\d+)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const d = Number(match[1]);\\n        const year = d => d * 10;\\n        return [\\n            dateFields({ year: year(d) }),\\n            dateFields({ year: year(d + 1) })\\n        ];\\n    }\\n}\\n\\nclass SemesterParser extends IsoParser {\\n    constructor () {\\n        super(/^(\\\\d\\\\d\\\\d\\\\d)S(\\\\d)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const year = Number(match[1]);\\n        const s = Number(match[2]);\\n        const month = s => (s - 1) * 6 + 1;\\n        return [\\n            dateFields({ year, month: month(s) }),\\n            dateFields({ year, month: month(s + 1) })\\n        ];\\n    }\\n}\\n\\nclass TrimesterParser extends IsoParser {\\n    constructor () {\\n        super(/^(\\\\d\\\\d\\\\d\\\\d)t(\\\\d)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const year = Number(match[1]);\\n        const t = Number(match[2]);\\n        const month = t => (t - 1) * 4 + 1;\\n        return [\\n            dateFields({ year, month: month(t) }),\\n            dateFields({ year, month: month(t + 1) })\\n        ];\\n    }\\n}\\n\\nclass QuarterParser extends IsoParser {\\n    constructor () {\\n        super(/^(\\\\d\\\\d\\\\d\\\\d)\\\\-?Q(\\\\d)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const year = Number(match[1]);\\n        const q = Number(match[2]);\\n        const month = q => (q - 1) * 3 + 1;\\n        return [\\n            dateFields({ year, month: month(q) }),\\n            dateFields({ year, month: month(q + 1) })\\n        ];\\n    }\\n}\\n\\nfunction isoDow (y, m, d) {\\n    const dow = (new Date(y, m - 1, d)).getDay();\\n    return dow === 0 ? 7 : dow;\\n}\\n\\nfunction addDays (date, days) {\\n    const newDate = new Date(date.valueOf());\\n    newDate.setDate(newDate.getDate() + days);\\n    return newDate;\\n}\\n\\n// compute start date of yWw\\nfunction startOfIsoWeek (y, w) {\\n    const dow = isoDow(y, 1, 1);\\n    const startDay = dow > 4 ? 9 - dow : 2 - dow;\\n    const startDate = new Date(y, 0, startDay);\\n    return addDays(startDate, (w - 1) * 7);\\n}\\n\\nclass WeekParser extends IsoParser {\\n    constructor () {\\n        super(/^(\\\\d\\\\d\\\\d\\\\d)\\\\-?W(\\\\d\\\\d)$/);\\n    }\\n    parse (iso) {\\n        const match = this.check(iso);\\n        const year = Number(match[1]);\\n        const week = Number(match[2]);\\n        const start = startOfIsoWeek(year, week);\\n        const end = startOfIsoWeek(year, week + 1);\\n        const fields = date => ({\\n            year: date.getFullYear(),\\n            month: date.getMonth() + 1,\\n            day: date.getDate()\\n        });\\n        return [\\n            dateFields(fields(start)),\\n            dateFields(fields(end))\\n        ];\\n    }\\n}\\n\\nconst isoFormats = [\\n    new MillenniumParser(),\\n    new CenturyParser(),\\n    new DecadeParser(),\\n    new SemesterParser(),\\n    new TrimesterParser(),\\n    new QuarterParser(),\\n    new WeekParser(),\\n    new YMDHMSParser()\\n];\\n\\nfunction findParser (iso) {\\n    return isoFormats.find(parser => parser.check(iso));\\n}\\n\\nfunction parseISO (iso) {\\n    iso = iso || '';\\n    const parser = findParser(iso);\\n    if (!parser) {\\n        throw new _errors_carto_parsing_error__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](`No date parser found for ${iso}`);\\n    }\\n    return parser.parse(iso);\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils/time/periodISO.js\\\":\\n/*!*************************************!*\\\\\\n  !*** ./src/utils/time/periodISO.js ***!\\n  \\\\*************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return periodISO; });\\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \\\"./src/utils/util.js\\\");\\n\\n\\nconst TIME_LEVELS = ['year', 'month', 'day', 'hour', 'minute', 'second'];\\nconst TIME_STARTS = [1, 1, 1, 0, 0, 0];\\nconst YEAR_LEVEL = 0;\\nconst MONTH_LEVEL = 1;\\nconst DAY_LEVEL = 2;\\nconst HOUR_LEVEL = 3;\\nconst MINUTE_LEVEL = 4;\\nconst SECOND_LEVEL = 5;\\n\\nconst MS_PER_DAY = 86400000;\\nconst MS_PER_HOUR = 3600000;\\nconst MS_PER_MINUTE = 60000;\\nconst MS_PER_S = 1000;\\n\\nfunction startLevel (parsed) {\\n    let i = TIME_LEVELS.length - 1;\\n    while (i > 0 && parsed[TIME_LEVELS[i]] === TIME_STARTS[i]) {\\n        --i;\\n    }\\n    return i;\\n}\\n\\nfunction pad (x, n) {\\n    return x.toString().padStart(n, '0');\\n}\\n\\nfunction parsedValue (dateValue) {\\n    const date = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\\\"msToDate\\\"])(dateValue);\\n    return {\\n        year: date.getUTCFullYear(),\\n        month: date.getUTCMonth() + 1,\\n        day: date.getUTCDate(),\\n        hour: date.getUTCHours(),\\n        minute: date.getUTCMinutes(),\\n        second: date.getUTCSeconds()\\n    };\\n}\\n\\nfunction isoDow (y, m, d) {\\n    const dow = (new Date(y, m - 1, d)).getDay();\\n    return dow === 0 ? 7 : dow;\\n}\\n\\nfunction invalidPeriod (period, invalid) {\\n    throw new Error(`Invalid period of ${invalid} between ${period.v1} and ${period.v2}`);\\n}\\n\\n// Return year and week number given year and day number\\nfunction yearWeek (y, yd) {\\n    const dow = isoDow(y, 1, 1);\\n    const start = dow > 4 ? 9 - dow : 2 - dow;\\n    if ((Math.abs(yd - start) % 7) !== 0) {\\n        // y yd is not the start of any week\\n        return [];\\n    }\\n    if (yd < start) {\\n        // The week starts before the first week of the year => go back one year\\n        yd += Math.round((Date.UTC(y, 0, 1) - Date.UTC(y - 1, 0, 1)) / MS_PER_DAY);\\n        return yearWeek(y - 1, yd);\\n    } else if (Date.UTC(y, 0, 1) + (yd - 1 + 3) * MS_PER_DAY >= Date.UTC(y + 1, 0, 1)) {\\n        // The Wednesday (start of week + 3) lies in the next year => advance one year\\n        yd -= Math.round((Date.UTC(y + 1, 0, 1) - Date.UTC(y, 0, 1)) / MS_PER_DAY);\\n        return yearWeek(y + 1, yd);\\n    }\\n    return [y, 1 + Math.round((yd - start) / 7)];\\n}\\n\\nfunction yearsPeriod (period) {\\n    const d = period.t2['year'] - period.t1['year'];\\n    if (d === 1000 && ((period.t1['year'] - 1) % 1000) === 0) {\\n        // millennium\\n        return `M${1 + (period.t1['year'] - 1) / 1000}`;\\n    } else if (d === 100 && ((period.t1['year'] - 1) % 100) === 0) {\\n        // century\\n        return `C${1 + (period.t1['year'] - 1) / 100}`;\\n    } else if (d === 10 && (period.t1['year'] % 10) === 0) {\\n        // decade\\n        return `D${period.t1['year'] / 10}`;\\n    } else if (d === 1) {\\n        // year\\n        return pad(period.t1['year'], 4);\\n    } else {\\n        invalidPeriod(`${d} years`);\\n    }\\n}\\n\\nfunction monthsPeriod (period) {\\n    const d = 12 * period.t2['year'] + period.t2['month'] - 12 * period.t1['year'] - period.t1['month'];\\n    if (d === 6 && ((period.t1['month'] - 1) % 6) === 0) {\\n        // semester\\n        return `${pad(period.t1['year'], 4)}S${1 + (period.t1['month'] - 1) / 6}`;\\n    } else if (d === 4) {\\n        // trimester\\n        return `${pad(period.t1['year'], 4)}t${1 + (period.t1['month'] - 1) / 4}`;\\n    } else if (d === 3) {\\n        // quarter\\n        return `${pad(period.t1['year'], 4)}-Q${1 + (period.t1['month'] - 1) / 3}`;\\n    } else if (d === 1) {\\n        // month\\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}`;\\n    } else {\\n        invalidPeriod(`${d} months`);\\n    }\\n}\\n\\nfunction daysPeriod (period) {\\n    const d = Math.round((period.v2 - period.v1) / MS_PER_DAY);\\n    if (d === 1) {\\n        // day\\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}`;\\n    } else if (d === 7) {\\n        // week\\n        let y = period.t1['year'];\\n        const v0 = Date.UTC(y, 0, 1);\\n        let yd = 1 + Math.round((period.v1 - v0) / MS_PER_DAY);\\n        const [iy, w] = yearWeek(y, yd);\\n        if (iy && w) {\\n            return `${pad(iy, 4)}-W${pad(w, 2)}`;\\n        }\\n        invalidPeriod('7 days');\\n    } else {\\n        invalidPeriod(`${d} days`);\\n    }\\n}\\n\\nfunction hoursPeriod (period) {\\n    const d = Math.round((period.v2 - period.v1) / MS_PER_HOUR);\\n    if (d === 1) {\\n        // hour\\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}T${pad(period.t1['hour'], 2)}`;\\n    } else {\\n        invalidPeriod(`${d} hours`);\\n    }\\n}\\n\\nfunction minutesPeriod (period) {\\n    const d = Math.round((period.v2 - period.v1) / MS_PER_MINUTE);\\n    if (d === 1) {\\n        // minute\\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}T${pad(period.t1['hour'], 2)}:${pad(period.t1['minute'], 2)}`;\\n    } else {\\n        invalidPeriod(`${d} minutes`);\\n    }\\n}\\n\\nfunction secondsPeriod (period) {\\n    const d = Math.round((period.v2 - period.v1) / MS_PER_S);\\n    if (d === 1) {\\n        // second\\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}T${pad(period.t1['hour'], 2)}:${pad(period.t1['minute'], 2)}:${pad(period.t1['second'], 2)}`;\\n    } else {\\n        invalidPeriod(`${d} seconds`);\\n    }\\n}\\n\\nfunction periodISO (v1, v2) {\\n    const t1 = parsedValue(v1);\\n    const t2 = parsedValue(v2);\\n    const l1 = startLevel(t1);\\n    const l2 = startLevel(t2);\\n    const period = { v1, v2, t1, t2 };\\n\\n    if (Math.max(l1, l2) === YEAR_LEVEL) {\\n        return yearsPeriod(period);\\n    } else if (Math.max(l1, l2) === MONTH_LEVEL) {\\n        return monthsPeriod(period);\\n    } else if (Math.max(l1, l2) === DAY_LEVEL) {\\n        return daysPeriod(period);\\n    } else if (Math.max(l1, l2) === HOUR_LEVEL) {\\n        return hoursPeriod(period);\\n    } else if (Math.max(l1, l2) === MINUTE_LEVEL) {\\n        return minutesPeriod(period);\\n    } else if (Math.max(l1, l2) === SECOND_LEVEL) {\\n        return secondsPeriod(period);\\n    }\\n    invalidPeriod(period, 'fractional seconds');\\n}\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils/util.js\\\":\\n/*!***************************!*\\\\\\n  !*** ./src/utils/util.js ***!\\n  \\\\***************************/\\n/*! exports provided: WM_R, WM_2R, isUndefined, isString, isNumber, isObject, regExpThatContains, castDate, msToDate, isSetsEqual, equalArrays, projectToWebMercator, computeMatrixZoom, computeMatrixCenter, computeViewportFromCameraMatrix, default, castTimeRange, timeRange, isTimeRange */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"WM_R\\\", function() { return WM_R; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"WM_2R\\\", function() { return WM_2R; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isUndefined\\\", function() { return isUndefined; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isString\\\", function() { return isString; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isNumber\\\", function() { return isNumber; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isObject\\\", function() { return isObject; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"regExpThatContains\\\", function() { return regExpThatContains; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"castDate\\\", function() { return castDate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"msToDate\\\", function() { return msToDate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isSetsEqual\\\", function() { return isSetsEqual; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"equalArrays\\\", function() { return equalArrays; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"projectToWebMercator\\\", function() { return projectToWebMercator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"computeMatrixZoom\\\", function() { return computeMatrixZoom; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"computeMatrixCenter\\\", function() { return computeMatrixCenter; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"computeViewportFromCameraMatrix\\\", function() { return computeViewportFromCameraMatrix; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"castTimeRange\\\", function() { return castTimeRange; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"timeRange\\\", function() { return timeRange; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isTimeRange\\\", function() { return isTimeRange; });\\n/* harmony import */ var _time_TimeRange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time/TimeRange */ \\\"./src/utils/time/TimeRange.js\\\");\\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \\\"./node_modules/gl-matrix/lib/gl-matrix.js\\\");\\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./geometry */ \\\"./src/utils/geometry.js\\\");\\n/* harmony import */ var _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors/carto-validation-error */ \\\"./src/errors/carto-validation-error.js\\\");\\n\\n\\n\\n\\n/**\\n * Export util functions\\n */\\n\\n\\nconst DEG2RAD = Math.PI / 180;\\nconst EARTH_RADIUS = 6378137;\\nconst WM_R = EARTH_RADIUS * Math.PI; // Webmercator *radius*: half length Earth's circumference\\nconst WM_2R = WM_R * 2; // Webmercator coordinate range (Earth's circumference)\\n\\nfunction isUndefined (value) {\\n    return value === undefined;\\n}\\n\\nfunction isString (value) {\\n    return typeof value === 'string';\\n}\\n\\nfunction isNumber (value) {\\n    return typeof value === 'number';\\n}\\n\\nfunction isObject (value) {\\n    const type = typeof value;\\n    return value !== null && (type === 'object' || type === 'function');\\n}\\n\\nfunction regExpThatContains (text) {\\n    const escaped = text.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, '\\\\\\\\$&'); // in case it has special symbols\\n    return new RegExp(escaped);\\n}\\n\\n/**\\n * Transform the given parameter into a Date object.\\n * When a number is given as a parameter is assumed to be a milliseconds epoch (UTC).\\n * The result is a local Date.\\n * @param {Date|number|string} date\\n */\\nfunction castDate (date) {\\n    if (date instanceof Date) {\\n        return date;\\n    }\\n\\n    if (typeof (date) === 'number') {\\n        return msToDate(date);\\n    }\\n\\n    if (isString(date)) {\\n        return new Date(date);\\n    } else {\\n        throw new _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"](\\n            'Invalid Date type',\\n            _errors_carto_validation_error__WEBPACK_IMPORTED_MODULE_3__[\\\"CartoValidationErrorTypes\\\"].INCORRECT_TYPE\\n        );\\n    }\\n}\\n\\nfunction msToDate (msEpoch) {\\n    return new Date(msEpoch);\\n}\\n\\nfunction isSetsEqual (a, b) {\\n    return a.size === b.size && [...a].every(value => b.has(value));\\n}\\n\\nfunction equalArrays (a, b) {\\n    if (a && b && a.length === b.length) {\\n        for (let i = 0; i < a.length; i++) {\\n            if (a[i] !== b[i]) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n\\nfunction projectToWebMercator (latLng) {\\n    let lat = latLng.lat * DEG2RAD;\\n    let lng = latLng.lng * DEG2RAD;\\n    return {\\n        x: lng * EARTH_RADIUS,\\n        y: Math.log(Math.tan(lat / 2 + Math.PI / 4)) * EARTH_RADIUS\\n    };\\n}\\n\\nfunction computeMatrixZoom (matrix) {\\n    // The matrix projects spherical mercator coordinates to gl coordinates\\n    return -(2 * matrix[15] / matrix[5]);\\n}\\n\\nfunction computeMatrixCenter (matrix) {\\n    // The matrix projects spherical mercator coordinates to gl coordinates\\n    return {\\n        x: -(1 + 2 * matrix[12] / matrix[0]),\\n        y: +(1 + 2 * matrix[13] / matrix[5])\\n    };\\n}\\n\\nfunction computeViewportFromCameraMatrix (matrix) {\\n    const inv = gl_matrix__WEBPACK_IMPORTED_MODULE_1__[\\\"mat4\\\"].invert([], matrix);\\n\\n    const corners = [\\n        [-1, -1],\\n        [-1, 1],\\n        [1, -1],\\n        [1, 1]\\n    ].map(NDC =>\\n        Object(_geometry__WEBPACK_IMPORTED_MODULE_2__[\\\"unproject\\\"])(inv, ...NDC)\\n    ).map(c =>\\n        // Our API works on the [-1,1] range, convert from [0,1] range to  [-1, 1] range\\n        c.map(x => x * 2 - 1)\\n    );\\n\\n    // Rotation no longer guarantees that corners[0] will be the minimum point of the AABB and corners[3] the maximum,\\n    // we need to compute the AABB min/max by iterating\\n    const min = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY];\\n    const max = [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\\n    corners.forEach(corner => {\\n        min[0] = Math.min(min[0], corner[0]);\\n        min[1] = Math.min(min[1], corner[1]);\\n        max[0] = Math.max(max[0], corner[0]);\\n        max[1] = Math.max(max[1], corner[1]);\\n    });\\n\\n    // Our API flips the `y` coordinate, we need to convert the values accordingly\\n    min[1] = -min[1];\\n    max[1] = -max[1];\\n    const temp = min[1];\\n    min[1] = max[1];\\n    max[1] = temp;\\n\\n    return [...min, ...max];\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = ({\\n    WM_R,\\n    WM_2R,\\n    isUndefined,\\n    isString,\\n    isNumber,\\n    isObject,\\n    castDate,\\n    isSetsEqual,\\n    equalArrays,\\n    projectToWebMercator,\\n    computeMatrixZoom,\\n    computeMatrixCenter,\\n    computeViewportFromCameraMatrix\\n});\\n\\nfunction castTimeRange (value, timeZone = null) {\\n    if (value === undefined || isTimeRange(value)) {\\n        if (value && timeZone) {\\n            return timeRange({ iso: value._iso, timeZone });\\n        }\\n        return value;\\n    }\\n\\n    if (typeof value === 'string') {\\n        return timeRange({ iso: value, timeZone });\\n    }\\n}\\n\\nfunction timeRange (parameters) {\\n    const { start, end, iso, timeZone } = parameters;\\n\\n    return new _time_TimeRange__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](timeZone, iso, start, end);\\n}\\n\\nfunction isTimeRange (t) {\\n    return t instanceof _time_TimeRange__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"];\\n}\\n\\n\\n/***/ })\\n\\n/******/ });\\n//# sourceMappingURL=carto-vl-2563bb54fa8ce3829b31.worker.js.map\", \"/dist/\" + \"carto-vl-2563bb54fa8ce3829b31.worker.js\");\n};","import CartoValidationError, { CartoValidationErrorTypes } from '../../src/errors/carto-validation-error';\nimport util from '../utils/util';\nimport BaseWindshaft from './BaseWindshaft';\n\nexport default class SQL extends BaseWindshaft {\n    /**\n     * A SQL defines the data that will be displayed in a layer.\n     *\n     * Imagine you have a table named `european_cities` and you only want to download data from european cities with population > 100000\n     *\n     * ```javascript\n     * const source = new carto.source.SQL(`SELECT * FROM european_cities WHERE country like 'europe' AND population > 10000`, {\n     *   apiKey: 'YOUR_API_KEY_HERE',\n     *   username: 'YOUR_USERNAME_HERE'\n     * });\n     * ````\n     *\n     * This only downloads the data you need from the server reducing data usage.\n     *\n     * If you need all the data see {@link carto.source.Dataset|carto.source.Dataset}.\n     *\n     * Since tables in the server are protected you must provide valid credentials in order to get access to the data.\n     * This can be done {@link carto.setDefaultAuth|setting the default auth} in the carto object or providing an `auth`\n     * object with your username and apiKey.\n     *\n     * If your server is not hosted by CARTO you must add a third parameter that includes the serverURL. This can be done {@link carto.setDefaultConfig|setting the default config} in the carto object or providing a `config`\n     * object with your serverURL.\n     *\n     * The combination of different type of geometries on the same source is not supported. Valid geometry types are `points`, `lines` and `polygons`.\n     *\n     * @param {String} query - A SQL query containing a SELECT statement\n     * @param {Object} auth\n     * @param {String} auth.apiKey - API key used to authenticate against CARTO\n     * @param {String} auth.user - Name of the user\n     * @param {Object} config\n     * @param {String} [config.serverURL='https://{user}.carto.com'] - URL of the CARTO Maps API server\n     *\n     * @example\n     * const source = new carto.source.SQL('SELECT * FROM european_cities', {\n     *   apiKey: 'YOUR_API_KEY_HERE',\n     *   username: 'YOUR_USERNAME_HERE'\n     * });\n     *\n     * @throws CartoError\n     *\n     * @memberof carto.source\n     * @name SQL\n     * @api\n     */\n    constructor (query, auth, config) {\n        super();\n        this._checkQuery(query);\n        this._query = query;\n        this.initialize(auth, config);\n    }\n\n    _getFromClause () {\n        return `(${this._query}) as _cdb_query_wrapper`;\n    }\n\n    _clone () {\n        return new SQL(this._query, this._auth, this._config);\n    }\n\n    _checkQuery (query) {\n        if (util.isUndefined(query)) {\n            throw new CartoValidationError('\\'query\\'', CartoValidationErrorTypes.MISSING_REQUIRED);\n        }\n        if (!util.isString(query)) {\n            throw new CartoValidationError('\\'query\\' property must be a string.', CartoValidationErrorTypes.INCORRECT_TYPE);\n        }\n        if (query === '') {\n            throw new CartoValidationError('\\'query\\' property must be not empty.', CartoValidationErrorTypes.INCORRECT_VALUE);\n        }\n        let sqlRegex = /\\bSELECT\\b/i;\n        if (!query.match(sqlRegex)) {\n            throw new CartoValidationError('\\'query\\' property must be a SQL query.', CartoValidationErrorTypes.INCORRECT_VALUE);\n        }\n    }\n}\n","import DataframeCache from './DataframeCache';\nimport { rTiles } from '../client/rsys';\nimport { isSetsEqual } from '../utils/util';\nimport CancelablePromise from '../utils/CancelablePromise';\n\nexport default class TileClient {\n    constructor (templateURLs) {\n        if (!Array.isArray(templateURLs)) {\n            templateURLs = [templateURLs];\n        }\n\n        this._templateURLs = templateURLs;\n        this._nextGroupID = 0;\n        this._currentRequestGroupID = 0;\n        this._oldDataframes = [];\n        this._cache = new DataframeCache();\n    }\n\n    bindLayer (addDataframe) {\n        this._addDataframe = addDataframe;\n    }\n\n    requestData (zoom, viewport, urlToDataframeTransformer, viewportZoomToSourceZoom = Math.ceil) {\n        const tiles = rTiles(zoom, viewport, viewportZoomToSourceZoom);\n        return this._getTiles(tiles, urlToDataframeTransformer);\n    }\n\n    free () {\n        this._cache.free();\n        this._cache = new DataframeCache();\n        this._oldDataframes = [];\n    }\n\n    _getTileUrl (x, y, z) {\n        const subdomainIndex = this._getSubdomainIndex(x, y);\n        return this._templateURLs[subdomainIndex].replace('{x}', x).replace('{y}', y).replace('{z}', z);\n    }\n\n    _getSubdomainIndex (x, y) {\n        // Reference https://github.com/Leaflet/Leaflet/blob/v1.3.1/src/layer/tile/TileLayer.js#L214-L217\n        return Math.abs(x + y) % this._templateURLs.length;\n    }\n\n    _getTiles (tiles, urlToDataframeTransformer) {\n        const _promise = new CancelablePromise(async resolve => {\n            this._nextGroupID++;\n            const requestGroupID = this._nextGroupID;\n\n            const completedDataframes = await Promise.all(\n                tiles.map(({ x, y, z }) => {\n                    return this._cache.get(`${x},${y},${z}`, () => this._requestDataframe(x, y, z, urlToDataframeTransformer)).then(dataframe => {\n                        dataframe.orderID = x + y / 1000;\n                        return dataframe;\n                    });\n                }));\n\n            if (requestGroupID < this._currentRequestGroupID) {\n                return true;\n            }\n            this._currentRequestGroupID = requestGroupID;\n\n            this._oldDataframes.forEach(d => {\n                d.active = false;\n            });\n            completedDataframes.forEach(d => {\n                d.active = true;\n            });\n\n            const dataframesChanged = !isSetsEqual(new Set(completedDataframes), new Set(this._oldDataframes));\n            if (this._oldDataframes && !_promise._canceled) this._oldDataframes = completedDataframes;\n\n            resolve(dataframesChanged);\n        });\n        return _promise;\n    }\n\n    async _requestDataframe (x, y, z, urlToDataframeTransformer) {\n        const url = this._getTileUrl(x, y, z);\n        const dataframe = await urlToDataframeTransformer(x, y, z, url);\n        if (!dataframe.empty) {\n            this._addDataframe(dataframe);\n        }\n        return dataframe;\n    }\n}\n","\nimport { DEFAULT_ID_PROPERTY } from '../../renderer/Metadata';\n\nimport schema from '../../renderer/schema';\nimport util from '../../utils/util';\n\nimport CartoRuntimeError, { CartoRuntimeErrorTypes } from '../../../src/errors/carto-runtime-error';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../../../src/errors/carto-validation-error';\n\nimport GeoJSONMetadata from './GeoJSONMetadata';\nimport { dataframeGeometryType } from './GeoJSONGeometryType';\n\nconst SAMPLE_TARGET_SIZE = 1000;\n\nexport class GeoJSONMetadataBuilder {\n    constructor (providedDateColumns, boundColumns) {\n        this._providedDateColumns = providedDateColumns;\n        this._boundColumns = boundColumns;\n\n        this._numFields = new Set();\n        this._catFields = new Set();\n        this._dateFields = new Set();\n\n        this._properties = {};\n    }\n\n    /**\n     * Build a Metadata instance, including the columns required by the viz (and using\n     * a sample of SAMPLE_TARGET_SIZE if required) to calculate the properties stats\n     */\n    buildFrom (viz, features) {\n        this._addNumericColumnField(DEFAULT_ID_PROPERTY);\n\n        const sample = [];\n        const requiredColumns = this._requiredColumnsIn(viz);\n        for (let i = 0; i < features.length; i++) {\n            const featureProperties = features[i].properties;\n            this._addPropertiesToMetadata(featureProperties, requiredColumns);\n            this._sampleFeatureOnMetadata(featureProperties, sample, features.length);\n        }\n\n        this._calculateAvgForNumericFields();\n\n        const metadata = new GeoJSONMetadata({\n            properties: this._properties,\n            featureCount: features.length,\n            sample,\n            geomType: this._dataframeGeomTypeFrom(features),\n            idProperty: DEFAULT_ID_PROPERTY\n        });\n        metadata.setCodecs();\n\n        return metadata;\n    }\n\n    /**\n     * Return a list with the current numFields + catFields + dateFields\n     */\n    getCurrentFields () {\n        const allFields = [...this._numFields].concat([...this._catFields]).concat([...this._dateFields]);\n        return allFields;\n    }\n\n    _requiredColumnsIn (viz) {\n        return new Set(Object.keys(schema.simplify(viz.getMinimumNeededSchema())));\n    }\n\n    _addPropertiesToMetadata (featureProperties, requiredColumns) {\n        const keys = Object.keys(featureProperties);\n        for (let j = 0, len = keys.length; j < len; j++) {\n            const name = keys[j];\n            if (!requiredColumns.has(name) || this._boundColumns.has(name)) {\n                continue;\n            }\n            const value = featureProperties[name];\n            this._addPropertyToMetadata(name, value);\n        }\n    }\n\n    _calculateAvgForNumericFields () {\n        this._numFields.forEach(name => {\n            const property = this._properties[name];\n            property.avg = property.sum / property.count;\n        });\n    }\n\n    _dataframeGeomTypeFrom (features) {\n        let geomType = '';\n        if (features.length > 0) {\n            // Set the geomType of the first feature to the metadata\n            geomType = dataframeGeometryType(features[0].geometry.type);\n        }\n        return geomType;\n    }\n    _sampleFeatureOnMetadata (featureProperties, sample, featureCount) {\n        if (featureCount > SAMPLE_TARGET_SIZE) {\n            const sampling = SAMPLE_TARGET_SIZE / featureCount;\n            if (Math.random() > sampling) {\n                return;\n            }\n        }\n        sample.push(featureProperties);\n    }\n\n    _addNumericPropertyToMetadata (propertyName, value) {\n        if (this._catFields.has(propertyName) || this._dateFields.has(propertyName)) {\n            throw new CartoValidationError(\n                `Unsupported GeoJSON: the property '${propertyName}' has different types in different features.`,\n                CartoValidationErrorTypes.INCORRECT_TYPE\n            );\n        }\n\n        this._addNumericColumnField(propertyName);\n        const property = this._properties[propertyName];\n        property.min = Math.min(property.min, value);\n        property.max = Math.max(property.max, value);\n        property.sum += value;\n    }\n\n    _addNumericColumnField (propertyName) {\n        if (!this._numFields.has(propertyName)) {\n            this._numFields.add(propertyName);\n            this._properties[propertyName] = {\n                type: 'number',\n                min: Number.POSITIVE_INFINITY,\n                max: Number.NEGATIVE_INFINITY,\n                avg: Number.NaN,\n                sum: 0,\n                count: 0\n            };\n        }\n    }\n\n    _addDatePropertyToMetadata (propertyName, value) {\n        if (this._catFields.has(propertyName) || this._numFields.has(propertyName)) {\n            throw new CartoRuntimeError(\n                `Unsupported GeoJSON: the property '${propertyName}' has different types in different features.`,\n                CartoRuntimeErrorTypes.NOT_SUPPORTED\n            );\n        }\n        this._addDateColumnField(propertyName);\n        const column = this._properties[propertyName];\n        const dateValue = util.castDate(value);\n        column.min = column.min ? util.castDate(Math.min(column.min, dateValue)) : dateValue;\n        column.max = column.max ? util.castDate(Math.max(column.max, dateValue)) : dateValue;\n        column.sum += value;\n        column.count++;\n    }\n\n    _addDateColumnField (propertyName) {\n        if (!this._dateFields.has(propertyName)) {\n            this._dateFields.add(propertyName);\n            this._properties[propertyName] = {\n                type: 'date',\n                min: null,\n                max: null,\n                avg: null,\n                sum: 0,\n                count: 0\n            };\n        }\n    }\n\n    _addPropertyToMetadata (propertyName, value) {\n        if (this._providedDateColumns.has(propertyName)) {\n            return this._addDatePropertyToMetadata(propertyName, value);\n        }\n        if (Number.isFinite(value)) {\n            return this._addNumericPropertyToMetadata(propertyName, value);\n        }\n        if (value === null) {\n            return;\n        }\n        this._addCategoryPropertyToMetadata(propertyName, value);\n    }\n\n    _addCategoryPropertyToMetadata (propertyName, value) {\n        if (this._numFields.has(propertyName) || this._dateFields.has(propertyName)) {\n            throw new CartoRuntimeError(\n                `Unsupported GeoJSON: the property '${propertyName}' has different types in different features.`,\n                CartoRuntimeErrorTypes.NOT_SUPPORTED\n            );\n        }\n        if (!this._catFields.has(propertyName)) {\n            this._catFields.add(propertyName);\n            this._properties[propertyName] = {\n                type: 'category',\n                categories: []\n            };\n        }\n        const property = this._properties[propertyName];\n        const cat = property.categories.find(cat => cat.name === value);\n        if (cat) {\n            cat.frequency++;\n        } else {\n            property.categories.push({ name: value, frequency: 1 });\n        }\n    }\n}\n","import * as rsys from '../../client/rsys';\nimport util from '../../utils/util';\n\n/**\n * Helper class to transform geometry coordinates from a GeoJSON.\n * It converts the original coordinates (Lng, Lat) to a rSys coords\n * (local reference system), using the 'center' parameter.\n *\n * RSys coords are in the range: -1 <= x <= +1; -1 <= y <= +1\n */\nexport default class GeoJSONGeometryTransformer {\n    constructor (center) {\n        this._center = center;\n    }\n\n    computePoint (data) {\n        const lat = data[1];\n        const lng = data[0];\n        const wm = util.projectToWebMercator({ lat, lng });\n\n        const targetReferenceSystem = {\n            scale: util.WM_R,\n            center: this._center /* */\n        };\n\n        return rsys.wToR(wm.x, wm.y, targetReferenceSystem);\n    }\n\n    computeLineString (data, reverse) {\n        let line = [];\n        for (let i = 0; i < data.length; i++) {\n            const point = this.computePoint(\n                data[reverse ? (data.length - i - 1) : i]\n            );\n            line.push(point.x, point.y);\n        }\n        return line;\n    }\n\n    computeMultiLineString (data) {\n        let multiline = [];\n        for (let i = 0; i < data.length; i++) {\n            let line = this.computeLineString(data[i]);\n            if (line.length > 0) {\n                multiline.push(line);\n            }\n        }\n        return multiline;\n    }\n\n    computePolygon (data) {\n        let polygon = {\n            flat: [],\n            holes: [],\n            clipped: []\n        };\n        let holeIndex = 0;\n        let firstReverse = false;\n\n        if (data.length) {\n            firstReverse = this._isReversed(data[0]);\n            const flat = this.computeLineString(data[0], firstReverse);\n            polygon.flat = polygon.flat.concat(flat);\n        }\n\n        for (let i = 1; i < data.length; i++) {\n            if (firstReverse !== this._isReversed(data[i])) {\n                holeIndex += data[i - 1].length;\n                polygon.holes.push(holeIndex);\n            }\n            const flat = this.computeLineString(data[i], firstReverse);\n            polygon.flat = polygon.flat.concat(flat);\n        }\n\n        return polygon;\n    }\n\n    computeMultiPolygon (data) {\n        let multipolygon = [];\n        for (let i = 0; i < data.length; i++) {\n            let polygon = this.computePolygon(data[i]);\n            if (polygon.flat.length > 0) {\n                multipolygon.push(polygon);\n            }\n        }\n        return multipolygon;\n    }\n\n    _isReversed (vertices) {\n        let total = 0;\n        let pt1 = vertices[0];\n        let pt2;\n        for (let i = 0; i < vertices.length - 1; i++) {\n            pt2 = vertices[i + 1];\n            total += (pt2[1] - pt1[1]) * (pt2[0] + pt1[0]);\n            pt1 = pt2;\n        }\n        // When total is positive it means that vertices are oriented clock wise\n        // and, since positive orientation is counter-clock wise, it is reversed.\n        return total >= 0;\n    }\n}\n","import { GEOMETRY_TYPE } from '../../utils/geometry';\n\n/**\n * Geometry types available at GeoJSON format\n */\nconst GeoJSONGeometryType = Object.freeze({\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    MULTI_LINE_STRING: 'MultiLineString',\n    POLYGON: 'Polygon',\n    MULTI_POLYGON: 'MultiPolygon'\n});\n\n/**\n * Dataframe geometry type corresponding to every GeoJSON geometry type\n */\nfunction dataframeGeometryType (geojsonGeometryType) {\n    switch (geojsonGeometryType) {\n        case GeoJSONGeometryType.POINT:\n            return GEOMETRY_TYPE.POINT;\n        case GeoJSONGeometryType.LINE_STRING:\n        case GeoJSONGeometryType.MULTI_LINE_STRING:\n            return GEOMETRY_TYPE.LINE;\n        case GeoJSONGeometryType.POLYGON:\n        case GeoJSONGeometryType.MULTI_POLYGON:\n            return GEOMETRY_TYPE.POLYGON;\n        default:\n            return '';\n    }\n}\n\nexport { GeoJSONGeometryType, dataframeGeometryType };\n","import Metadata from '../../renderer/Metadata';\nimport codecFactory from '../../codecs';\n\nexport default class GeoJSONMetadata extends Metadata {\n    setCodecs () {\n        Object.keys(this.properties).forEach(propertyName => {\n            const property = this.properties[propertyName];\n            const type = property.type;\n            if (type !== 'geometry') {\n                property.codec = codecFactory(this, type, propertyName);\n            }\n        });\n    }\n}\n","const handleCallback = (resolve, reject, callback, r) => {\n    try {\n        resolve(callback(r));\n    } catch (e) {\n        reject(e);\n    }\n};\n\nexport default class CancelablePromise {\n    static all (iterable) {\n        return new CancelablePromise((y, n) => {\n            Promise.all(iterable).then(y, n);\n        });\n    }\n\n    static race (iterable) {\n        return new CancelablePromise((y, n) => {\n            Promise.race(iterable).then(y, n);\n        });\n    }\n\n    static reject (value) {\n        return new CancelablePromise((y, n) => {\n            Promise.reject(value).then(y, n);\n        });\n    }\n\n    static resolve (value) {\n        return new CancelablePromise((y, n) => {\n            Promise.resolve(value).then(y, n);\n        });\n    }\n\n    constructor (executor) {\n        this._promise = new Promise(executor);\n        this._canceled = false;\n    }\n\n    then (success, error) {\n        const p = new CancelablePromise((resolve, reject) => {\n            this._promise.then(\n                r => {\n                    if (this._canceled) {\n                        p.cancel();\n                    }\n                    if (success && !this._canceled) {\n                        handleCallback(resolve, reject, success, r);\n                    } else {\n                        resolve(r);\n                    }\n                },\n                r => {\n                    if (this._canceled) {\n                        p.cancel();\n                    }\n                    if (error && !this._canceled) {\n                        handleCallback(resolve, reject, error, r);\n                    } else {\n                        reject(r);\n                    }\n                }\n            );\n        });\n        return p;\n    }\n\n    catch (error) {\n        return this.then(undefined, error);\n    }\n\n    cancel (errorCallback) {\n        this._canceled = true;\n        if (errorCallback) {\n            this._promise.catch(errorCallback);\n        }\n        return this;\n    }\n}\n","import { halfPlaneSign, equalPoints } from './geometry';\nimport * as lineclip from 'lineclip';\n\nconst SEPARATING_LINE_FOUND = 'separatingLineFound';\nconst SEPARATING_LINE_NOT_FOUND = 'separatingLineNotFound';\n\nexport function triangleCollides (triangle, viewportAABB) {\n    if (_noArea(triangle)) {\n        return _noAreaTriangleCollides(triangle, viewportAABB);\n    }\n\n    /*\n     * TODO\n     *\n     * Optimize triangle collision:\n     *\n     * if (_isAnyTriangleVertexInViewport(triangle, viewportAABB)) {\n     *   return true;\n     * }\n     *\n     * if (_isAnyViewportVertexInTriangle(triangle, viewport)) {\n     *   return true;\n     * }\n     */\n\n    if (_viewportLineSeparatesTriangle(viewportAABB, triangle) === SEPARATING_LINE_FOUND) {\n        return false;\n    }\n\n    const viewport = [\n        { x: viewportAABB.minx, y: viewportAABB.miny },\n        { x: viewportAABB.minx, y: viewportAABB.maxy },\n        { x: viewportAABB.maxx, y: viewportAABB.miny },\n        { x: viewportAABB.maxx, y: viewportAABB.maxy }\n    ];\n    if (_triangleLineSeparatesViewport(triangle, viewport) === SEPARATING_LINE_FOUND) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * When dealing with some triangles (such as line's triangles), repeated vertices are generated.\n * Those are not strictly triangles, as they don't have any area.\n */\nfunction _noArea (triangle) {\n    const [v1, v2, v3] = triangle;\n    return (equalPoints(v1, v2) || equalPoints(v2, v3));\n}\n\n/**\n * Calculates the collision for the special case of a no area triangle.\n * Having 2 repeated vertices, the triangle can be simplified to a line and calculate the collision using `lineclip`.\n * This algorithm also solves the issue when line vertices are completely outside the viewport and the\n * line wasn't considered an intersecting one (by the 'separating line' algorithm).\n */\nfunction _noAreaTriangleCollides (triangle, viewportAABB) {\n    const [v1, v2, v3] = triangle;\n    const a = v1;\n    const b = equalPoints(v2, a) ? v3 : v2;\n    const bbox = [viewportAABB.minx, viewportAABB.miny, viewportAABB.maxx, viewportAABB.maxy];\n    const collides = lineclip([[a.x, a.y], [b.x, b.y]], bbox);\n    return (collides.length > 0);\n}\n\n/*\n * TODO\n *\n * Optimize triangle collision:\n *\n * function _isAnyViewportVertexInTriangle (triangle, viewport) {\n *     for (let i = 0; i < viewport.length; i++) {\n *         if (pointInTriangle(viewport[i], triangle[0], triangle[1], triangle[2])) {\n *             return true;\n *         }\n *     }\n *\n *     return false;\n * }\n * function _isAnyTriangleVertexInViewport (triangle, viewportAABB) {\n *  for (let i = 0; i < 3; i++) {\n *       if (pointInRectangle(triangle[i], viewportAABB)) {\n *           return true;\n *       }\n *   }\n *   return false;\n * }\n */\n\nfunction _viewportLineSeparatesTriangle (viewportAABB, triangle) {\n    if (triangle[0].x < viewportAABB.minx &&\n        triangle[1].x < viewportAABB.minx &&\n        triangle[2].x < viewportAABB.minx) {\n        return SEPARATING_LINE_FOUND;\n    }\n\n    if (triangle[0].y < viewportAABB.miny &&\n        triangle[1].y < viewportAABB.miny &&\n        triangle[2].y < viewportAABB.miny) {\n        return SEPARATING_LINE_FOUND;\n    }\n\n    if (triangle[0].x > viewportAABB.maxx &&\n        triangle[1].x > viewportAABB.maxx &&\n        triangle[2].x > viewportAABB.maxx) {\n        return SEPARATING_LINE_FOUND;\n    }\n\n    if (triangle[0].y > viewportAABB.maxy &&\n        triangle[1].y > viewportAABB.maxy &&\n        triangle[2].y > viewportAABB.maxy) {\n        return SEPARATING_LINE_FOUND;\n    }\n\n    return SEPARATING_LINE_NOT_FOUND;\n}\n\nfunction _triangleLineSeparatesViewport (triangle, viewport) {\n    const TRIANGLE_VERTICES = 3;\n\n    for (let i = 0; i < TRIANGLE_VERTICES; i++) {\n        for (let j = 0; j < viewport.length; j++) {\n            const position = halfPlaneSign(viewport[j], triangle[i], triangle[(i + 1) % TRIANGLE_VERTICES]);\n\n            if (position > 0) {\n                break;\n            }\n\n            if (j === TRIANGLE_VERTICES) {\n                return SEPARATING_LINE_FOUND;\n            }\n        }\n    }\n\n    return SEPARATING_LINE_NOT_FOUND;\n}\n","import CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\n\nlet registeredHandlers = [];\n\n/**\n * Register an event handler for the given event name and for the given list of layers. Valid names are: `loaded`, `updated`.\n *\n * The 'loaded' event will be fired when all the layers are loaded (and their 'loaded' events are fired).\n *\n * The 'updated' event will be fired whenever one of the layers fired an 'updated' event,\n * but throttled by requestAnimationFrame to return a maximum of one event per frame.\n *\n * @param {String} eventName - Supported event names are 'loaded' and 'updated'\n * @param {carto.Layer[]} layerList - List of layers\n *\n * @memberof carto\n * @api\n */\nexport function on (eventName, layerList, callback) {\n    let internalCallbacks = [];\n    if (eventName === 'loaded') {\n        const waitingGroup = new Set(layerList);\n        layerList.forEach(layer => {\n            const internalCallback = () => {\n                waitingGroup.delete(layer);\n                if (waitingGroup.size === 0) {\n                    callback();\n                }\n            };\n            layer.on('loaded', internalCallback);\n            internalCallbacks.push(internalCallback);\n        });\n    } else if (eventName === 'updated') {\n        let scheduledRAF = false;\n        layerList.forEach(layer => {\n            const internalCallback = () => {\n                if (!scheduledRAF) {\n                    window.requestAnimationFrame(() => {\n                        scheduledRAF = false;\n                        callback();\n                    });\n                }\n            };\n            layer.on('updated', internalCallback);\n            internalCallbacks.push(internalCallback);\n        });\n    } else {\n        throw new CartoValidationError(\n            `Event name '${eventName}' is not supported by \"carto.on\". Supported event names are: 'loaded' and 'updated'.`,\n            CartoValidationErrorTypes.INCORRECT_VALUE\n        );\n    }\n    registeredHandlers.push({\n        eventName,\n        layerList,\n        callback,\n        internalCallbacks\n    });\n}\n\n/**\n* Remove an event handler for the given event name, layer list and callback.\n*\n* @param {String} eventName - event\n* @param {carto.Layer} layerList - List of layers\n* @param {function} callback - Handler function to unregister\n*\n* @memberof carto\n* @api\n*/\nexport function off (eventName, layerList, callback) {\n    registeredHandlers.forEach(register => {\n        if (register.eventName === eventName &&\n            register.layerList.every(registeredLayer => layerList.includes(registeredLayer)) &&\n            register.callback === callback) {\n            register.layerList.forEach(layer => {\n                register.internalCallbacks.forEach(internalCallback => {\n                    layer.off(eventName, internalCallback);\n                });\n            });\n        }\n    });\n    registeredHandlers = registeredHandlers.filter(register =>\n        !(\n            register.eventName === eventName &&\n            register.layerList.every(registeredLayer => layerList.includes(registeredLayer)) &&\n            register.callback === callback\n        )\n    );\n}\n","import { vec4 } from 'gl-matrix';\nimport { average } from '../renderer/viz/expressions/stats';\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\n\nexport const GEOMETRY_TYPE = {\n    UNKNOWN: 'unknown',\n    POINT: 'point',\n    LINE: 'line',\n    POLYGON: 'polygon'\n};\n\n// If AB intersects CD => return intersection point\n// Intersection method from Real Time Rendering, Third Edition, page 780\nexport function intersect (a, b, c, d) {\n    const o1 = a;\n    const o2 = c;\n    const d1 = sub(b, a);\n    const d2 = sub(d, c);\n    const d1t = perpendicular(d1);\n    const d2t = perpendicular(d2);\n\n    const s = dot(sub(o2, o1), d2t) / dot(d1, d2t);\n    const t = dot(sub(o1, o2), d1t) / dot(d2, d1t);\n\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n        return [o1[0] + s * d1[0], o1[1] + s * d1[1]];\n    }\n}\n\nexport function sub ([ax, ay], [bx, by]) {\n    return ([ax - bx, ay - by]);\n}\n\nexport function dot ([ax, ay], [bx, by]) {\n    return (ax * bx + ay * by);\n}\n\nexport function perpendicular ([x, y]) {\n    return [-y, x];\n}\n\n/**\n * Compute the normal of a line AB.\n * By definition it is the unitary vector from B to A, rotated +90 degrees counter-clockwise\n */\nexport function getLineNormal (a, b) {\n    const u = normalize(a[0] - b[0], a[1] - b[1]);\n    return [-u[1], u[0]];\n}\n\n/**\n * Compute the normal of the join from the lines' normals.\n * By definition this is the sum of the unitary vectors `u` (from B to A) and `v` (from B to C)\n * multiplied by a factor of `1/sin(theta)` to reach the intersection of the wide lines.\n * Theta is the angle between the vectors `v` and `u`. But instead of computing the angle,\n * the `sin(theta)` (with sign) is obtained directly from the vectorial product of `v` and `u`\n */\nexport function getJoinNormal (prevNormal, nextNormal) {\n    const u = [prevNormal[1], -prevNormal[0]];\n    const v = [-nextNormal[1], nextNormal[0]];\n    const sin = v[0] * u[1] - v[1] * u[0];\n    const cos = v[0] * u[0] + v[1] * u[1];\n    const factor = Math.abs(sin);\n    const miterJoin = !(factor < 0.866 && cos > 0.5); // 60 deg\n    return {\n        turnLeft: sin > 0,\n        joinNormal: miterJoin && neg([\n            (u[0] + v[0]) / factor,\n            (u[1] + v[1]) / factor\n        ])\n    };\n}\n\n/**\n * Return the negative of the provided vector\n */\nexport function neg (v) {\n    return [-v[0], -v[1]];\n}\n\n/**\n * Return the vector scaled to length 1\n */\nfunction normalize (x, y) {\n    const s = Math.hypot(x, y);\n    return [x / s, y / s];\n}\n\n// Returns true if p is inside the triangle or on a triangle's edge, false otherwise\n// Parameters in {x: 0, y:0} form\nexport function pointInTriangle (p, v1, v2, v3) {\n    // https://stackoverflow.com/questions/2049582/how-to-determine-if-a-point-is-in-a-2d-triangle\n    // contains an explanation of both this algorithm and one based on barycentric coordinates,\n    // which could be faster, but, nevertheless, it is quite similar in terms of required arithmetic operations\n\n    if (equalPoints(v1, v2) || equalPoints(v2, v3) || equalPoints(v3, v1)) {\n        // Avoid zero area triangle\n        return false;\n    }\n\n    // A point is inside a triangle or in one of the triangles edges\n    // if the point is in the three half-plane defined by the 3 edges\n    const b1 = halfPlaneSign(p, v1, v2) < 0;\n    const b2 = halfPlaneSign(p, v2, v3) < 0;\n    const b3 = halfPlaneSign(p, v3, v1) < 0;\n\n    return (b1 === b2) && (b2 === b3);\n}\n\n// Tests if a point `p` is in the half plane defined by the line with points `a` and `b`\n// Returns a negative number if the result is INSIDE, returns 0 if the result is ON_LINE,\n// returns >0 if the point is OUTSIDE\n// Parameters in {x: 0, y:0} form\nexport function halfPlaneSign (p, a, b) {\n    // We use the cross product of `PB x AB` to get `sin(angle(PB, AB))`\n    // The result's sign is the half plane test result\n    return (p.x - b.x) * (a.y - b.y) - (a.x - b.x) * (p.y - b.y);\n}\n\nexport function equalPoints (a, b) {\n    return (a.x === b.x) && (a.y === b.y);\n}\n\nexport function pointInCircle (p, center, radius) {\n    const diff = {\n        x: p.x - center.x,\n        y: p.y - center.y\n    };\n    const lengthSquared = diff.x * diff.x + diff.y * diff.y;\n    return lengthSquared <= radius * radius;\n}\n\nexport function pointInRectangle (point, bbox) {\n    if (bbox === null) {\n        return false;\n    }\n    const p = {\n        x: point.x.toFixed(2),\n        y: point.y.toFixed(2)\n    };\n\n    return ((bbox.minx <= p.x) && (p.x <= bbox.maxx) && (bbox.miny <= p.y) && (p.y <= bbox.maxy));\n}\n\n/**\n * Axis-Aligned Bounding Box (AABB). This creates a wrapping box around the geometry, without rotation.\n * This allows the use of a common technique to detect collision between features (using their corresponding AABBs).\n */\nexport function computeAABB (geometry, type) {\n    switch (type) {\n        case GEOMETRY_TYPE.POINT:\n            return [];\n        case GEOMETRY_TYPE.LINE:\n        case GEOMETRY_TYPE.POLYGON:\n            const aabbList = [];\n\n            for (let i = 0; i < geometry.length; i++) {\n                const feature = geometry[i];\n\n                let aabb = {\n                    minx: Number.POSITIVE_INFINITY,\n                    miny: Number.POSITIVE_INFINITY,\n                    maxx: Number.NEGATIVE_INFINITY,\n                    maxy: Number.NEGATIVE_INFINITY\n                };\n\n                for (let j = 0; j < feature.length; j++) {\n                    aabb = _updateAABBForGeometry(feature[j], aabb, type);\n                }\n\n                if (aabb.minx === Number.POSITIVE_INFINITY) {\n                    aabb = null;\n                }\n\n                aabbList.push(aabb);\n            }\n\n            return aabbList;\n    }\n}\n\nexport function computeCentroids (decodedGeometry, type) {\n    switch (type) {\n        case GEOMETRY_TYPE.POINT:\n            return _computeCentroidsForPoints(decodedGeometry);\n        case GEOMETRY_TYPE.LINE:\n        case GEOMETRY_TYPE.POLYGON:\n            return _computeCentroidsForLinesOrPolygons(decodedGeometry, type);\n        default:\n            throw new CartoValidationError(\n                'Invalid type argument, decoded geometry must have a point, line or polygon type.',\n                CartoValidationErrorTypes.INCORRECT_VALUE\n            );\n    }\n}\n\nfunction _computeCentroidsForPoints (decodedGeometry) {\n    const centroids = [];\n\n    // 'Compute' centroids for points is just getting one exemplar from the 3 repeated points\n    const STEP = 6;\n    for (let i = 0; i < decodedGeometry.vertices.length / STEP; i++) {\n        const start = i * STEP;\n        const end = start + STEP;\n        const [, , , , x, y] = decodedGeometry.vertices.slice(start, end);\n        centroids.push({ x, y });\n    }\n    return centroids;\n}\n\nfunction _computeCentroidsForLinesOrPolygons (decodedGeometry, type) {\n    const centroids = [];\n\n    let startVertex = 0;\n    decodedGeometry.breakpoints.forEach((breakpoint) => {\n        const vertices = decodedGeometry.vertices.slice(startVertex, breakpoint);\n        let centroid = null;\n        if (type === GEOMETRY_TYPE.LINE) {\n            centroid = _centroidForLines(vertices);\n        } else {\n            centroid = _centroidForPolygons(vertices);\n        }\n        centroids.push(centroid);\n        startVertex = breakpoint;\n    });\n\n    return centroids;\n}\n\nfunction _centroidForLines (vertices) {\n    // Triangles don't have any area in this case, so just average coordinates are calculated\n    const Xs = [];\n    const Ys = [];\n    const STEP = 6;\n    for (let i = 0; i < vertices.length / STEP; i++) {\n        const start = i * STEP;\n        const end = start + STEP;\n        const [xA, yA, xB, yB, xC, yC] = vertices.slice(start, end);\n\n        const AequalB = (xA === xB && yA === yB);\n        const BequalC = (xB === xC && yB === yC);\n\n        if (AequalB && BequalC) {\n            continue; // spurious triangles (useful for rendering strokes with normals, not here)\n        }\n\n        const firstPoint = [xA, yA];\n        const secondPoint = !AequalB ? [xB, yB] : [xC, yC];\n\n        Xs.push(firstPoint[0]);\n        Xs.push(secondPoint[0]);\n\n        Ys.push(firstPoint[1]);\n        Ys.push(secondPoint[1]);\n    }\n\n    let centroid = {\n        x: average(Xs),\n        y: average(Ys)\n    };\n    return centroid;\n}\n\nfunction _centroidForPolygons (vertices) {\n    // Triangles average coordinates, ponderated by their area\n    const weightedXs = [];\n    const weightedYs = [];\n    const areas = [];\n\n    const STEP = 6;\n    for (let i = 0; i < vertices.length / STEP; i++) {\n        const start = i * STEP;\n        const end = start + STEP;\n        const [xA, yA, xB, yB, xC, yC] = vertices.slice(start, end);\n        const triangle = [[xA, yA], [xB, yB], [xC, yC]];\n        const area = triangleArea(triangle);\n        if (area > 0) {\n            const averageX = average([xA, xB, xC]);\n            const averageY = average([yA, yB, yC]);\n\n            weightedXs.push(averageX * area);\n            weightedYs.push(averageY * area);\n            areas.push(area);\n        }\n    }\n    const totalWeight = _sumArray(areas);\n\n    let centroid = {\n        x: _sumArray(weightedXs) / totalWeight,\n        y: _sumArray(weightedYs) / totalWeight\n    };\n    return centroid;\n}\n\nfunction _sumArray (array) {\n    return array.reduce((p, c) => p + c, 0);\n}\n\n/*\n* Calculate the area of a triangle using its coordinates.\n* From https://en.wikipedia.org/wiki/Triangle#Computing_the_area_of_a_triangle\n*/\nexport function triangleArea (threeVerticesArray) {\n    let [xA, yA] = threeVerticesArray[0];\n    let [xB, yB] = threeVerticesArray[1];\n    let [xC, yC] = threeVerticesArray[2];\n\n    const area = Math.abs((xA - xC) * (yB - yA) - (xA - xB) * (yC - yA)) / 2.0;\n    return area;\n}\n\n// Compute the WebMercator position at projected (x,y) NDC (Normalized Device Coordinates) reversing the projection of the point\nexport function unproject (inv, x, y) {\n    // To unproject a point we need the 3 coordinates (x,y,z)\n    // The `z` coordinate can be computed by knowing that the unprojected `z` is equal to `0` (since the map is a 2D plane)\n    // defined at `z=0`\n\n    // Since a matrix-vector multiplication is a linear transform we know that\n    //      z = m * projectedZ + k\n    // Being `m` and `k` constants for a particular value of projected `x` and `y` coordinates\n\n    // With that equation and the inverse matrix of the projection we can establish an equation system of the form:\n    //      v1 = m * v2 + k\n    //      v3 = m * v4 + k\n    // Where `v2` and `v4` can be arbitrary values (but not equal to each other) and\n    // `v1` and `v3` can be computed by using the inverse matrix knowing that:\n    //      (_, _, v1,_) = inverse(projectionMatrix) * (projectedX, projectedY, v2, 1)\n    //      (_, _, v3,_) = inverse(projectionMatrix) * (projectedX, projectedY, v4, 1)\n\n    // By resolving the the equation system above computing `m` and `k` values\n    // we can compute the projected Z coordinate at the (x,y) NDC (projected) point\n\n    // With (projectedX, projectedY, projectedZ) we can compute the unprojected point by multiplying by the inverse matrix\n\n    // *** Implementation ***\n\n    // compute m, k for: [z = m*projectedZ + k]\n    const v2 = 1;\n    const v4 = 2;\n\n    const v1 = vec4.transformMat4([], [x, y, v2, 1], inv)[2];\n    const v3 = vec4.transformMat4([], [x, y, v4, 1], inv)[2];\n\n    // Solve the equation system by using the elimination method (subtraction of the equations)\n    //      (v1-v3) = (v2-v4)*m\n    //      m = (v1 - v3) / (v2 - v4)\n    const m = (v1 - v3) / (v2 - v4);\n    // Substituting in the first equation `m` and solving for `k`\n    const k = v1 - m * v2;\n\n    // compute projectedZ by solving `z = m * projectedZ + k` knwoing `z`, `m` and `k`\n    const projectedZ = -k / m;\n\n    // Inverse the projection and normalize by `p.w`\n    return vec4.transformMat4([], [x, y, projectedZ, 1], inv).map((v, _, point) => v / point[3]);\n}\n\nfunction _updateAABBForGeometry (feature, aabb, geometryType) {\n    switch (geometryType) {\n        case GEOMETRY_TYPE.LINE:\n            return _updateAABBLine(feature, aabb);\n        case GEOMETRY_TYPE.POLYGON:\n            return _updateAABBPolygon(feature, aabb);\n    }\n}\n\nfunction _updateAABBLine (line, aabb) {\n    const vertices = line;\n    const numVertices = line.length;\n\n    for (let i = 0; i < numVertices; i += 2) {\n        aabb.minx = Math.min(aabb.minx, vertices[i + 0]);\n        aabb.miny = Math.min(aabb.miny, vertices[i + 1]);\n        aabb.maxx = Math.max(aabb.maxx, vertices[i + 0]);\n        aabb.maxy = Math.max(aabb.maxy, vertices[i + 1]);\n    }\n\n    return aabb;\n}\n\nfunction _updateAABBPolygon (polygon, aabb) {\n    const [vertices, numVertices] = [polygon.flat, polygon.holes[0] || polygon.flat.length / 2];\n\n    for (let i = 0; i < numVertices; i++) {\n        aabb.minx = Math.min(aabb.minx, vertices[2 * i + 0]);\n        aabb.miny = Math.min(aabb.miny, vertices[2 * i + 1]);\n        aabb.maxx = Math.max(aabb.maxx, vertices[2 * i + 0]);\n        aabb.maxy = Math.max(aabb.maxy, vertices[2 * i + 1]);\n    }\n\n    return aabb;\n}\n\nexport default {\n    intersect,\n    sub,\n    dot,\n    perpendicular,\n    getLineNormal,\n    getJoinNormal,\n    neg,\n    halfPlaneSign,\n    pointInTriangle,\n    equalPoints,\n    pointInCircle,\n    pointInRectangle\n};\n","import periodISO from './periodISO';\nimport parseISO from './parseISO';\nimport timeZoneDate from './TimeZoneDate';\n\n/**\n * Class TimeRange represents an interval of time between to instants.\n *\n * Only single unit-of-time intervals such as a calender year, month, day, hour, etc.\n * are supported, arbitrary intervals are not.\n *\n * A TimeRange can be defined and accessed either by its start and end instants\n * or by an abbreviated ISO-formatted textual representation.\n * For the text format, since general intervals are not supported, the ISO interval\n * format is not used, but simply the abbreviated form of the time unit.\n * For example, to represent March 2018, `2018-03` is used instead of the\n * ISO-formatted interval `018-03-01T00:00:00/2018-04-01T00:00:00`.\n *\n * A TimeRange includes its start instant and excludes the end instant:\n * it represents the semi-open interval start <= t < end.\n *\n * @param {String} timezone - Time zone of the range; informational only.\n * @param {String} text - text representation of the range\n * @param {Number} startValue - start of the range as elapsed milliseconds since a timezone-specific epoch\n * @param {Number} endValue - end of the range as elapsed milliseconds since a timezone-specific epoch\n *\n * @constructor Layer\n * @name carto.TimeRange\n * @api\n * */\nexport default class TimeRange {\n    constructor (timeZone, iso, startValue, endValue) {\n        this._startValue = startValue;\n        this._endValue = endValue;\n\n        if (startValue && endValue) {\n            this._iso = periodISO(startValue, endValue);\n        } else if (!startValue && !endValue && iso) {\n            const startEndValues = _startEndTimeValues(iso);\n\n            this._iso = iso;\n            this._startValue = startEndValues[0];\n            this._endValue = startEndValues[1];\n        }\n\n        // The timezone of a TimeRange is merely informative.\n        // No time zone conversion is ever performed, e.g. when\n        // several ranges are used in the same linear expression.\n        // In same cases (e.g. defining a time range from a text constant)\n        // it may not be available.\n        this._timeZone = timeZone;\n    }\n\n    get timeZone () {\n        return this._timeZone;\n    }\n\n    get iso () {\n        return this._iso;\n    }\n\n    get startValue () {\n        return this._startValue;\n    }\n\n    get endValue () {\n        return this._endValue;\n    }\n\n    get startDate () {\n        return timeZoneDate.fromValue(this._startValue, this._timeZone);\n    }\n\n    get endDate () {\n        return timeZoneDate.fromValue(this._endValue, this._timeZone);\n    }\n}\n\nfunction _timeValue (parsed) {\n    return Date.UTC(\n        parsed.year,\n        parsed.month - 1,\n        parsed.day,\n        parsed.hour,\n        parsed.minute,\n        parsed.second\n    );\n}\n\nfunction _startEndTimeValues (iso) {\n    return parseISO(iso).map(_timeValue);\n}\n","import { msToDate } from '../util';\nimport periodISO from './periodISO';\n\n// Time-zone neutral date\n// TODO: name: TimeZoneLessDate, NeutralDate, DateWithoutTimeZone, ...\n// it has an optional informational time zone string to declare the\n// original TZ\n// The idea is that this represent a date, just like a Date object,\n// but in relation ot some externally defined time zone\n// (the time zone specified in a clusterTime expression),\n// so we want to avoid the time zone handling that Date does.\n// (this dates cannot be converted from the tz they're specified in,\n// not even to UTC)\nexport default class TimeZoneDate {\n    constructor (milliseconds, tz) {\n        this._value = milliseconds;\n        this._date = msToDate(milliseconds);\n        this._timeZone = tz; // informational\n    }\n\n    static fromValue (milliseconds, tz) {\n        return new TimeZoneDate(milliseconds, tz);\n    }\n\n    static from (year, month, day, hour, minute, second, tz) {\n        return this.fromValue(Date.UTC(year, (month || 1) - 1, day, hour, minute, second), tz);\n    }\n\n    get year () {\n        return this._date.getUTCFullYear();\n    }\n    get month () {\n        return this._date.getUTCMonth() + 1;\n    }\n    get day () {\n        return this._date.getUTCDate();\n    }\n    get hour () {\n        return this._date.getUTCHours();\n    }\n    get minute () {\n        return this._date.getUTCMinutes();\n    }\n    get second () {\n        return this._date.getUTCSeconds();\n    }\n    get text () {\n        return periodISO(this._date.getTime(), this._date.getTime() + 1000);\n    }\n    get timeZone () {\n        return this._timeZone;\n    }\n}\n","import CartoParsingError from '../../errors/carto-parsing-error';\n\nclass IsoParser {\n    constructor (format) {\n        this._format = format;\n    }\n    check (iso) {\n        return iso.match(this._format);\n    }\n}\n\nfunction fieldDefault (value, defaultValue) {\n    return (value === undefined) ? defaultValue : Number(value);\n}\n\nfunction dateFields (fields) {\n    return {\n        year: fieldDefault(fields.year, 1),\n        month: fieldDefault(fields.month, 1),\n        day: fieldDefault(fields.day, 1),\n        hour: fieldDefault(fields.hour, 0),\n        minute: fieldDefault(fields.minute, 0),\n        second: fieldDefault(fields.second, 0)\n    };\n}\n\nfunction fieldsFromMatch (match) {\n    return dateFields({\n        year: match[1],\n        month: match[2],\n        day: match[3],\n        hour: match[4],\n        minute: match[5],\n        second: match[6]\n    });\n}\n\nclass YMDHMSParser extends IsoParser {\n    constructor () {\n        super(/^(\\d\\d\\d\\d)(?:\\-?(\\d\\d)(?:\\-?(\\d\\d)(?:[T\\s]?(\\d\\d)(?:\\:(\\d\\d)(?:\\:(\\d\\d))?)?)?)?)?$/);\n    }\n    parse (iso) {\n        const start = this.check(iso) || [];\n        const end = start.slice();\n        const i = [1, 2, 3, 4, 5, 6].find(i => end[i] === undefined) || 7;\n        if (i === 1) {\n            end[1] = 2;\n        } else {\n            end[i - 1] = Number(end[i - 1]) + 1;\n        }\n        return [ fieldsFromMatch(start), fieldsFromMatch(end) ];\n    }\n}\n\nclass MillenniumParser extends IsoParser {\n    constructor () {\n        super(/^M(\\d+)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const m = Number(match[1]);\n        const year = m => (m - 1) * 1000 + 1;\n        return [\n            dateFields({ year: year(m) }),\n            dateFields({ year: year(m + 1) })\n        ];\n    }\n}\n\nclass CenturyParser extends IsoParser {\n    constructor () {\n        super(/^C(\\d+)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const c = Number(match[1]);\n        const year = c => (c - 1) * 100 + 1;\n        return [\n            dateFields({ year: year(c) }),\n            dateFields({ year: year(c + 1) })\n        ];\n    }\n}\n\nclass DecadeParser extends IsoParser {\n    constructor () {\n        super(/^D(\\d+)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const d = Number(match[1]);\n        const year = d => d * 10;\n        return [\n            dateFields({ year: year(d) }),\n            dateFields({ year: year(d + 1) })\n        ];\n    }\n}\n\nclass SemesterParser extends IsoParser {\n    constructor () {\n        super(/^(\\d\\d\\d\\d)S(\\d)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const year = Number(match[1]);\n        const s = Number(match[2]);\n        const month = s => (s - 1) * 6 + 1;\n        return [\n            dateFields({ year, month: month(s) }),\n            dateFields({ year, month: month(s + 1) })\n        ];\n    }\n}\n\nclass TrimesterParser extends IsoParser {\n    constructor () {\n        super(/^(\\d\\d\\d\\d)t(\\d)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const year = Number(match[1]);\n        const t = Number(match[2]);\n        const month = t => (t - 1) * 4 + 1;\n        return [\n            dateFields({ year, month: month(t) }),\n            dateFields({ year, month: month(t + 1) })\n        ];\n    }\n}\n\nclass QuarterParser extends IsoParser {\n    constructor () {\n        super(/^(\\d\\d\\d\\d)\\-?Q(\\d)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const year = Number(match[1]);\n        const q = Number(match[2]);\n        const month = q => (q - 1) * 3 + 1;\n        return [\n            dateFields({ year, month: month(q) }),\n            dateFields({ year, month: month(q + 1) })\n        ];\n    }\n}\n\nfunction isoDow (y, m, d) {\n    const dow = (new Date(y, m - 1, d)).getDay();\n    return dow === 0 ? 7 : dow;\n}\n\nfunction addDays (date, days) {\n    const newDate = new Date(date.valueOf());\n    newDate.setDate(newDate.getDate() + days);\n    return newDate;\n}\n\n// compute start date of yWw\nfunction startOfIsoWeek (y, w) {\n    const dow = isoDow(y, 1, 1);\n    const startDay = dow > 4 ? 9 - dow : 2 - dow;\n    const startDate = new Date(y, 0, startDay);\n    return addDays(startDate, (w - 1) * 7);\n}\n\nclass WeekParser extends IsoParser {\n    constructor () {\n        super(/^(\\d\\d\\d\\d)\\-?W(\\d\\d)$/);\n    }\n    parse (iso) {\n        const match = this.check(iso);\n        const year = Number(match[1]);\n        const week = Number(match[2]);\n        const start = startOfIsoWeek(year, week);\n        const end = startOfIsoWeek(year, week + 1);\n        const fields = date => ({\n            year: date.getFullYear(),\n            month: date.getMonth() + 1,\n            day: date.getDate()\n        });\n        return [\n            dateFields(fields(start)),\n            dateFields(fields(end))\n        ];\n    }\n}\n\nconst isoFormats = [\n    new MillenniumParser(),\n    new CenturyParser(),\n    new DecadeParser(),\n    new SemesterParser(),\n    new TrimesterParser(),\n    new QuarterParser(),\n    new WeekParser(),\n    new YMDHMSParser()\n];\n\nfunction findParser (iso) {\n    return isoFormats.find(parser => parser.check(iso));\n}\n\nexport default function parseISO (iso) {\n    iso = iso || '';\n    const parser = findParser(iso);\n    if (!parser) {\n        throw new CartoParsingError(`No date parser found for ${iso}`);\n    }\n    return parser.parse(iso);\n}\n","import { msToDate } from '../util';\n\nconst TIME_LEVELS = ['year', 'month', 'day', 'hour', 'minute', 'second'];\nconst TIME_STARTS = [1, 1, 1, 0, 0, 0];\nconst YEAR_LEVEL = 0;\nconst MONTH_LEVEL = 1;\nconst DAY_LEVEL = 2;\nconst HOUR_LEVEL = 3;\nconst MINUTE_LEVEL = 4;\nconst SECOND_LEVEL = 5;\n\nconst MS_PER_DAY = 86400000;\nconst MS_PER_HOUR = 3600000;\nconst MS_PER_MINUTE = 60000;\nconst MS_PER_S = 1000;\n\nfunction startLevel (parsed) {\n    let i = TIME_LEVELS.length - 1;\n    while (i > 0 && parsed[TIME_LEVELS[i]] === TIME_STARTS[i]) {\n        --i;\n    }\n    return i;\n}\n\nfunction pad (x, n) {\n    return x.toString().padStart(n, '0');\n}\n\nfunction parsedValue (dateValue) {\n    const date = msToDate(dateValue);\n    return {\n        year: date.getUTCFullYear(),\n        month: date.getUTCMonth() + 1,\n        day: date.getUTCDate(),\n        hour: date.getUTCHours(),\n        minute: date.getUTCMinutes(),\n        second: date.getUTCSeconds()\n    };\n}\n\nfunction isoDow (y, m, d) {\n    const dow = (new Date(y, m - 1, d)).getDay();\n    return dow === 0 ? 7 : dow;\n}\n\nfunction invalidPeriod (period, invalid) {\n    throw new Error(`Invalid period of ${invalid} between ${period.v1} and ${period.v2}`);\n}\n\n// Return year and week number given year and day number\nfunction yearWeek (y, yd) {\n    const dow = isoDow(y, 1, 1);\n    const start = dow > 4 ? 9 - dow : 2 - dow;\n    if ((Math.abs(yd - start) % 7) !== 0) {\n        // y yd is not the start of any week\n        return [];\n    }\n    if (yd < start) {\n        // The week starts before the first week of the year => go back one year\n        yd += Math.round((Date.UTC(y, 0, 1) - Date.UTC(y - 1, 0, 1)) / MS_PER_DAY);\n        return yearWeek(y - 1, yd);\n    } else if (Date.UTC(y, 0, 1) + (yd - 1 + 3) * MS_PER_DAY >= Date.UTC(y + 1, 0, 1)) {\n        // The Wednesday (start of week + 3) lies in the next year => advance one year\n        yd -= Math.round((Date.UTC(y + 1, 0, 1) - Date.UTC(y, 0, 1)) / MS_PER_DAY);\n        return yearWeek(y + 1, yd);\n    }\n    return [y, 1 + Math.round((yd - start) / 7)];\n}\n\nfunction yearsPeriod (period) {\n    const d = period.t2['year'] - period.t1['year'];\n    if (d === 1000 && ((period.t1['year'] - 1) % 1000) === 0) {\n        // millennium\n        return `M${1 + (period.t1['year'] - 1) / 1000}`;\n    } else if (d === 100 && ((period.t1['year'] - 1) % 100) === 0) {\n        // century\n        return `C${1 + (period.t1['year'] - 1) / 100}`;\n    } else if (d === 10 && (period.t1['year'] % 10) === 0) {\n        // decade\n        return `D${period.t1['year'] / 10}`;\n    } else if (d === 1) {\n        // year\n        return pad(period.t1['year'], 4);\n    } else {\n        invalidPeriod(`${d} years`);\n    }\n}\n\nfunction monthsPeriod (period) {\n    const d = 12 * period.t2['year'] + period.t2['month'] - 12 * period.t1['year'] - period.t1['month'];\n    if (d === 6 && ((period.t1['month'] - 1) % 6) === 0) {\n        // semester\n        return `${pad(period.t1['year'], 4)}S${1 + (period.t1['month'] - 1) / 6}`;\n    } else if (d === 4) {\n        // trimester\n        return `${pad(period.t1['year'], 4)}t${1 + (period.t1['month'] - 1) / 4}`;\n    } else if (d === 3) {\n        // quarter\n        return `${pad(period.t1['year'], 4)}-Q${1 + (period.t1['month'] - 1) / 3}`;\n    } else if (d === 1) {\n        // month\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}`;\n    } else {\n        invalidPeriod(`${d} months`);\n    }\n}\n\nfunction daysPeriod (period) {\n    const d = Math.round((period.v2 - period.v1) / MS_PER_DAY);\n    if (d === 1) {\n        // day\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}`;\n    } else if (d === 7) {\n        // week\n        let y = period.t1['year'];\n        const v0 = Date.UTC(y, 0, 1);\n        let yd = 1 + Math.round((period.v1 - v0) / MS_PER_DAY);\n        const [iy, w] = yearWeek(y, yd);\n        if (iy && w) {\n            return `${pad(iy, 4)}-W${pad(w, 2)}`;\n        }\n        invalidPeriod('7 days');\n    } else {\n        invalidPeriod(`${d} days`);\n    }\n}\n\nfunction hoursPeriod (period) {\n    const d = Math.round((period.v2 - period.v1) / MS_PER_HOUR);\n    if (d === 1) {\n        // hour\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}T${pad(period.t1['hour'], 2)}`;\n    } else {\n        invalidPeriod(`${d} hours`);\n    }\n}\n\nfunction minutesPeriod (period) {\n    const d = Math.round((period.v2 - period.v1) / MS_PER_MINUTE);\n    if (d === 1) {\n        // minute\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}T${pad(period.t1['hour'], 2)}:${pad(period.t1['minute'], 2)}`;\n    } else {\n        invalidPeriod(`${d} minutes`);\n    }\n}\n\nfunction secondsPeriod (period) {\n    const d = Math.round((period.v2 - period.v1) / MS_PER_S);\n    if (d === 1) {\n        // second\n        return `${pad(period.t1['year'], 4)}-${pad(period.t1['month'], 2)}-${pad(period.t1['day'], 2)}T${pad(period.t1['hour'], 2)}:${pad(period.t1['minute'], 2)}:${pad(period.t1['second'], 2)}`;\n    } else {\n        invalidPeriod(`${d} seconds`);\n    }\n}\n\nexport default function periodISO (v1, v2) {\n    const t1 = parsedValue(v1);\n    const t2 = parsedValue(v2);\n    const l1 = startLevel(t1);\n    const l2 = startLevel(t2);\n    const period = { v1, v2, t1, t2 };\n\n    if (Math.max(l1, l2) === YEAR_LEVEL) {\n        return yearsPeriod(period);\n    } else if (Math.max(l1, l2) === MONTH_LEVEL) {\n        return monthsPeriod(period);\n    } else if (Math.max(l1, l2) === DAY_LEVEL) {\n        return daysPeriod(period);\n    } else if (Math.max(l1, l2) === HOUR_LEVEL) {\n        return hoursPeriod(period);\n    } else if (Math.max(l1, l2) === MINUTE_LEVEL) {\n        return minutesPeriod(period);\n    } else if (Math.max(l1, l2) === SECOND_LEVEL) {\n        return secondsPeriod(period);\n    }\n    invalidPeriod(period, 'fractional seconds');\n}\n","import TimeRange from './time/TimeRange';\nimport { mat4 } from 'gl-matrix';\nimport { unproject } from './geometry';\n\n/**\n * Export util functions\n */\nimport CartoValidationError, { CartoValidationErrorTypes } from '../errors/carto-validation-error';\n\nconst DEG2RAD = Math.PI / 180;\nconst EARTH_RADIUS = 6378137;\nexport const WM_R = EARTH_RADIUS * Math.PI; // Webmercator *radius*: half length Earth's circumference\nexport const WM_2R = WM_R * 2; // Webmercator coordinate range (Earth's circumference)\n\nexport function isUndefined (value) {\n    return value === undefined;\n}\n\nexport function isString (value) {\n    return typeof value === 'string';\n}\n\nexport function isNumber (value) {\n    return typeof value === 'number';\n}\n\nexport function isObject (value) {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n}\n\nexport function regExpThatContains (text) {\n    const escaped = text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // in case it has special symbols\n    return new RegExp(escaped);\n}\n\n/**\n * Transform the given parameter into a Date object.\n * When a number is given as a parameter is assumed to be a milliseconds epoch (UTC).\n * The result is a local Date.\n * @param {Date|number|string} date\n */\nexport function castDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    if (typeof (date) === 'number') {\n        return msToDate(date);\n    }\n\n    if (isString(date)) {\n        return new Date(date);\n    } else {\n        throw new CartoValidationError(\n            'Invalid Date type',\n            CartoValidationErrorTypes.INCORRECT_TYPE\n        );\n    }\n}\n\nexport function msToDate (msEpoch) {\n    return new Date(msEpoch);\n}\n\nexport function isSetsEqual (a, b) {\n    return a.size === b.size && [...a].every(value => b.has(value));\n}\n\nexport function equalArrays (a, b) {\n    if (a && b && a.length === b.length) {\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport function projectToWebMercator (latLng) {\n    let lat = latLng.lat * DEG2RAD;\n    let lng = latLng.lng * DEG2RAD;\n    return {\n        x: lng * EARTH_RADIUS,\n        y: Math.log(Math.tan(lat / 2 + Math.PI / 4)) * EARTH_RADIUS\n    };\n}\n\nexport function computeMatrixZoom (matrix) {\n    // The matrix projects spherical mercator coordinates to gl coordinates\n    return -(2 * matrix[15] / matrix[5]);\n}\n\nexport function computeMatrixCenter (matrix) {\n    // The matrix projects spherical mercator coordinates to gl coordinates\n    return {\n        x: -(1 + 2 * matrix[12] / matrix[0]),\n        y: +(1 + 2 * matrix[13] / matrix[5])\n    };\n}\n\nexport function computeViewportFromCameraMatrix (matrix) {\n    const inv = mat4.invert([], matrix);\n\n    const corners = [\n        [-1, -1],\n        [-1, 1],\n        [1, -1],\n        [1, 1]\n    ].map(NDC =>\n        unproject(inv, ...NDC)\n    ).map(c =>\n        // Our API works on the [-1,1] range, convert from [0,1] range to  [-1, 1] range\n        c.map(x => x * 2 - 1)\n    );\n\n    // Rotation no longer guarantees that corners[0] will be the minimum point of the AABB and corners[3] the maximum,\n    // we need to compute the AABB min/max by iterating\n    const min = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY];\n    const max = [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\n    corners.forEach(corner => {\n        min[0] = Math.min(min[0], corner[0]);\n        min[1] = Math.min(min[1], corner[1]);\n        max[0] = Math.max(max[0], corner[0]);\n        max[1] = Math.max(max[1], corner[1]);\n    });\n\n    // Our API flips the `y` coordinate, we need to convert the values accordingly\n    min[1] = -min[1];\n    max[1] = -max[1];\n    const temp = min[1];\n    min[1] = max[1];\n    max[1] = temp;\n\n    return [...min, ...max];\n}\n\nexport default {\n    WM_R,\n    WM_2R,\n    isUndefined,\n    isString,\n    isNumber,\n    isObject,\n    castDate,\n    isSetsEqual,\n    equalArrays,\n    projectToWebMercator,\n    computeMatrixZoom,\n    computeMatrixCenter,\n    computeViewportFromCameraMatrix\n};\n\nexport function castTimeRange (value, timeZone = null) {\n    if (value === undefined || isTimeRange(value)) {\n        if (value && timeZone) {\n            return timeRange({ iso: value._iso, timeZone });\n        }\n        return value;\n    }\n\n    if (typeof value === 'string') {\n        return timeRange({ iso: value, timeZone });\n    }\n}\n\nexport function timeRange (parameters) {\n    const { start, end, iso, timeZone } = parameters;\n\n    return new TimeRange(timeZone, iso, start, end);\n}\n\nexport function isTimeRange (t) {\n    return t instanceof TimeRange;\n}\n"],"sourceRoot":""}